ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"OneWire_TimerDelay.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	OneWire_TimerDelay_initVar
  20              		.bss
  21              		.type	OneWire_TimerDelay_initVar, %object
  22              		.size	OneWire_TimerDelay_initVar, 1
  23              	OneWire_TimerDelay_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.OneWire_TimerDelay_Init,"ax",%progbits
  26              		.align	2
  27              		.global	OneWire_TimerDelay_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	OneWire_TimerDelay_Init, %function
  31              	OneWire_TimerDelay_Init:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\OneWire_TimerDelay.c"
   1:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * File Name: OneWire_TimerDelay.c
   3:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Version 2.80
   4:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
   5:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Description:
   6:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  or a capture event.
  14:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
  15:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Note:
  16:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
  17:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
  18:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  24:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #include "OneWire_TimerDelay.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 2


  25:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  26:Generated_Source\PSoC4/OneWire_TimerDelay.c **** uint8 OneWire_TimerDelay_initVar = 0u;
  27:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  28:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  29:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
  30:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_Init
  31:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
  32:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
  33:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
  34:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
  36:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
  37:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
  38:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
  39:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
  40:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
  41:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
  42:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
  43:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_Init(void) 
  44:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
  34              		.loc 1 44 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 90B5     		push	{r4, r7, lr}
  39              		.cfi_def_cfa_offset 12
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              		.cfi_def_cfa_offset 24
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if(!OneWire_TimerDelay_UsingFixedFunction)
  46:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             uint8 OneWire_TimerDelay_interruptState;
  48:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  50:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (OneWire_TimerDelay_UsingFixedFunction)
  51:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL &= OneWire_TimerDelay_CTRL_ENABLE;
  53:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  54:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             OneWire_TimerDelay_CONTROL2 &= ((uint8)(~OneWire_TimerDelay_CTRL_MODE_MASK));
  57:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  59:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             OneWire_TimerDelay_CONTROL3 &= ((uint8)(~OneWire_TimerDelay_CTRL_MODE_MASK));
  61:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  63:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (OneWire_TimerDelay_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             OneWire_TimerDelay_CONTROL |= 0x04u;
  67:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 3


  69:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (OneWire_TimerDelay_RunModeUsed == 2)
  70:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  76:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  82:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  84:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (OneWire_TimerDelay_UsingHWEnable != 0)
  85:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL2 |= OneWire_TimerDelay_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  90:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL3 &= ((uint8)(~OneWire_TimerDelay_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL3 |= OneWire_TimerDelay_CTRL_RCOD;
  94:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  95:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL3 &= ((uint8)(~OneWire_TimerDelay_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL3 |= OneWire_TimerDelay_CTRL_ENBL;
  98:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
  99:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 OneWire_TimerDelay_CONTROL3 |= OneWire_TimerDelay_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 103:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 105:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_RT1 &= ((uint8)(~OneWire_TimerDelay_RT1_MASK));
 107:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_RT1 |= OneWire_TimerDelay_SYNC;
 108:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 109:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_RT1 &= ((uint8)(~OneWire_TimerDelay_SYNCDSI_MASK));
 111:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_RT1 |= OneWire_TimerDelay_SYNCDSI_EN;
 112:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 113:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL2 |= OneWire_TimerDelay_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 117:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     OneWire_TimerDelay_WritePeriod(OneWire_TimerDelay_INIT_PERIOD);
  47              		.loc 1 118 0
  48 0006 124B     		ldr	r3, .L2
  49 0008 1800     		movs	r0, r3
  50 000a FFF7FEFF 		bl	OneWire_TimerDelay_WritePeriod
 119:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     OneWire_TimerDelay_WriteCounter(OneWire_TimerDelay_INIT_PERIOD);
  51              		.loc 1 119 0
  52 000e 104B     		ldr	r3, .L2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 4


  53 0010 1800     		movs	r0, r3
  54 0012 FFF7FEFF 		bl	OneWire_TimerDelay_WriteCounter
 120:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 121:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (OneWire_TimerDelay_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CAPTURE_COUNT_CTRL |= OneWire_TimerDelay_CNTR_ENABLE;
 123:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_SetCaptureCount(OneWire_TimerDelay_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 126:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UsingFixedFunction)
 127:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (OneWire_TimerDelay_SoftwareCaptureMode)
 128:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             OneWire_TimerDelay_SetCaptureMode(OneWire_TimerDelay_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 131:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (OneWire_TimerDelay_SoftwareTriggerMode)
 132:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 if (0u == (OneWire_TimerDelay_CONTROL & OneWire_TimerDelay__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 {
 135:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                     OneWire_TimerDelay_SetTriggerMode(OneWire_TimerDelay_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC4/OneWire_TimerDelay.c ****                 }
 137:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             #endif /* (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 140:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_interruptState = CyEnterCriticalSection();
  55              		.loc 1 142 0
  56 0016 FC1D     		adds	r4, r7, #7
  57 0018 FFF7FEFF 		bl	CyEnterCriticalSection
  58 001c 0300     		movs	r3, r0
  59 001e 2370     		strb	r3, [r4]
 143:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 144:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_STATUS_AUX_CTRL |= OneWire_TimerDelay_STATUS_ACTL_INT_EN_MASK;
  60              		.loc 1 145 0
  61 0020 0C4A     		ldr	r2, .L2+4
  62 0022 0C4B     		ldr	r3, .L2+4
  63 0024 1B78     		ldrb	r3, [r3]
  64 0026 DBB2     		uxtb	r3, r3
  65 0028 1021     		movs	r1, #16
  66 002a 0B43     		orrs	r3, r1
  67 002c DBB2     		uxtb	r3, r3
  68 002e 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 147:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         CyExitCriticalSection(OneWire_TimerDelay_interruptState);
  69              		.loc 1 148 0
  70 0030 FB1D     		adds	r3, r7, #7
  71 0032 1B78     		ldrb	r3, [r3]
  72 0034 1800     		movs	r0, r3
  73 0036 FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 150:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (OneWire_TimerDelay_EnableTriggerMode)
 151:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             OneWire_TimerDelay_EnableTrigger();
  74              		.loc 1 151 0
  75 003a FFF7FEFF 		bl	OneWire_TimerDelay_EnableTrigger
 152:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 		
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 5


 154:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 		
 155:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #if (OneWire_TimerDelay_InterruptOnCaptureCount && !OneWire_TimerDelay_UDB_CONTROL_REG_REMO
 156:Generated_Source\PSoC4/OneWire_TimerDelay.c ****             OneWire_TimerDelay_SetInterruptCount(OneWire_TimerDelay_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 159:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_ClearFIFO();
  76              		.loc 1 159 0
  77 003e FFF7FEFF 		bl	OneWire_TimerDelay_ClearFIFO
 160:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 162:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     OneWire_TimerDelay_SetInterruptMode(OneWire_TimerDelay_INIT_INTERRUPT_MODE);
  78              		.loc 1 162 0
  79 0042 0020     		movs	r0, #0
  80 0044 FFF7FEFF 		bl	OneWire_TimerDelay_SetInterruptMode
 163:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
  81              		.loc 1 163 0
  82 0048 C046     		nop
  83 004a BD46     		mov	sp, r7
  84 004c 03B0     		add	sp, sp, #12
  85              		@ sp needed
  86 004e 90BD     		pop	{r4, r7, pc}
  87              	.L3:
  88              		.align	2
  89              	.L2:
  90 0050 ED020000 		.word	749
  91 0054 91000F40 		.word	1074725009
  92              		.cfi_endproc
  93              	.LFE2:
  94              		.size	OneWire_TimerDelay_Init, .-OneWire_TimerDelay_Init
  95              		.section	.text.OneWire_TimerDelay_Enable,"ax",%progbits
  96              		.align	2
  97              		.global	OneWire_TimerDelay_Enable
  98              		.code	16
  99              		.thumb_func
 100              		.type	OneWire_TimerDelay_Enable, %function
 101              	OneWire_TimerDelay_Enable:
 102              	.LFB3:
 164:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 165:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 166:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 167:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_Enable
 168:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 169:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 170:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 171:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Enable the Timer
 172:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 173:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 174:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 175:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 176:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 177:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 178:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 179:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 180:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_Enable(void) 
 181:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 103              		.loc 1 181 0
 104              		.cfi_startproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 6


 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107 0000 80B5     		push	{r7, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 00AF     		add	r7, sp, #0
 112              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (OneWire_TimerDelay_UsingFixedFunction)
 184:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_GLOBAL_ENABLE |= OneWire_TimerDelay_BLOCK_EN_MASK;
 185:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_GLOBAL_STBY_ENABLE |= OneWire_TimerDelay_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 188:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED || OneWire_TimerDelay_UsingFixedFunction)
 190:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL |= OneWire_TimerDelay_CTRL_ENABLE;
 113              		.loc 1 190 0
 114 0004 0549     		ldr	r1, .L5
 115 0006 054B     		ldr	r3, .L5
 116 0008 1B78     		ldrb	r3, [r3]
 117 000a DBB2     		uxtb	r3, r3
 118 000c 8022     		movs	r2, #128
 119 000e 5242     		rsbs	r2, r2, #0
 120 0010 1343     		orrs	r3, r2
 121 0012 DBB2     		uxtb	r3, r3
 122 0014 0B70     		strb	r3, [r1]
 191:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 123              		.loc 1 192 0
 124 0016 C046     		nop
 125 0018 BD46     		mov	sp, r7
 126              		@ sp needed
 127 001a 80BD     		pop	{r7, pc}
 128              	.L6:
 129              		.align	2
 130              	.L5:
 131 001c 71000F40 		.word	1074724977
 132              		.cfi_endproc
 133              	.LFE3:
 134              		.size	OneWire_TimerDelay_Enable, .-OneWire_TimerDelay_Enable
 135              		.section	.text.OneWire_TimerDelay_Start,"ax",%progbits
 136              		.align	2
 137              		.global	OneWire_TimerDelay_Start
 138              		.code	16
 139              		.thumb_func
 140              		.type	OneWire_TimerDelay_Start, %function
 141              	OneWire_TimerDelay_Start:
 142              	.LFB4:
 193:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 194:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 195:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_Start
 197:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 198:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 199:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 200:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The start function initializes the timer with the default values, the
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 7


 201:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 204:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 205:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 206:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 207:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 208:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 209:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 210:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Global variables:
 211:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  OneWire_TimerDelay_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 214:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 215:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_Start(void) 
 216:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 143              		.loc 1 216 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147 0000 80B5     		push	{r7, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
 151 0002 00AF     		add	r7, sp, #0
 152              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     if(OneWire_TimerDelay_initVar == 0u)
 153              		.loc 1 217 0
 154 0004 064B     		ldr	r3, .L9
 155 0006 1B78     		ldrb	r3, [r3]
 156 0008 002B     		cmp	r3, #0
 157 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     {
 219:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_Init();
 158              		.loc 1 219 0
 159 000c FFF7FEFF 		bl	OneWire_TimerDelay_Init
 220:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 221:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_initVar = 1u;   /* Clear this bit for Initialization */
 160              		.loc 1 221 0
 161 0010 034B     		ldr	r3, .L9
 162 0012 0122     		movs	r2, #1
 163 0014 1A70     		strb	r2, [r3]
 164              	.L8:
 222:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     }
 223:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 224:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     OneWire_TimerDelay_Enable();
 165              		.loc 1 225 0
 166 0016 FFF7FEFF 		bl	OneWire_TimerDelay_Enable
 226:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 167              		.loc 1 226 0
 168 001a C046     		nop
 169 001c BD46     		mov	sp, r7
 170              		@ sp needed
 171 001e 80BD     		pop	{r7, pc}
 172              	.L10:
 173              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 8


 174              	.L9:
 175 0020 00000000 		.word	OneWire_TimerDelay_initVar
 176              		.cfi_endproc
 177              	.LFE4:
 178              		.size	OneWire_TimerDelay_Start, .-OneWire_TimerDelay_Start
 179              		.section	.text.OneWire_TimerDelay_Stop,"ax",%progbits
 180              		.align	2
 181              		.global	OneWire_TimerDelay_Stop
 182              		.code	16
 183              		.thumb_func
 184              		.type	OneWire_TimerDelay_Stop, %function
 185              	OneWire_TimerDelay_Stop:
 186              	.LFB5:
 227:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 228:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 229:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 230:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_Stop
 231:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 232:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 233:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 234:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  interrupts.
 236:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 237:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 238:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 239:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 240:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 241:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 242:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 243:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 246:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 247:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_Stop(void) 
 248:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 187              		.loc 1 248 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Disable Timer */
 250:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if(!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED || OneWire_TimerDelay_UsingFixedFunction)
 251:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL &= ((uint8)(~OneWire_TimerDelay_CTRL_ENABLE));
 197              		.loc 1 251 0
 198 0004 054A     		ldr	r2, .L12
 199 0006 054B     		ldr	r3, .L12
 200 0008 1B78     		ldrb	r3, [r3]
 201 000a DBB2     		uxtb	r3, r3
 202 000c 7F21     		movs	r1, #127
 203 000e 0B40     		ands	r3, r1
 204 0010 DBB2     		uxtb	r3, r3
 205 0012 1370     		strb	r3, [r2]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 9


 252:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 254:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (OneWire_TimerDelay_UsingFixedFunction)
 256:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_GLOBAL_ENABLE &= ((uint8)(~OneWire_TimerDelay_BLOCK_EN_MASK));
 257:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_GLOBAL_STBY_ENABLE &= ((uint8)(~OneWire_TimerDelay_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 206              		.loc 1 259 0
 207 0014 C046     		nop
 208 0016 BD46     		mov	sp, r7
 209              		@ sp needed
 210 0018 80BD     		pop	{r7, pc}
 211              	.L13:
 212 001a C046     		.align	2
 213              	.L12:
 214 001c 71000F40 		.word	1074724977
 215              		.cfi_endproc
 216              	.LFE5:
 217              		.size	OneWire_TimerDelay_Stop, .-OneWire_TimerDelay_Stop
 218              		.section	.text.OneWire_TimerDelay_SetInterruptMode,"ax",%progbits
 219              		.align	2
 220              		.global	OneWire_TimerDelay_SetInterruptMode
 221              		.code	16
 222              		.thumb_func
 223              		.type	OneWire_TimerDelay_SetInterruptMode, %function
 224              	OneWire_TimerDelay_SetInterruptMode:
 225              	.LFB6:
 260:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 261:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 262:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 263:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_SetInterruptMode
 264:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 265:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 266:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 267:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  be selected.
 270:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 271:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 272:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 275:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 276:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 277:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 278:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 226              		.loc 1 280 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230 0000 80B5     		push	{r7, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 10


 234 0002 82B0     		sub	sp, sp, #8
 235              		.cfi_def_cfa_offset 16
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_def_cfa_register 7
 238 0006 0200     		movs	r2, r0
 239 0008 FB1D     		adds	r3, r7, #7
 240 000a 1A70     		strb	r2, [r3]
 281:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     OneWire_TimerDelay_STATUS_MASK = interruptMode;
 241              		.loc 1 281 0
 242 000c 034A     		ldr	r2, .L15
 243 000e FB1D     		adds	r3, r7, #7
 244 0010 1B78     		ldrb	r3, [r3]
 245 0012 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 246              		.loc 1 282 0
 247 0014 C046     		nop
 248 0016 BD46     		mov	sp, r7
 249 0018 02B0     		add	sp, sp, #8
 250              		@ sp needed
 251 001a 80BD     		pop	{r7, pc}
 252              	.L16:
 253              		.align	2
 254              	.L15:
 255 001c 81000F40 		.word	1074724993
 256              		.cfi_endproc
 257              	.LFE6:
 258              		.size	OneWire_TimerDelay_SetInterruptMode, .-OneWire_TimerDelay_SetInterruptMode
 259              		.section	.text.OneWire_TimerDelay_SoftwareCapture,"ax",%progbits
 260              		.align	2
 261              		.global	OneWire_TimerDelay_SoftwareCapture
 262              		.code	16
 263              		.thumb_func
 264              		.type	OneWire_TimerDelay_SoftwareCapture, %function
 265              	OneWire_TimerDelay_SoftwareCapture:
 266              	.LFB7:
 283:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 284:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 285:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_SoftwareCapture
 287:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 288:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 289:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 290:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 292:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 293:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 294:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 295:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 296:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 297:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 298:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Side Effects:
 299:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 301:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_SoftwareCapture(void) 
 303:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 267              		.loc 1 303 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 11


 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271 0000 80B5     		push	{r7, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 7, -8
 274              		.cfi_offset 14, -4
 275 0002 00AF     		add	r7, sp, #0
 276              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if(OneWire_TimerDelay_UsingFixedFunction)
 306:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         (void)CY_GET_REG16(OneWire_TimerDelay_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #else
 308:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         (void)CY_GET_REG8(OneWire_TimerDelay_COUNTER_LSB_PTR_8BIT);
 277              		.loc 1 308 0
 278 0004 024B     		ldr	r3, .L18
 279 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif/* (OneWire_TimerDelay_UsingFixedFunction) */
 310:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 280              		.loc 1 311 0
 281 0008 C046     		nop
 282 000a BD46     		mov	sp, r7
 283              		@ sp needed
 284 000c 80BD     		pop	{r7, pc}
 285              	.L19:
 286 000e C046     		.align	2
 287              	.L18:
 288 0010 00000F40 		.word	1074724864
 289              		.cfi_endproc
 290              	.LFE7:
 291              		.size	OneWire_TimerDelay_SoftwareCapture, .-OneWire_TimerDelay_SoftwareCapture
 292              		.section	.text.OneWire_TimerDelay_ReadStatusRegister,"ax",%progbits
 293              		.align	2
 294              		.global	OneWire_TimerDelay_ReadStatusRegister
 295              		.code	16
 296              		.thumb_func
 297              		.type	OneWire_TimerDelay_ReadStatusRegister, %function
 298              	OneWire_TimerDelay_ReadStatusRegister:
 299              	.LFB8:
 312:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 313:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 314:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_ReadStatusRegister
 316:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 317:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 318:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 319:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  be permuteable.
 322:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 323:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 324:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 325:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 326:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 327:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The contents of the status register
 328:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 12


 329:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Side Effects:
 330:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 332:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 333:Generated_Source\PSoC4/OneWire_TimerDelay.c **** uint8   OneWire_TimerDelay_ReadStatusRegister(void) 
 334:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 300              		.loc 1 334 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304 0000 80B5     		push	{r7, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 0002 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     return (OneWire_TimerDelay_STATUS);
 310              		.loc 1 335 0
 311 0004 024B     		ldr	r3, .L22
 312 0006 1B78     		ldrb	r3, [r3]
 313 0008 DBB2     		uxtb	r3, r3
 336:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 314              		.loc 1 336 0
 315 000a 1800     		movs	r0, r3
 316 000c BD46     		mov	sp, r7
 317              		@ sp needed
 318 000e 80BD     		pop	{r7, pc}
 319              	.L23:
 320              		.align	2
 321              	.L22:
 322 0010 61000F40 		.word	1074724961
 323              		.cfi_endproc
 324              	.LFE8:
 325              		.size	OneWire_TimerDelay_ReadStatusRegister, .-OneWire_TimerDelay_ReadStatusRegister
 326              		.section	.text.OneWire_TimerDelay_ReadControlRegister,"ax",%progbits
 327              		.align	2
 328              		.global	OneWire_TimerDelay_ReadControlRegister
 329              		.code	16
 330              		.thumb_func
 331              		.type	OneWire_TimerDelay_ReadControlRegister, %function
 332              	OneWire_TimerDelay_ReadControlRegister:
 333              	.LFB9:
 337:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 338:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 339:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 341:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 342:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 343:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_ReadControlRegister
 344:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 345:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 346:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 347:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 349:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 350:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 351:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 13


 352:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 353:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The contents of the control register
 354:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 355:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/OneWire_TimerDelay.c **** uint8 OneWire_TimerDelay_ReadControlRegister(void) 
 357:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 334              		.loc 1 357 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338 0000 80B5     		push	{r7, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         return ((uint8)OneWire_TimerDelay_CONTROL);
 344              		.loc 1 359 0
 345 0004 024B     		ldr	r3, .L26
 346 0006 1B78     		ldrb	r3, [r3]
 347 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #else
 361:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         return (0);
 362:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 348              		.loc 1 363 0
 349 000a 1800     		movs	r0, r3
 350 000c BD46     		mov	sp, r7
 351              		@ sp needed
 352 000e 80BD     		pop	{r7, pc}
 353              	.L27:
 354              		.align	2
 355              	.L26:
 356 0010 71000F40 		.word	1074724977
 357              		.cfi_endproc
 358              	.LFE9:
 359              		.size	OneWire_TimerDelay_ReadControlRegister, .-OneWire_TimerDelay_ReadControlRegister
 360              		.section	.text.OneWire_TimerDelay_WriteControlRegister,"ax",%progbits
 361              		.align	2
 362              		.global	OneWire_TimerDelay_WriteControlRegister
 363              		.code	16
 364              		.thumb_func
 365              		.type	OneWire_TimerDelay_WriteControlRegister, %function
 366              	OneWire_TimerDelay_WriteControlRegister:
 367              	.LFB10:
 364:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 365:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 366:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 367:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_WriteControlRegister
 368:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 369:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 370:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 371:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 373:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 374:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  control: The contents of the control register
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 14


 375:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 376:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 377:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 378:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 379:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 368              		.loc 1 380 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
 377              		.cfi_def_cfa_offset 16
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 380 0006 0200     		movs	r2, r0
 381 0008 FB1D     		adds	r3, r7, #7
 382 000a 1A70     		strb	r2, [r3]
 381:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL = control;
 383              		.loc 1 382 0
 384 000c 034A     		ldr	r2, .L29
 385 000e FB1D     		adds	r3, r7, #7
 386 0010 1B78     		ldrb	r3, [r3]
 387 0012 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #else
 384:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         control = 0u;
 385:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 388              		.loc 1 386 0
 389 0014 C046     		nop
 390 0016 BD46     		mov	sp, r7
 391 0018 02B0     		add	sp, sp, #8
 392              		@ sp needed
 393 001a 80BD     		pop	{r7, pc}
 394              	.L30:
 395              		.align	2
 396              	.L29:
 397 001c 71000F40 		.word	1074724977
 398              		.cfi_endproc
 399              	.LFE10:
 400              		.size	OneWire_TimerDelay_WriteControlRegister, .-OneWire_TimerDelay_WriteControlRegister
 401              		.section	.text.OneWire_TimerDelay_ReadPeriod,"ax",%progbits
 402              		.align	2
 403              		.global	OneWire_TimerDelay_ReadPeriod
 404              		.code	16
 405              		.thumb_func
 406              		.type	OneWire_TimerDelay_ReadPeriod, %function
 407              	OneWire_TimerDelay_ReadPeriod:
 408              	.LFB11:
 387:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 388:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 390:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 15


 391:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 392:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_ReadPeriod
 393:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 394:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 395:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 396:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 398:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 399:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 400:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 401:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 402:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The present value of the counter.
 403:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 404:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 405:Generated_Source\PSoC4/OneWire_TimerDelay.c **** uint16 OneWire_TimerDelay_ReadPeriod(void) 
 406:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 409              		.loc 1 406 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC4/OneWire_TimerDelay.c ****    #if(OneWire_TimerDelay_UsingFixedFunction)
 408:Generated_Source\PSoC4/OneWire_TimerDelay.c ****        return ((uint16)CY_GET_REG16(OneWire_TimerDelay_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC4/OneWire_TimerDelay.c ****    #else
 410:Generated_Source\PSoC4/OneWire_TimerDelay.c ****        return (CY_GET_REG16(OneWire_TimerDelay_PERIOD_LSB_PTR));
 419              		.loc 1 410 0
 420 0004 024B     		ldr	r3, .L33
 421 0006 1B88     		ldrh	r3, [r3]
 422 0008 9BB2     		uxth	r3, r3
 411:Generated_Source\PSoC4/OneWire_TimerDelay.c ****    #endif /* (OneWire_TimerDelay_UsingFixedFunction) */
 412:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 423              		.loc 1 412 0
 424 000a 1800     		movs	r0, r3
 425 000c BD46     		mov	sp, r7
 426              		@ sp needed
 427 000e 80BD     		pop	{r7, pc}
 428              	.L34:
 429              		.align	2
 430              	.L33:
 431 0010 40100F40 		.word	1074729024
 432              		.cfi_endproc
 433              	.LFE11:
 434              		.size	OneWire_TimerDelay_ReadPeriod, .-OneWire_TimerDelay_ReadPeriod
 435              		.section	.text.OneWire_TimerDelay_WritePeriod,"ax",%progbits
 436              		.align	2
 437              		.global	OneWire_TimerDelay_WritePeriod
 438              		.code	16
 439              		.thumb_func
 440              		.type	OneWire_TimerDelay_WritePeriod, %function
 441              	OneWire_TimerDelay_WritePeriod:
 442              	.LFB12:
 413:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 16


 414:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 415:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 416:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_WritePeriod
 417:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 418:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 419:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 420:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 423:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 424:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 427:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 428:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 429:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 430:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 443              		.loc 1 432 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 80B5     		push	{r7, lr}
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 82B0     		sub	sp, sp, #8
 452              		.cfi_def_cfa_offset 16
 453 0004 00AF     		add	r7, sp, #0
 454              		.cfi_def_cfa_register 7
 455 0006 0200     		movs	r2, r0
 456 0008 BB1D     		adds	r3, r7, #6
 457 000a 1A80     		strh	r2, [r3]
 433:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if(OneWire_TimerDelay_UsingFixedFunction)
 434:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         CY_SET_REG16(OneWire_TimerDelay_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #else
 437:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         CY_SET_REG16(OneWire_TimerDelay_PERIOD_LSB_PTR, period);
 458              		.loc 1 437 0
 459 000c 034A     		ldr	r2, .L36
 460 000e BB1D     		adds	r3, r7, #6
 461 0010 1B88     		ldrh	r3, [r3]
 462 0012 1380     		strh	r3, [r2]
 438:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 463              		.loc 1 439 0
 464 0014 C046     		nop
 465 0016 BD46     		mov	sp, r7
 466 0018 02B0     		add	sp, sp, #8
 467              		@ sp needed
 468 001a 80BD     		pop	{r7, pc}
 469              	.L37:
 470              		.align	2
 471              	.L36:
 472 001c 40100F40 		.word	1074729024
 473              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 17


 474              	.LFE12:
 475              		.size	OneWire_TimerDelay_WritePeriod, .-OneWire_TimerDelay_WritePeriod
 476              		.section	.text.OneWire_TimerDelay_ReadCapture,"ax",%progbits
 477              		.align	2
 478              		.global	OneWire_TimerDelay_ReadCapture
 479              		.code	16
 480              		.thumb_func
 481              		.type	OneWire_TimerDelay_ReadCapture, %function
 482              	OneWire_TimerDelay_ReadCapture:
 483              	.LFB13:
 440:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 441:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 442:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 443:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_ReadCapture
 444:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 445:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 446:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 447:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 449:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 450:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 451:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 452:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 453:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Present Capture value.
 454:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 455:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/OneWire_TimerDelay.c **** uint16 OneWire_TimerDelay_ReadCapture(void) 
 457:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 484              		.loc 1 457 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488 0000 80B5     		push	{r7, lr}
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 492 0002 00AF     		add	r7, sp, #0
 493              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC4/OneWire_TimerDelay.c ****    #if(OneWire_TimerDelay_UsingFixedFunction)
 459:Generated_Source\PSoC4/OneWire_TimerDelay.c ****        return ((uint16)CY_GET_REG16(OneWire_TimerDelay_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC4/OneWire_TimerDelay.c ****    #else
 461:Generated_Source\PSoC4/OneWire_TimerDelay.c ****        return (CY_GET_REG16(OneWire_TimerDelay_CAPTURE_LSB_PTR));
 494              		.loc 1 461 0
 495 0004 024B     		ldr	r3, .L40
 496 0006 1B88     		ldrh	r3, [r3]
 497 0008 9BB2     		uxth	r3, r3
 462:Generated_Source\PSoC4/OneWire_TimerDelay.c ****    #endif /* (OneWire_TimerDelay_UsingFixedFunction) */
 463:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 498              		.loc 1 463 0
 499 000a 1800     		movs	r0, r3
 500 000c BD46     		mov	sp, r7
 501              		@ sp needed
 502 000e 80BD     		pop	{r7, pc}
 503              	.L41:
 504              		.align	2
 505              	.L40:
 506 0010 80100F40 		.word	1074729088
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 18


 507              		.cfi_endproc
 508              	.LFE13:
 509              		.size	OneWire_TimerDelay_ReadCapture, .-OneWire_TimerDelay_ReadCapture
 510              		.section	.text.OneWire_TimerDelay_WriteCounter,"ax",%progbits
 511              		.align	2
 512              		.global	OneWire_TimerDelay_WriteCounter
 513              		.code	16
 514              		.thumb_func
 515              		.type	OneWire_TimerDelay_WriteCounter, %function
 516              	OneWire_TimerDelay_WriteCounter:
 517              	.LFB14:
 464:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 465:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 466:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_WriteCounter
 468:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 469:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 470:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 471:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 473:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 474:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 476:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 477:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 478:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 479:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 480:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 518              		.loc 1 481 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 8
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522 0000 80B5     		push	{r7, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 82B0     		sub	sp, sp, #8
 527              		.cfi_def_cfa_offset 16
 528 0004 00AF     		add	r7, sp, #0
 529              		.cfi_def_cfa_register 7
 530 0006 0200     		movs	r2, r0
 531 0008 BB1D     		adds	r3, r7, #6
 532 000a 1A80     		strh	r2, [r3]
 482:Generated_Source\PSoC4/OneWire_TimerDelay.c ****    #if(OneWire_TimerDelay_UsingFixedFunction)
 483:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC4/OneWire_TimerDelay.c ****          * allow this register to be written
 485:Generated_Source\PSoC4/OneWire_TimerDelay.c ****          */
 486:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         CY_SET_REG16(OneWire_TimerDelay_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         
 488:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #else
 489:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         CY_SET_REG16(OneWire_TimerDelay_COUNTER_LSB_PTR, counter);
 533              		.loc 1 489 0
 534 000c 034A     		ldr	r2, .L43
 535 000e BB1D     		adds	r3, r7, #6
 536 0010 1B88     		ldrh	r3, [r3]
 537 0012 1380     		strh	r3, [r2]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 19


 490:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 538              		.loc 1 491 0
 539 0014 C046     		nop
 540 0016 BD46     		mov	sp, r7
 541 0018 02B0     		add	sp, sp, #8
 542              		@ sp needed
 543 001a 80BD     		pop	{r7, pc}
 544              	.L44:
 545              		.align	2
 546              	.L43:
 547 001c 00100F40 		.word	1074728960
 548              		.cfi_endproc
 549              	.LFE14:
 550              		.size	OneWire_TimerDelay_WriteCounter, .-OneWire_TimerDelay_WriteCounter
 551              		.section	.text.OneWire_TimerDelay_ReadCounter,"ax",%progbits
 552              		.align	2
 553              		.global	OneWire_TimerDelay_ReadCounter
 554              		.code	16
 555              		.thumb_func
 556              		.type	OneWire_TimerDelay_ReadCounter, %function
 557              	OneWire_TimerDelay_ReadCounter:
 558              	.LFB15:
 492:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 493:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 494:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 495:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_ReadCounter
 496:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 497:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 498:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 499:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 501:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 502:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 503:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 504:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 505:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Present compare value.
 506:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 507:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 508:Generated_Source\PSoC4/OneWire_TimerDelay.c **** uint16 OneWire_TimerDelay_ReadCounter(void) 
 509:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 559              		.loc 1 509 0
 560              		.cfi_startproc
 561              		@ args = 0, pretend = 0, frame = 0
 562              		@ frame_needed = 1, uses_anonymous_args = 0
 563 0000 80B5     		push	{r7, lr}
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 7, -8
 566              		.cfi_offset 14, -4
 567 0002 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if(OneWire_TimerDelay_UsingFixedFunction)
 514:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         (void)CY_GET_REG16(OneWire_TimerDelay_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #else
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 20


 516:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         (void)CY_GET_REG8(OneWire_TimerDelay_COUNTER_LSB_PTR_8BIT);
 569              		.loc 1 516 0
 570 0004 034B     		ldr	r3, .L47
 571 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif/* (OneWire_TimerDelay_UsingFixedFunction) */
 518:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 519:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if(OneWire_TimerDelay_UsingFixedFunction)
 521:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         return ((uint16)CY_GET_REG16(OneWire_TimerDelay_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #else
 523:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         return (CY_GET_REG16(OneWire_TimerDelay_CAPTURE_LSB_PTR));
 572              		.loc 1 523 0
 573 0008 034B     		ldr	r3, .L47+4
 574 000a 1B88     		ldrh	r3, [r3]
 575 000c 9BB2     		uxth	r3, r3
 524:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* (OneWire_TimerDelay_UsingFixedFunction) */
 525:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 576              		.loc 1 525 0
 577 000e 1800     		movs	r0, r3
 578 0010 BD46     		mov	sp, r7
 579              		@ sp needed
 580 0012 80BD     		pop	{r7, pc}
 581              	.L48:
 582              		.align	2
 583              	.L47:
 584 0014 00000F40 		.word	1074724864
 585 0018 80100F40 		.word	1074729088
 586              		.cfi_endproc
 587              	.LFE15:
 588              		.size	OneWire_TimerDelay_ReadCounter, .-OneWire_TimerDelay_ReadCounter
 589              		.section	.text.OneWire_TimerDelay_EnableTrigger,"ax",%progbits
 590              		.align	2
 591              		.global	OneWire_TimerDelay_EnableTrigger
 592              		.code	16
 593              		.thumb_func
 594              		.type	OneWire_TimerDelay_EnableTrigger, %function
 595              	OneWire_TimerDelay_EnableTrigger:
 596              	.LFB16:
 526:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 527:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 528:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #if(!OneWire_TimerDelay_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 530:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     
 531:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 532:Generated_Source\PSoC4/OneWire_TimerDelay.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC4/OneWire_TimerDelay.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC4/OneWire_TimerDelay.c ****  ******************************************************************************/
 535:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 536:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 537:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #if (OneWire_TimerDelay_SoftwareCaptureMode)
 538:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 539:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 540:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 541:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_SetCaptureMode
 542:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 543:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 544:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 21


 545:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 547:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 548:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  #define OneWire_TimerDelay__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #define OneWire_TimerDelay__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #define OneWire_TimerDelay__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #define OneWire_TimerDelay__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #define OneWire_TimerDelay__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC4/OneWire_TimerDelay.c ****  identifiers
 556:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  OneWire_TimerDelay__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  OneWire_TimerDelay__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  OneWire_TimerDelay__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  OneWire_TimerDelay__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 562:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 563:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 564:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 565:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 568:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     captureMode = ((uint8)((uint8)captureMode << OneWire_TimerDelay_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     captureMode &= (OneWire_TimerDelay_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 572:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL &= ((uint8)(~OneWire_TimerDelay_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 576:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL |= captureMode;
 578:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 580:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 582:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 583:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #if (OneWire_TimerDelay_SoftwareTriggerMode)
 584:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 585:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 586:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 587:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_SetTriggerMode
 588:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 589:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 590:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 591:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 593:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 594:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #define OneWire_TimerDelay__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #define OneWire_TimerDelay__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #define OneWire_TimerDelay__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #define OneWire_TimerDelay__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #define OneWire_TimerDelay__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 601:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 22


 602:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 603:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 604:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 605:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 607:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     triggerMode &= OneWire_TimerDelay_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 610:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is
 611:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     
 612:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL &= ((uint8)(~OneWire_TimerDelay_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 615:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL |= (triggerMode | OneWire_TimerDelay__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 619:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 621:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #if (OneWire_TimerDelay_EnableTriggerMode)
 622:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 623:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 624:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 625:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_EnableTrigger
 626:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 627:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 628:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 629:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 631:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 632:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 633:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 634:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 635:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 636:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 637:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_EnableTrigger(void) 
 639:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 597              		.loc 1 639 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 00AF     		add	r7, sp, #0
 606              		.cfi_def_cfa_register 7
 640:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is
 641:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL |= OneWire_TimerDelay_CTRL_TRIG_EN;
 607              		.loc 1 641 0
 608 0004 054A     		ldr	r2, .L50
 609 0006 054B     		ldr	r3, .L50
 610 0008 1B78     		ldrb	r3, [r3]
 611 000a DBB2     		uxtb	r3, r3
 612 000c 1021     		movs	r1, #16
 613 000e 0B43     		orrs	r3, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 23


 614 0010 DBB2     		uxtb	r3, r3
 615 0012 1370     		strb	r3, [r2]
 642:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 616              		.loc 1 643 0
 617 0014 C046     		nop
 618 0016 BD46     		mov	sp, r7
 619              		@ sp needed
 620 0018 80BD     		pop	{r7, pc}
 621              	.L51:
 622 001a C046     		.align	2
 623              	.L50:
 624 001c 71000F40 		.word	1074724977
 625              		.cfi_endproc
 626              	.LFE16:
 627              		.size	OneWire_TimerDelay_EnableTrigger, .-OneWire_TimerDelay_EnableTrigger
 628              		.section	.text.OneWire_TimerDelay_DisableTrigger,"ax",%progbits
 629              		.align	2
 630              		.global	OneWire_TimerDelay_DisableTrigger
 631              		.code	16
 632              		.thumb_func
 633              		.type	OneWire_TimerDelay_DisableTrigger, %function
 634              	OneWire_TimerDelay_DisableTrigger:
 635              	.LFB17:
 644:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 645:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 646:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 647:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_DisableTrigger
 648:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 649:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 650:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 651:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 653:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 654:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 655:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 656:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 657:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 658:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 659:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 660:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_DisableTrigger(void) 
 661:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 636              		.loc 1 661 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 662:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register i
 663:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL &= ((uint8)(~OneWire_TimerDelay_CTRL_TRIG_EN));
 646              		.loc 1 663 0
 647 0004 054A     		ldr	r2, .L53
 648 0006 054B     		ldr	r3, .L53
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 24


 649 0008 1B78     		ldrb	r3, [r3]
 650 000a DBB2     		uxtb	r3, r3
 651 000c 1021     		movs	r1, #16
 652 000e 8B43     		bics	r3, r1
 653 0010 DBB2     		uxtb	r3, r3
 654 0012 1370     		strb	r3, [r2]
 664:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 655              		.loc 1 665 0
 656 0014 C046     		nop
 657 0016 BD46     		mov	sp, r7
 658              		@ sp needed
 659 0018 80BD     		pop	{r7, pc}
 660              	.L54:
 661 001a C046     		.align	2
 662              	.L53:
 663 001c 71000F40 		.word	1074724977
 664              		.cfi_endproc
 665              	.LFE17:
 666              		.size	OneWire_TimerDelay_DisableTrigger, .-OneWire_TimerDelay_DisableTrigger
 667              		.section	.text.OneWire_TimerDelay_ClearFIFO,"ax",%progbits
 668              		.align	2
 669              		.global	OneWire_TimerDelay_ClearFIFO
 670              		.code	16
 671              		.thumb_func
 672              		.type	OneWire_TimerDelay_ClearFIFO, %function
 673              	OneWire_TimerDelay_ClearFIFO:
 674              	.LFB18:
 666:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 668:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #if(OneWire_TimerDelay_InterruptOnCaptureCount)
 669:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 670:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 671:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 672:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_SetInterruptCount
 673:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 674:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 675:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 676:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 678:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 679:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 684:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 685:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 686:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 687:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 688:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 690:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     interruptCount &= OneWire_TimerDelay_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 693:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #if (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Clear the Current Setting */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 25


 695:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL &= ((uint8)(~OneWire_TimerDelay_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         OneWire_TimerDelay_CONTROL |= interruptCount;
 698:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     #endif /* (!OneWire_TimerDelay_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 700:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #endif /* OneWire_TimerDelay_InterruptOnCaptureCount */
 701:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 702:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 703:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #if (OneWire_TimerDelay_UsingHWCaptureCounter)
 704:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 705:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 706:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 707:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_SetCaptureCount
 708:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 709:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 710:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 711:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function sets the capture count
 712:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 713:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 714:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *                captures.
 717:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 718:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 719:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 720:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 721:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 722:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 724:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     OneWire_TimerDelay_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 726:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 727:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 728:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_ReadCaptureCount
 730:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
 731:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 732:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 733:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 735:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 736:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 737:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 738:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 739:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 741:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 742:Generated_Source\PSoC4/OneWire_TimerDelay.c **** uint8 OneWire_TimerDelay_ReadCaptureCount(void) 
 743:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 744:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     return ((uint8)OneWire_TimerDelay_CAP_COUNT);
 745:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 746:Generated_Source\PSoC4/OneWire_TimerDelay.c **** #endif /* OneWire_TimerDelay_UsingHWCaptureCounter */
 747:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 748:Generated_Source\PSoC4/OneWire_TimerDelay.c **** 
 749:Generated_Source\PSoC4/OneWire_TimerDelay.c **** /*******************************************************************************
 750:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Function Name: OneWire_TimerDelay_ClearFIFO
 751:Generated_Source\PSoC4/OneWire_TimerDelay.c **** ********************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 26


 752:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 753:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Summary:
 754:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 756:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Parameters:
 757:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 758:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 759:Generated_Source\PSoC4/OneWire_TimerDelay.c **** * Return:
 760:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *  void
 761:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *
 762:Generated_Source\PSoC4/OneWire_TimerDelay.c **** *******************************************************************************/
 763:Generated_Source\PSoC4/OneWire_TimerDelay.c **** void OneWire_TimerDelay_ClearFIFO(void) 
 764:Generated_Source\PSoC4/OneWire_TimerDelay.c **** {
 675              		.loc 1 764 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679 0000 80B5     		push	{r7, lr}
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     while(0u != (OneWire_TimerDelay_ReadStatusRegister() & OneWire_TimerDelay_STATUS_FIFONEMP))
 685              		.loc 1 765 0
 686 0004 01E0     		b	.L56
 687              	.L57:
 766:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     {
 767:Generated_Source\PSoC4/OneWire_TimerDelay.c ****         (void)OneWire_TimerDelay_ReadCapture();
 688              		.loc 1 767 0
 689 0006 FFF7FEFF 		bl	OneWire_TimerDelay_ReadCapture
 690              	.L56:
 765:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     while(0u != (OneWire_TimerDelay_ReadStatusRegister() & OneWire_TimerDelay_STATUS_FIFONEMP))
 691              		.loc 1 765 0
 692 000a FFF7FEFF 		bl	OneWire_TimerDelay_ReadStatusRegister
 693 000e 0300     		movs	r3, r0
 694 0010 1A00     		movs	r2, r3
 695 0012 0823     		movs	r3, #8
 696 0014 1340     		ands	r3, r2
 697 0016 F6D1     		bne	.L57
 768:Generated_Source\PSoC4/OneWire_TimerDelay.c ****     }
 769:Generated_Source\PSoC4/OneWire_TimerDelay.c **** }
 698              		.loc 1 769 0
 699 0018 C046     		nop
 700 001a BD46     		mov	sp, r7
 701              		@ sp needed
 702 001c 80BD     		pop	{r7, pc}
 703              		.cfi_endproc
 704              	.LFE18:
 705              		.size	OneWire_TimerDelay_ClearFIFO, .-OneWire_TimerDelay_ClearFIFO
 706 001e C046     		.text
 707              	.Letext0:
 708              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 709              		.section	.debug_info,"",%progbits
 710              	.Ldebug_info0:
 711 0000 7B020000 		.4byte	0x27b
 712 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 27


 713 0006 00000000 		.4byte	.Ldebug_abbrev0
 714 000a 04       		.byte	0x4
 715 000b 01       		.uleb128 0x1
 716 000c 3D010000 		.4byte	.LASF39
 717 0010 0C       		.byte	0xc
 718 0011 2D030000 		.4byte	.LASF40
 719 0015 C0030000 		.4byte	.LASF41
 720 0019 00000000 		.4byte	.Ldebug_ranges0+0
 721 001d 00000000 		.4byte	0
 722 0021 00000000 		.4byte	.Ldebug_line0
 723 0025 02       		.uleb128 0x2
 724 0026 01       		.byte	0x1
 725 0027 06       		.byte	0x6
 726 0028 B4030000 		.4byte	.LASF0
 727 002c 02       		.uleb128 0x2
 728 002d 01       		.byte	0x1
 729 002e 08       		.byte	0x8
 730 002f 0A010000 		.4byte	.LASF1
 731 0033 02       		.uleb128 0x2
 732 0034 02       		.byte	0x2
 733 0035 05       		.byte	0x5
 734 0036 23030000 		.4byte	.LASF2
 735 003a 02       		.uleb128 0x2
 736 003b 02       		.byte	0x2
 737 003c 07       		.byte	0x7
 738 003d E9000000 		.4byte	.LASF3
 739 0041 02       		.uleb128 0x2
 740 0042 04       		.byte	0x4
 741 0043 05       		.byte	0x5
 742 0044 7B030000 		.4byte	.LASF4
 743 0048 02       		.uleb128 0x2
 744 0049 04       		.byte	0x4
 745 004a 07       		.byte	0x7
 746 004b 1D010000 		.4byte	.LASF5
 747 004f 02       		.uleb128 0x2
 748 0050 08       		.byte	0x8
 749 0051 05       		.byte	0x5
 750 0052 E7020000 		.4byte	.LASF6
 751 0056 02       		.uleb128 0x2
 752 0057 08       		.byte	0x8
 753 0058 07       		.byte	0x7
 754 0059 AC020000 		.4byte	.LASF7
 755 005d 03       		.uleb128 0x3
 756 005e 04       		.byte	0x4
 757 005f 05       		.byte	0x5
 758 0060 696E7400 		.ascii	"int\000"
 759 0064 02       		.uleb128 0x2
 760 0065 04       		.byte	0x4
 761 0066 07       		.byte	0x7
 762 0067 58020000 		.4byte	.LASF8
 763 006b 04       		.uleb128 0x4
 764 006c 2F010000 		.4byte	.LASF9
 765 0070 02       		.byte	0x2
 766 0071 E601     		.2byte	0x1e6
 767 0073 2C000000 		.4byte	0x2c
 768 0077 04       		.uleb128 0x4
 769 0078 2E020000 		.4byte	.LASF10
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 28


 770 007c 02       		.byte	0x2
 771 007d E701     		.2byte	0x1e7
 772 007f 3A000000 		.4byte	0x3a
 773 0083 02       		.uleb128 0x2
 774 0084 04       		.byte	0x4
 775 0085 04       		.byte	0x4
 776 0086 FC000000 		.4byte	.LASF11
 777 008a 02       		.uleb128 0x2
 778 008b 08       		.byte	0x8
 779 008c 04       		.byte	0x4
 780 008d F2010000 		.4byte	.LASF12
 781 0091 02       		.uleb128 0x2
 782 0092 01       		.byte	0x1
 783 0093 08       		.byte	0x8
 784 0094 84030000 		.4byte	.LASF13
 785 0098 04       		.uleb128 0x4
 786 0099 18010000 		.4byte	.LASF14
 787 009d 02       		.byte	0x2
 788 009e 9002     		.2byte	0x290
 789 00a0 A4000000 		.4byte	0xa4
 790 00a4 05       		.uleb128 0x5
 791 00a5 6B000000 		.4byte	0x6b
 792 00a9 04       		.uleb128 0x4
 793 00aa 00000000 		.4byte	.LASF15
 794 00ae 02       		.byte	0x2
 795 00af 9102     		.2byte	0x291
 796 00b1 B5000000 		.4byte	0xb5
 797 00b5 05       		.uleb128 0x5
 798 00b6 77000000 		.4byte	0x77
 799 00ba 02       		.uleb128 0x2
 800 00bb 08       		.byte	0x8
 801 00bc 04       		.byte	0x4
 802 00bd A8030000 		.4byte	.LASF16
 803 00c1 02       		.uleb128 0x2
 804 00c2 04       		.byte	0x4
 805 00c3 07       		.byte	0x7
 806 00c4 DE020000 		.4byte	.LASF17
 807 00c8 06       		.uleb128 0x6
 808 00c9 16020000 		.4byte	.LASF21
 809 00cd 01       		.byte	0x1
 810 00ce 2B       		.byte	0x2b
 811 00cf 00000000 		.4byte	.LFB2
 812 00d3 58000000 		.4byte	.LFE2-.LFB2
 813 00d7 01       		.uleb128 0x1
 814 00d8 9C       		.byte	0x9c
 815 00d9 EC000000 		.4byte	0xec
 816 00dd 07       		.uleb128 0x7
 817 00de 59030000 		.4byte	.LASF42
 818 00e2 01       		.byte	0x1
 819 00e3 2F       		.byte	0x2f
 820 00e4 6B000000 		.4byte	0x6b
 821 00e8 02       		.uleb128 0x2
 822 00e9 91       		.byte	0x91
 823 00ea 6F       		.sleb128 -17
 824 00eb 00       		.byte	0
 825 00ec 08       		.uleb128 0x8
 826 00ed F1030000 		.4byte	.LASF18
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 29


 827 00f1 01       		.byte	0x1
 828 00f2 B4       		.byte	0xb4
 829 00f3 00000000 		.4byte	.LFB3
 830 00f7 20000000 		.4byte	.LFE3-.LFB3
 831 00fb 01       		.uleb128 0x1
 832 00fc 9C       		.byte	0x9c
 833 00fd 09       		.uleb128 0x9
 834 00fe D0000000 		.4byte	.LASF19
 835 0102 01       		.byte	0x1
 836 0103 D7       		.byte	0xd7
 837 0104 00000000 		.4byte	.LFB4
 838 0108 24000000 		.4byte	.LFE4-.LFB4
 839 010c 01       		.uleb128 0x1
 840 010d 9C       		.byte	0x9c
 841 010e 08       		.uleb128 0x8
 842 010f 06000000 		.4byte	.LASF20
 843 0113 01       		.byte	0x1
 844 0114 F7       		.byte	0xf7
 845 0115 00000000 		.4byte	.LFB5
 846 0119 20000000 		.4byte	.LFE5-.LFB5
 847 011d 01       		.uleb128 0x1
 848 011e 9C       		.byte	0x9c
 849 011f 0A       		.uleb128 0xa
 850 0120 5E000000 		.4byte	.LASF22
 851 0124 01       		.byte	0x1
 852 0125 1701     		.2byte	0x117
 853 0127 00000000 		.4byte	.LFB6
 854 012b 20000000 		.4byte	.LFE6-.LFB6
 855 012f 01       		.uleb128 0x1
 856 0130 9C       		.byte	0x9c
 857 0131 45010000 		.4byte	0x145
 858 0135 0B       		.uleb128 0xb
 859 0136 F5020000 		.4byte	.LASF27
 860 013a 01       		.byte	0x1
 861 013b 1701     		.2byte	0x117
 862 013d 6B000000 		.4byte	0x6b
 863 0141 02       		.uleb128 0x2
 864 0142 91       		.byte	0x91
 865 0143 77       		.sleb128 -9
 866 0144 00       		.byte	0
 867 0145 0C       		.uleb128 0xc
 868 0146 35020000 		.4byte	.LASF23
 869 014a 01       		.byte	0x1
 870 014b 2E01     		.2byte	0x12e
 871 014d 00000000 		.4byte	.LFB7
 872 0151 14000000 		.4byte	.LFE7-.LFB7
 873 0155 01       		.uleb128 0x1
 874 0156 9C       		.byte	0x9c
 875 0157 0D       		.uleb128 0xd
 876 0158 AA000000 		.4byte	.LASF24
 877 015c 01       		.byte	0x1
 878 015d 4D01     		.2byte	0x14d
 879 015f 6B000000 		.4byte	0x6b
 880 0163 00000000 		.4byte	.LFB8
 881 0167 14000000 		.4byte	.LFE8-.LFB8
 882 016b 01       		.uleb128 0x1
 883 016c 9C       		.byte	0x9c
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 30


 884 016d 0D       		.uleb128 0xd
 885 016e CB010000 		.4byte	.LASF25
 886 0172 01       		.byte	0x1
 887 0173 6401     		.2byte	0x164
 888 0175 6B000000 		.4byte	0x6b
 889 0179 00000000 		.4byte	.LFB9
 890 017d 14000000 		.4byte	.LFE9-.LFB9
 891 0181 01       		.uleb128 0x1
 892 0182 9C       		.byte	0x9c
 893 0183 0A       		.uleb128 0xa
 894 0184 65020000 		.4byte	.LASF26
 895 0188 01       		.byte	0x1
 896 0189 7B01     		.2byte	0x17b
 897 018b 00000000 		.4byte	.LFB10
 898 018f 20000000 		.4byte	.LFE10-.LFB10
 899 0193 01       		.uleb128 0x1
 900 0194 9C       		.byte	0x9c
 901 0195 A9010000 		.4byte	0x1a9
 902 0199 0B       		.uleb128 0xb
 903 019a 35010000 		.4byte	.LASF28
 904 019e 01       		.byte	0x1
 905 019f 7B01     		.2byte	0x17b
 906 01a1 6B000000 		.4byte	0x6b
 907 01a5 02       		.uleb128 0x2
 908 01a6 91       		.byte	0x91
 909 01a7 77       		.sleb128 -9
 910 01a8 00       		.byte	0
 911 01a9 0D       		.uleb128 0xd
 912 01aa 1E000000 		.4byte	.LASF29
 913 01ae 01       		.byte	0x1
 914 01af 9501     		.2byte	0x195
 915 01b1 77000000 		.4byte	0x77
 916 01b5 00000000 		.4byte	.LFB11
 917 01b9 14000000 		.4byte	.LFE11-.LFB11
 918 01bd 01       		.uleb128 0x1
 919 01be 9C       		.byte	0x9c
 920 01bf 0A       		.uleb128 0xa
 921 01c0 0B040000 		.4byte	.LASF30
 922 01c4 01       		.byte	0x1
 923 01c5 AF01     		.2byte	0x1af
 924 01c7 00000000 		.4byte	.LFB12
 925 01cb 20000000 		.4byte	.LFE12-.LFB12
 926 01cf 01       		.uleb128 0x1
 927 01d0 9C       		.byte	0x9c
 928 01d1 E5010000 		.4byte	0x1e5
 929 01d5 0B       		.uleb128 0xb
 930 01d6 A3000000 		.4byte	.LASF31
 931 01da 01       		.byte	0x1
 932 01db AF01     		.2byte	0x1af
 933 01dd 77000000 		.4byte	0x77
 934 01e1 02       		.uleb128 0x2
 935 01e2 91       		.byte	0x91
 936 01e3 76       		.sleb128 -10
 937 01e4 00       		.byte	0
 938 01e5 0D       		.uleb128 0xd
 939 01e6 8D020000 		.4byte	.LASF32
 940 01ea 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 31


 941 01eb C801     		.2byte	0x1c8
 942 01ed 77000000 		.4byte	0x77
 943 01f1 00000000 		.4byte	.LFB13
 944 01f5 14000000 		.4byte	.LFE13-.LFB13
 945 01f9 01       		.uleb128 0x1
 946 01fa 9C       		.byte	0x9c
 947 01fb 0A       		.uleb128 0xa
 948 01fc 03030000 		.4byte	.LASF33
 949 0200 01       		.byte	0x1
 950 0201 E001     		.2byte	0x1e0
 951 0203 00000000 		.4byte	.LFB14
 952 0207 20000000 		.4byte	.LFE14-.LFB14
 953 020b 01       		.uleb128 0x1
 954 020c 9C       		.byte	0x9c
 955 020d 21020000 		.4byte	0x221
 956 0211 0B       		.uleb128 0xb
 957 0212 02010000 		.4byte	.LASF34
 958 0216 01       		.byte	0x1
 959 0217 E001     		.2byte	0x1e0
 960 0219 77000000 		.4byte	0x77
 961 021d 02       		.uleb128 0x2
 962 021e 91       		.byte	0x91
 963 021f 76       		.sleb128 -10
 964 0220 00       		.byte	0
 965 0221 0D       		.uleb128 0xd
 966 0222 89030000 		.4byte	.LASF35
 967 0226 01       		.byte	0x1
 968 0227 FC01     		.2byte	0x1fc
 969 0229 77000000 		.4byte	0x77
 970 022d 00000000 		.4byte	.LFB15
 971 0231 1C000000 		.4byte	.LFE15-.LFB15
 972 0235 01       		.uleb128 0x1
 973 0236 9C       		.byte	0x9c
 974 0237 0C       		.uleb128 0xc
 975 0238 82000000 		.4byte	.LASF36
 976 023c 01       		.byte	0x1
 977 023d 7E02     		.2byte	0x27e
 978 023f 00000000 		.4byte	.LFB16
 979 0243 20000000 		.4byte	.LFE16-.LFB16
 980 0247 01       		.uleb128 0x1
 981 0248 9C       		.byte	0x9c
 982 0249 0C       		.uleb128 0xc
 983 024a 3C000000 		.4byte	.LASF37
 984 024e 01       		.byte	0x1
 985 024f 9402     		.2byte	0x294
 986 0251 00000000 		.4byte	.LFB17
 987 0255 20000000 		.4byte	.LFE17-.LFB17
 988 0259 01       		.uleb128 0x1
 989 025a 9C       		.byte	0x9c
 990 025b 0E       		.uleb128 0xe
 991 025c F9010000 		.4byte	.LASF38
 992 0260 01       		.byte	0x1
 993 0261 FB02     		.2byte	0x2fb
 994 0263 00000000 		.4byte	.LFB18
 995 0267 1E000000 		.4byte	.LFE18-.LFB18
 996 026b 01       		.uleb128 0x1
 997 026c 9C       		.byte	0x9c
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 32


 998 026d 0F       		.uleb128 0xf
 999 026e C3020000 		.4byte	.LASF43
 1000 0272 01       		.byte	0x1
 1001 0273 1A       		.byte	0x1a
 1002 0274 6B000000 		.4byte	0x6b
 1003 0278 05       		.uleb128 0x5
 1004 0279 03       		.byte	0x3
 1005 027a 00000000 		.4byte	OneWire_TimerDelay_initVar
 1006 027e 00       		.byte	0
 1007              		.section	.debug_abbrev,"",%progbits
 1008              	.Ldebug_abbrev0:
 1009 0000 01       		.uleb128 0x1
 1010 0001 11       		.uleb128 0x11
 1011 0002 01       		.byte	0x1
 1012 0003 25       		.uleb128 0x25
 1013 0004 0E       		.uleb128 0xe
 1014 0005 13       		.uleb128 0x13
 1015 0006 0B       		.uleb128 0xb
 1016 0007 03       		.uleb128 0x3
 1017 0008 0E       		.uleb128 0xe
 1018 0009 1B       		.uleb128 0x1b
 1019 000a 0E       		.uleb128 0xe
 1020 000b 55       		.uleb128 0x55
 1021 000c 17       		.uleb128 0x17
 1022 000d 11       		.uleb128 0x11
 1023 000e 01       		.uleb128 0x1
 1024 000f 10       		.uleb128 0x10
 1025 0010 17       		.uleb128 0x17
 1026 0011 00       		.byte	0
 1027 0012 00       		.byte	0
 1028 0013 02       		.uleb128 0x2
 1029 0014 24       		.uleb128 0x24
 1030 0015 00       		.byte	0
 1031 0016 0B       		.uleb128 0xb
 1032 0017 0B       		.uleb128 0xb
 1033 0018 3E       		.uleb128 0x3e
 1034 0019 0B       		.uleb128 0xb
 1035 001a 03       		.uleb128 0x3
 1036 001b 0E       		.uleb128 0xe
 1037 001c 00       		.byte	0
 1038 001d 00       		.byte	0
 1039 001e 03       		.uleb128 0x3
 1040 001f 24       		.uleb128 0x24
 1041 0020 00       		.byte	0
 1042 0021 0B       		.uleb128 0xb
 1043 0022 0B       		.uleb128 0xb
 1044 0023 3E       		.uleb128 0x3e
 1045 0024 0B       		.uleb128 0xb
 1046 0025 03       		.uleb128 0x3
 1047 0026 08       		.uleb128 0x8
 1048 0027 00       		.byte	0
 1049 0028 00       		.byte	0
 1050 0029 04       		.uleb128 0x4
 1051 002a 16       		.uleb128 0x16
 1052 002b 00       		.byte	0
 1053 002c 03       		.uleb128 0x3
 1054 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 33


 1055 002e 3A       		.uleb128 0x3a
 1056 002f 0B       		.uleb128 0xb
 1057 0030 3B       		.uleb128 0x3b
 1058 0031 05       		.uleb128 0x5
 1059 0032 49       		.uleb128 0x49
 1060 0033 13       		.uleb128 0x13
 1061 0034 00       		.byte	0
 1062 0035 00       		.byte	0
 1063 0036 05       		.uleb128 0x5
 1064 0037 35       		.uleb128 0x35
 1065 0038 00       		.byte	0
 1066 0039 49       		.uleb128 0x49
 1067 003a 13       		.uleb128 0x13
 1068 003b 00       		.byte	0
 1069 003c 00       		.byte	0
 1070 003d 06       		.uleb128 0x6
 1071 003e 2E       		.uleb128 0x2e
 1072 003f 01       		.byte	0x1
 1073 0040 3F       		.uleb128 0x3f
 1074 0041 19       		.uleb128 0x19
 1075 0042 03       		.uleb128 0x3
 1076 0043 0E       		.uleb128 0xe
 1077 0044 3A       		.uleb128 0x3a
 1078 0045 0B       		.uleb128 0xb
 1079 0046 3B       		.uleb128 0x3b
 1080 0047 0B       		.uleb128 0xb
 1081 0048 27       		.uleb128 0x27
 1082 0049 19       		.uleb128 0x19
 1083 004a 11       		.uleb128 0x11
 1084 004b 01       		.uleb128 0x1
 1085 004c 12       		.uleb128 0x12
 1086 004d 06       		.uleb128 0x6
 1087 004e 40       		.uleb128 0x40
 1088 004f 18       		.uleb128 0x18
 1089 0050 9642     		.uleb128 0x2116
 1090 0052 19       		.uleb128 0x19
 1091 0053 01       		.uleb128 0x1
 1092 0054 13       		.uleb128 0x13
 1093 0055 00       		.byte	0
 1094 0056 00       		.byte	0
 1095 0057 07       		.uleb128 0x7
 1096 0058 34       		.uleb128 0x34
 1097 0059 00       		.byte	0
 1098 005a 03       		.uleb128 0x3
 1099 005b 0E       		.uleb128 0xe
 1100 005c 3A       		.uleb128 0x3a
 1101 005d 0B       		.uleb128 0xb
 1102 005e 3B       		.uleb128 0x3b
 1103 005f 0B       		.uleb128 0xb
 1104 0060 49       		.uleb128 0x49
 1105 0061 13       		.uleb128 0x13
 1106 0062 02       		.uleb128 0x2
 1107 0063 18       		.uleb128 0x18
 1108 0064 00       		.byte	0
 1109 0065 00       		.byte	0
 1110 0066 08       		.uleb128 0x8
 1111 0067 2E       		.uleb128 0x2e
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 34


 1112 0068 00       		.byte	0
 1113 0069 3F       		.uleb128 0x3f
 1114 006a 19       		.uleb128 0x19
 1115 006b 03       		.uleb128 0x3
 1116 006c 0E       		.uleb128 0xe
 1117 006d 3A       		.uleb128 0x3a
 1118 006e 0B       		.uleb128 0xb
 1119 006f 3B       		.uleb128 0x3b
 1120 0070 0B       		.uleb128 0xb
 1121 0071 27       		.uleb128 0x27
 1122 0072 19       		.uleb128 0x19
 1123 0073 11       		.uleb128 0x11
 1124 0074 01       		.uleb128 0x1
 1125 0075 12       		.uleb128 0x12
 1126 0076 06       		.uleb128 0x6
 1127 0077 40       		.uleb128 0x40
 1128 0078 18       		.uleb128 0x18
 1129 0079 9742     		.uleb128 0x2117
 1130 007b 19       		.uleb128 0x19
 1131 007c 00       		.byte	0
 1132 007d 00       		.byte	0
 1133 007e 09       		.uleb128 0x9
 1134 007f 2E       		.uleb128 0x2e
 1135 0080 00       		.byte	0
 1136 0081 3F       		.uleb128 0x3f
 1137 0082 19       		.uleb128 0x19
 1138 0083 03       		.uleb128 0x3
 1139 0084 0E       		.uleb128 0xe
 1140 0085 3A       		.uleb128 0x3a
 1141 0086 0B       		.uleb128 0xb
 1142 0087 3B       		.uleb128 0x3b
 1143 0088 0B       		.uleb128 0xb
 1144 0089 27       		.uleb128 0x27
 1145 008a 19       		.uleb128 0x19
 1146 008b 11       		.uleb128 0x11
 1147 008c 01       		.uleb128 0x1
 1148 008d 12       		.uleb128 0x12
 1149 008e 06       		.uleb128 0x6
 1150 008f 40       		.uleb128 0x40
 1151 0090 18       		.uleb128 0x18
 1152 0091 9642     		.uleb128 0x2116
 1153 0093 19       		.uleb128 0x19
 1154 0094 00       		.byte	0
 1155 0095 00       		.byte	0
 1156 0096 0A       		.uleb128 0xa
 1157 0097 2E       		.uleb128 0x2e
 1158 0098 01       		.byte	0x1
 1159 0099 3F       		.uleb128 0x3f
 1160 009a 19       		.uleb128 0x19
 1161 009b 03       		.uleb128 0x3
 1162 009c 0E       		.uleb128 0xe
 1163 009d 3A       		.uleb128 0x3a
 1164 009e 0B       		.uleb128 0xb
 1165 009f 3B       		.uleb128 0x3b
 1166 00a0 05       		.uleb128 0x5
 1167 00a1 27       		.uleb128 0x27
 1168 00a2 19       		.uleb128 0x19
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 35


 1169 00a3 11       		.uleb128 0x11
 1170 00a4 01       		.uleb128 0x1
 1171 00a5 12       		.uleb128 0x12
 1172 00a6 06       		.uleb128 0x6
 1173 00a7 40       		.uleb128 0x40
 1174 00a8 18       		.uleb128 0x18
 1175 00a9 9742     		.uleb128 0x2117
 1176 00ab 19       		.uleb128 0x19
 1177 00ac 01       		.uleb128 0x1
 1178 00ad 13       		.uleb128 0x13
 1179 00ae 00       		.byte	0
 1180 00af 00       		.byte	0
 1181 00b0 0B       		.uleb128 0xb
 1182 00b1 05       		.uleb128 0x5
 1183 00b2 00       		.byte	0
 1184 00b3 03       		.uleb128 0x3
 1185 00b4 0E       		.uleb128 0xe
 1186 00b5 3A       		.uleb128 0x3a
 1187 00b6 0B       		.uleb128 0xb
 1188 00b7 3B       		.uleb128 0x3b
 1189 00b8 05       		.uleb128 0x5
 1190 00b9 49       		.uleb128 0x49
 1191 00ba 13       		.uleb128 0x13
 1192 00bb 02       		.uleb128 0x2
 1193 00bc 18       		.uleb128 0x18
 1194 00bd 00       		.byte	0
 1195 00be 00       		.byte	0
 1196 00bf 0C       		.uleb128 0xc
 1197 00c0 2E       		.uleb128 0x2e
 1198 00c1 00       		.byte	0
 1199 00c2 3F       		.uleb128 0x3f
 1200 00c3 19       		.uleb128 0x19
 1201 00c4 03       		.uleb128 0x3
 1202 00c5 0E       		.uleb128 0xe
 1203 00c6 3A       		.uleb128 0x3a
 1204 00c7 0B       		.uleb128 0xb
 1205 00c8 3B       		.uleb128 0x3b
 1206 00c9 05       		.uleb128 0x5
 1207 00ca 27       		.uleb128 0x27
 1208 00cb 19       		.uleb128 0x19
 1209 00cc 11       		.uleb128 0x11
 1210 00cd 01       		.uleb128 0x1
 1211 00ce 12       		.uleb128 0x12
 1212 00cf 06       		.uleb128 0x6
 1213 00d0 40       		.uleb128 0x40
 1214 00d1 18       		.uleb128 0x18
 1215 00d2 9742     		.uleb128 0x2117
 1216 00d4 19       		.uleb128 0x19
 1217 00d5 00       		.byte	0
 1218 00d6 00       		.byte	0
 1219 00d7 0D       		.uleb128 0xd
 1220 00d8 2E       		.uleb128 0x2e
 1221 00d9 00       		.byte	0
 1222 00da 3F       		.uleb128 0x3f
 1223 00db 19       		.uleb128 0x19
 1224 00dc 03       		.uleb128 0x3
 1225 00dd 0E       		.uleb128 0xe
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 36


 1226 00de 3A       		.uleb128 0x3a
 1227 00df 0B       		.uleb128 0xb
 1228 00e0 3B       		.uleb128 0x3b
 1229 00e1 05       		.uleb128 0x5
 1230 00e2 27       		.uleb128 0x27
 1231 00e3 19       		.uleb128 0x19
 1232 00e4 49       		.uleb128 0x49
 1233 00e5 13       		.uleb128 0x13
 1234 00e6 11       		.uleb128 0x11
 1235 00e7 01       		.uleb128 0x1
 1236 00e8 12       		.uleb128 0x12
 1237 00e9 06       		.uleb128 0x6
 1238 00ea 40       		.uleb128 0x40
 1239 00eb 18       		.uleb128 0x18
 1240 00ec 9742     		.uleb128 0x2117
 1241 00ee 19       		.uleb128 0x19
 1242 00ef 00       		.byte	0
 1243 00f0 00       		.byte	0
 1244 00f1 0E       		.uleb128 0xe
 1245 00f2 2E       		.uleb128 0x2e
 1246 00f3 00       		.byte	0
 1247 00f4 3F       		.uleb128 0x3f
 1248 00f5 19       		.uleb128 0x19
 1249 00f6 03       		.uleb128 0x3
 1250 00f7 0E       		.uleb128 0xe
 1251 00f8 3A       		.uleb128 0x3a
 1252 00f9 0B       		.uleb128 0xb
 1253 00fa 3B       		.uleb128 0x3b
 1254 00fb 05       		.uleb128 0x5
 1255 00fc 27       		.uleb128 0x27
 1256 00fd 19       		.uleb128 0x19
 1257 00fe 11       		.uleb128 0x11
 1258 00ff 01       		.uleb128 0x1
 1259 0100 12       		.uleb128 0x12
 1260 0101 06       		.uleb128 0x6
 1261 0102 40       		.uleb128 0x40
 1262 0103 18       		.uleb128 0x18
 1263 0104 9642     		.uleb128 0x2116
 1264 0106 19       		.uleb128 0x19
 1265 0107 00       		.byte	0
 1266 0108 00       		.byte	0
 1267 0109 0F       		.uleb128 0xf
 1268 010a 34       		.uleb128 0x34
 1269 010b 00       		.byte	0
 1270 010c 03       		.uleb128 0x3
 1271 010d 0E       		.uleb128 0xe
 1272 010e 3A       		.uleb128 0x3a
 1273 010f 0B       		.uleb128 0xb
 1274 0110 3B       		.uleb128 0x3b
 1275 0111 0B       		.uleb128 0xb
 1276 0112 49       		.uleb128 0x49
 1277 0113 13       		.uleb128 0x13
 1278 0114 3F       		.uleb128 0x3f
 1279 0115 19       		.uleb128 0x19
 1280 0116 02       		.uleb128 0x2
 1281 0117 18       		.uleb128 0x18
 1282 0118 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 37


 1283 0119 00       		.byte	0
 1284 011a 00       		.byte	0
 1285              		.section	.debug_aranges,"",%progbits
 1286 0000 9C000000 		.4byte	0x9c
 1287 0004 0200     		.2byte	0x2
 1288 0006 00000000 		.4byte	.Ldebug_info0
 1289 000a 04       		.byte	0x4
 1290 000b 00       		.byte	0
 1291 000c 0000     		.2byte	0
 1292 000e 0000     		.2byte	0
 1293 0010 00000000 		.4byte	.LFB2
 1294 0014 58000000 		.4byte	.LFE2-.LFB2
 1295 0018 00000000 		.4byte	.LFB3
 1296 001c 20000000 		.4byte	.LFE3-.LFB3
 1297 0020 00000000 		.4byte	.LFB4
 1298 0024 24000000 		.4byte	.LFE4-.LFB4
 1299 0028 00000000 		.4byte	.LFB5
 1300 002c 20000000 		.4byte	.LFE5-.LFB5
 1301 0030 00000000 		.4byte	.LFB6
 1302 0034 20000000 		.4byte	.LFE6-.LFB6
 1303 0038 00000000 		.4byte	.LFB7
 1304 003c 14000000 		.4byte	.LFE7-.LFB7
 1305 0040 00000000 		.4byte	.LFB8
 1306 0044 14000000 		.4byte	.LFE8-.LFB8
 1307 0048 00000000 		.4byte	.LFB9
 1308 004c 14000000 		.4byte	.LFE9-.LFB9
 1309 0050 00000000 		.4byte	.LFB10
 1310 0054 20000000 		.4byte	.LFE10-.LFB10
 1311 0058 00000000 		.4byte	.LFB11
 1312 005c 14000000 		.4byte	.LFE11-.LFB11
 1313 0060 00000000 		.4byte	.LFB12
 1314 0064 20000000 		.4byte	.LFE12-.LFB12
 1315 0068 00000000 		.4byte	.LFB13
 1316 006c 14000000 		.4byte	.LFE13-.LFB13
 1317 0070 00000000 		.4byte	.LFB14
 1318 0074 20000000 		.4byte	.LFE14-.LFB14
 1319 0078 00000000 		.4byte	.LFB15
 1320 007c 1C000000 		.4byte	.LFE15-.LFB15
 1321 0080 00000000 		.4byte	.LFB16
 1322 0084 20000000 		.4byte	.LFE16-.LFB16
 1323 0088 00000000 		.4byte	.LFB17
 1324 008c 20000000 		.4byte	.LFE17-.LFB17
 1325 0090 00000000 		.4byte	.LFB18
 1326 0094 1E000000 		.4byte	.LFE18-.LFB18
 1327 0098 00000000 		.4byte	0
 1328 009c 00000000 		.4byte	0
 1329              		.section	.debug_ranges,"",%progbits
 1330              	.Ldebug_ranges0:
 1331 0000 00000000 		.4byte	.LFB2
 1332 0004 58000000 		.4byte	.LFE2
 1333 0008 00000000 		.4byte	.LFB3
 1334 000c 20000000 		.4byte	.LFE3
 1335 0010 00000000 		.4byte	.LFB4
 1336 0014 24000000 		.4byte	.LFE4
 1337 0018 00000000 		.4byte	.LFB5
 1338 001c 20000000 		.4byte	.LFE5
 1339 0020 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 38


 1340 0024 20000000 		.4byte	.LFE6
 1341 0028 00000000 		.4byte	.LFB7
 1342 002c 14000000 		.4byte	.LFE7
 1343 0030 00000000 		.4byte	.LFB8
 1344 0034 14000000 		.4byte	.LFE8
 1345 0038 00000000 		.4byte	.LFB9
 1346 003c 14000000 		.4byte	.LFE9
 1347 0040 00000000 		.4byte	.LFB10
 1348 0044 20000000 		.4byte	.LFE10
 1349 0048 00000000 		.4byte	.LFB11
 1350 004c 14000000 		.4byte	.LFE11
 1351 0050 00000000 		.4byte	.LFB12
 1352 0054 20000000 		.4byte	.LFE12
 1353 0058 00000000 		.4byte	.LFB13
 1354 005c 14000000 		.4byte	.LFE13
 1355 0060 00000000 		.4byte	.LFB14
 1356 0064 20000000 		.4byte	.LFE14
 1357 0068 00000000 		.4byte	.LFB15
 1358 006c 1C000000 		.4byte	.LFE15
 1359 0070 00000000 		.4byte	.LFB16
 1360 0074 20000000 		.4byte	.LFE16
 1361 0078 00000000 		.4byte	.LFB17
 1362 007c 20000000 		.4byte	.LFE17
 1363 0080 00000000 		.4byte	.LFB18
 1364 0084 1E000000 		.4byte	.LFE18
 1365 0088 00000000 		.4byte	0
 1366 008c 00000000 		.4byte	0
 1367              		.section	.debug_line,"",%progbits
 1368              	.Ldebug_line0:
 1369 0000 9A010000 		.section	.debug_str,"MS",%progbits,1
 1369      02004F00 
 1369      00000201 
 1369      FB0E0D00 
 1369      01010101 
 1370              	.LASF15:
 1371 0000 72656731 		.ascii	"reg16\000"
 1371      3600
 1372              	.LASF20:
 1373 0006 4F6E6557 		.ascii	"OneWire_TimerDelay_Stop\000"
 1373      6972655F 
 1373      54696D65 
 1373      7244656C 
 1373      61795F53 
 1374              	.LASF29:
 1375 001e 4F6E6557 		.ascii	"OneWire_TimerDelay_ReadPeriod\000"
 1375      6972655F 
 1375      54696D65 
 1375      7244656C 
 1375      61795F52 
 1376              	.LASF37:
 1377 003c 4F6E6557 		.ascii	"OneWire_TimerDelay_DisableTrigger\000"
 1377      6972655F 
 1377      54696D65 
 1377      7244656C 
 1377      61795F44 
 1378              	.LASF22:
 1379 005e 4F6E6557 		.ascii	"OneWire_TimerDelay_SetInterruptMode\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 39


 1379      6972655F 
 1379      54696D65 
 1379      7244656C 
 1379      61795F53 
 1380              	.LASF36:
 1381 0082 4F6E6557 		.ascii	"OneWire_TimerDelay_EnableTrigger\000"
 1381      6972655F 
 1381      54696D65 
 1381      7244656C 
 1381      61795F45 
 1382              	.LASF31:
 1383 00a3 70657269 		.ascii	"period\000"
 1383      6F6400
 1384              	.LASF24:
 1385 00aa 4F6E6557 		.ascii	"OneWire_TimerDelay_ReadStatusRegister\000"
 1385      6972655F 
 1385      54696D65 
 1385      7244656C 
 1385      61795F52 
 1386              	.LASF19:
 1387 00d0 4F6E6557 		.ascii	"OneWire_TimerDelay_Start\000"
 1387      6972655F 
 1387      54696D65 
 1387      7244656C 
 1387      61795F53 
 1388              	.LASF3:
 1389 00e9 73686F72 		.ascii	"short unsigned int\000"
 1389      7420756E 
 1389      7369676E 
 1389      65642069 
 1389      6E7400
 1390              	.LASF11:
 1391 00fc 666C6F61 		.ascii	"float\000"
 1391      7400
 1392              	.LASF34:
 1393 0102 636F756E 		.ascii	"counter\000"
 1393      74657200 
 1394              	.LASF1:
 1395 010a 756E7369 		.ascii	"unsigned char\000"
 1395      676E6564 
 1395      20636861 
 1395      7200
 1396              	.LASF14:
 1397 0118 72656738 		.ascii	"reg8\000"
 1397      00
 1398              	.LASF5:
 1399 011d 6C6F6E67 		.ascii	"long unsigned int\000"
 1399      20756E73 
 1399      69676E65 
 1399      6420696E 
 1399      7400
 1400              	.LASF9:
 1401 012f 75696E74 		.ascii	"uint8\000"
 1401      3800
 1402              	.LASF28:
 1403 0135 636F6E74 		.ascii	"control\000"
 1403      726F6C00 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 40


 1404              	.LASF39:
 1405 013d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1405      43313120 
 1405      352E342E 
 1405      31203230 
 1405      31363036 
 1406 0170 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1406      20726576 
 1406      6973696F 
 1406      6E203233 
 1406      37373135 
 1407 01a3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1407      66756E63 
 1407      74696F6E 
 1407      2D736563 
 1407      74696F6E 
 1408              	.LASF25:
 1409 01cb 4F6E6557 		.ascii	"OneWire_TimerDelay_ReadControlRegister\000"
 1409      6972655F 
 1409      54696D65 
 1409      7244656C 
 1409      61795F52 
 1410              	.LASF12:
 1411 01f2 646F7562 		.ascii	"double\000"
 1411      6C6500
 1412              	.LASF38:
 1413 01f9 4F6E6557 		.ascii	"OneWire_TimerDelay_ClearFIFO\000"
 1413      6972655F 
 1413      54696D65 
 1413      7244656C 
 1413      61795F43 
 1414              	.LASF21:
 1415 0216 4F6E6557 		.ascii	"OneWire_TimerDelay_Init\000"
 1415      6972655F 
 1415      54696D65 
 1415      7244656C 
 1415      61795F49 
 1416              	.LASF10:
 1417 022e 75696E74 		.ascii	"uint16\000"
 1417      313600
 1418              	.LASF23:
 1419 0235 4F6E6557 		.ascii	"OneWire_TimerDelay_SoftwareCapture\000"
 1419      6972655F 
 1419      54696D65 
 1419      7244656C 
 1419      61795F53 
 1420              	.LASF8:
 1421 0258 756E7369 		.ascii	"unsigned int\000"
 1421      676E6564 
 1421      20696E74 
 1421      00
 1422              	.LASF26:
 1423 0265 4F6E6557 		.ascii	"OneWire_TimerDelay_WriteControlRegister\000"
 1423      6972655F 
 1423      54696D65 
 1423      7244656C 
 1423      61795F57 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 41


 1424              	.LASF32:
 1425 028d 4F6E6557 		.ascii	"OneWire_TimerDelay_ReadCapture\000"
 1425      6972655F 
 1425      54696D65 
 1425      7244656C 
 1425      61795F52 
 1426              	.LASF7:
 1427 02ac 6C6F6E67 		.ascii	"long long unsigned int\000"
 1427      206C6F6E 
 1427      6720756E 
 1427      7369676E 
 1427      65642069 
 1428              	.LASF43:
 1429 02c3 4F6E6557 		.ascii	"OneWire_TimerDelay_initVar\000"
 1429      6972655F 
 1429      54696D65 
 1429      7244656C 
 1429      61795F69 
 1430              	.LASF17:
 1431 02de 73697A65 		.ascii	"sizetype\000"
 1431      74797065 
 1431      00
 1432              	.LASF6:
 1433 02e7 6C6F6E67 		.ascii	"long long int\000"
 1433      206C6F6E 
 1433      6720696E 
 1433      7400
 1434              	.LASF27:
 1435 02f5 696E7465 		.ascii	"interruptMode\000"
 1435      72727570 
 1435      744D6F64 
 1435      6500
 1436              	.LASF33:
 1437 0303 4F6E6557 		.ascii	"OneWire_TimerDelay_WriteCounter\000"
 1437      6972655F 
 1437      54696D65 
 1437      7244656C 
 1437      61795F57 
 1438              	.LASF2:
 1439 0323 73686F72 		.ascii	"short int\000"
 1439      7420696E 
 1439      7400
 1440              	.LASF40:
 1441 032d 47656E65 		.ascii	"Generated_Source\\PSoC4\\OneWire_TimerDelay.c\000"
 1441      72617465 
 1441      645F536F 
 1441      75726365 
 1441      5C50536F 
 1442              	.LASF42:
 1443 0359 4F6E6557 		.ascii	"OneWire_TimerDelay_interruptState\000"
 1443      6972655F 
 1443      54696D65 
 1443      7244656C 
 1443      61795F69 
 1444              	.LASF4:
 1445 037b 6C6F6E67 		.ascii	"long int\000"
 1445      20696E74 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccn53ejt.s 			page 42


 1445      00
 1446              	.LASF13:
 1447 0384 63686172 		.ascii	"char\000"
 1447      00
 1448              	.LASF35:
 1449 0389 4F6E6557 		.ascii	"OneWire_TimerDelay_ReadCounter\000"
 1449      6972655F 
 1449      54696D65 
 1449      7244656C 
 1449      61795F52 
 1450              	.LASF16:
 1451 03a8 6C6F6E67 		.ascii	"long double\000"
 1451      20646F75 
 1451      626C6500 
 1452              	.LASF0:
 1453 03b4 7369676E 		.ascii	"signed char\000"
 1453      65642063 
 1453      68617200 
 1454              	.LASF41:
 1455 03c0 433A5C55 		.ascii	"C:\\Users\\User\\Desktop\\Hi\\Demo1\\DS18x8_demo.cy"
 1455      73657273 
 1455      5C557365 
 1455      725C4465 
 1455      736B746F 
 1456 03ed 64736E00 		.ascii	"dsn\000"
 1457              	.LASF18:
 1458 03f1 4F6E6557 		.ascii	"OneWire_TimerDelay_Enable\000"
 1458      6972655F 
 1458      54696D65 
 1458      7244656C 
 1458      61795F45 
 1459              	.LASF30:
 1460 040b 4F6E6557 		.ascii	"OneWire_TimerDelay_WritePeriod\000"
 1460      6972655F 
 1460      54696D65 
 1460      7244656C 
 1460      61795F57 
 1461              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
