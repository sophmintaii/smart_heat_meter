ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB2:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 5


 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 108 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 109 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 124 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE2:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
 157              	CySysClkImoStop:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 6


 158              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 140 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 169              		.loc 1 149 0
 170 0004 044B     		ldr	r3, .L5
 171 0006 044A     		ldr	r2, .L5
 172 0008 1268     		ldr	r2, [r2]
 173 000a 5200     		lsls	r2, r2, #1
 174 000c 5208     		lsrs	r2, r2, #1
 175 000e 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 150 0
 177 0010 C046     		nop
 178 0012 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0014 80BD     		pop	{r7, pc}
 181              	.L6:
 182 0016 C046     		.align	2
 183              	.L5:
 184 0018 08010B40 		.word	1074462984
 185              		.cfi_endproc
 186              	.LFE3:
 187              		.size	CySysClkImoStop, .-CySysClkImoStop
 188              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 7


 189              		.align	2
 190              		.global	CySysClkWriteHfclkDirect
 191              		.code	16
 192              		.thumb_func
 193              		.type	CySysClkWriteHfclkDirect, %function
 194              	CySysClkWriteHfclkDirect:
 195              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 8


 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 9


 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 10


 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 11


 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 12


 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 196              		.loc 1 430 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 85B0     		sub	sp, sp, #20
 206              		.cfi_def_cfa_offset 32
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 210              		.loc 1 434 0
 211 0008 0F23     		movs	r3, #15
 212 000a FC18     		adds	r4, r7, r3
 213 000c FFF7FEFF 		bl	CyEnterCriticalSection
 214 0010 0300     		movs	r3, r0
 215 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 437 0
 217 0014 0B4B     		ldr	r3, .L8
 218 0016 1B68     		ldr	r3, [r3]
 219 0018 0722     		movs	r2, #7
 220 001a 9343     		bics	r3, r2
 221 001c BB60     		str	r3, [r7, #8]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 448 0
 223 001e 7B68     		ldr	r3, [r7, #4]
 224 0020 0722     		movs	r2, #7
 225 0022 1340     		ands	r3, r2
 226 0024 BA68     		ldr	r2, [r7, #8]
 227 0026 1343     		orrs	r3, r2
 228 0028 BB60     		str	r3, [r7, #8]
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 229              		.loc 1 451 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 13


 230 002a 064B     		ldr	r3, .L8
 231 002c BA68     		ldr	r2, [r7, #8]
 232 002e 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 233              		.loc 1 453 0
 234 0030 0F23     		movs	r3, #15
 235 0032 FB18     		adds	r3, r7, r3
 236 0034 1B78     		ldrb	r3, [r3]
 237 0036 1800     		movs	r0, r3
 238 0038 FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 454 0
 240 003c C046     		nop
 241 003e BD46     		mov	sp, r7
 242 0040 05B0     		add	sp, sp, #20
 243              		@ sp needed
 244 0042 90BD     		pop	{r4, r7, pc}
 245              	.L9:
 246              		.align	2
 247              	.L8:
 248 0044 00010B40 		.word	1074462976
 249              		.cfi_endproc
 250              	.LFE4:
 251              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 252              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 253              		.align	2
 254              		.global	CySysEnablePumpClock
 255              		.code	16
 256              		.thumb_func
 257              		.type	CySysEnablePumpClock, %function
 258              	CySysEnablePumpClock:
 259              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 260              		.loc 1 474 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 14


 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 273              		.loc 1 476 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 0122     		movs	r2, #1
 276 000c 1340     		ands	r3, r2
 277 000e 08D0     		beq	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 278              		.loc 1 478 0
 279 0010 0C4A     		ldr	r2, .L14
 280 0012 0C4B     		ldr	r3, .L14
 281 0014 1968     		ldr	r1, [r3]
 282 0016 0C4B     		ldr	r3, .L14+4
 283 0018 1B68     		ldr	r3, [r3]
 284 001a 5B06     		lsls	r3, r3, #25
 285 001c 0B43     		orrs	r3, r1
 286 001e 1360     		str	r3, [r2]
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 498 0
 288 0020 0CE0     		b	.L13
 289              	.L11:
 482:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 290              		.loc 1 482 0
 291 0022 084B     		ldr	r3, .L14
 292 0024 1B68     		ldr	r3, [r3]
 293 0026 5B0E     		lsrs	r3, r3, #25
 294 0028 0722     		movs	r2, #7
 295 002a 1A40     		ands	r2, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 15


 296 002c 064B     		ldr	r3, .L14+4
 297 002e 1A60     		str	r2, [r3]
 484:Generated_Source\PSoC4/CyLib.c ****         }
 298              		.loc 1 484 0
 299 0030 044B     		ldr	r3, .L14
 300 0032 044A     		ldr	r2, .L14
 301 0034 1268     		ldr	r2, [r2]
 302 0036 0549     		ldr	r1, .L14+8
 303 0038 0A40     		ands	r2, r1
 304 003a 1A60     		str	r2, [r3]
 305              	.L13:
 306              		.loc 1 498 0
 307 003c C046     		nop
 308 003e BD46     		mov	sp, r7
 309 0040 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0042 80BD     		pop	{r7, pc}
 312              	.L15:
 313              		.align	2
 314              	.L14:
 315 0044 08010B40 		.word	1074462984
 316 0048 00000000 		.word	CySysClkPumpConfig
 317 004c FFFFFFF1 		.word	-234881025
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 321              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 322              		.align	2
 323              		.global	CySysClkGetSysclkSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysClkGetSysclkSource, %function
 327              	CySysClkGetSysclkSource:
 328              	.LFB6:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 329              		.loc 1 511 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 16


 339              		.cfi_def_cfa_offset 24
 340 0004 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 342              		.loc 1 515 0
 343 0006 FC1D     		adds	r4, r7, #7
 344 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 345 000c 0300     		movs	r3, r0
 346 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 347              		.loc 1 525 0
 348 0010 074B     		ldr	r3, .L18
 349 0012 1B68     		ldr	r3, [r3]
 350 0014 0722     		movs	r2, #7
 351 0016 1340     		ands	r3, r2
 352 0018 3B60     		str	r3, [r7]
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 353              		.loc 1 528 0
 354 001a FB1D     		adds	r3, r7, #7
 355 001c 1B78     		ldrb	r3, [r3]
 356 001e 1800     		movs	r0, r3
 357 0020 FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 358              		.loc 1 530 0
 359 0024 3B68     		ldr	r3, [r7]
 531:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 531 0
 361 0026 1800     		movs	r0, r3
 362 0028 BD46     		mov	sp, r7
 363 002a 03B0     		add	sp, sp, #12
 364              		@ sp needed
 365 002c 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367 002e C046     		.align	2
 368              	.L18:
 369 0030 00010B40 		.word	1074462976
 370              		.cfi_endproc
 371              	.LFE6:
 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 17


 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 566 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
 394 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 18


 395              		.loc 1 569 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 401              		.loc 1 571 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 7A68     		ldr	r2, [r7, #4]
 404 0018 D104     		lsls	r1, r2, #19
 405 001a E022     		movs	r2, #224
 406 001c 9203     		lsls	r2, r2, #14
 407 001e 1140     		ands	r1, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 408              		.loc 1 573 0
 409 0020 074A     		ldr	r2, .L21
 410 0022 1268     		ldr	r2, [r2]
 411 0024 0748     		ldr	r0, .L21+4
 412 0026 0240     		ands	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 413              		.loc 1 572 0
 414 0028 0A43     		orrs	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 415              		.loc 1 571 0
 416 002a 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 417              		.loc 1 576 0
 418 002c 0F23     		movs	r3, #15
 419 002e FB18     		adds	r3, r7, r3
 420 0030 1B78     		ldrb	r3, [r3]
 421 0032 1800     		movs	r0, r3
 422 0034 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 577 0
 424 0038 C046     		nop
 425 003a BD46     		mov	sp, r7
 426 003c 05B0     		add	sp, sp, #20
 427              		@ sp needed
 428 003e 90BD     		pop	{r4, r7, pc}
 429              	.L22:
 430              		.align	2
 431              	.L21:
 432 0040 00010B40 		.word	1074462976
 433 0044 FFFFC7FF 		.word	-3670017
 434              		.cfi_endproc
 435              	.LFE7:
 436              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 437              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 438              		.align	2
 439              		.global	CySysClkWriteImoFreq
 440              		.code	16
 441              		.thumb_func
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 19


 442              		.type	CySysClkWriteImoFreq, %function
 443              	CySysClkWriteImoFreq:
 444              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 445              		.loc 1 624 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 20


 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              		.cfi_def_cfa_offset 32
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 459              		.loc 1 647 0
 460 0008 0C23     		movs	r3, #12
 461 000a FC18     		adds	r4, r7, r3
 462 000c FFF7FEFF 		bl	CyEnterCriticalSection
 463 0010 0300     		movs	r3, r0
 464 0012 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 21


 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 465              		.loc 1 697 0
 466 0014 7B68     		ldr	r3, [r7, #4]
 467 0016 022B     		cmp	r3, #2
 468 0018 00D8     		bhi	.LCB302
 469 001a B3E0     		b	.L24	@long jump
 470              	.LCB302:
 471              		.loc 1 697 0 is_stmt 0 discriminator 1
 472 001c 7B68     		ldr	r3, [r7, #4]
 473 001e 302B     		cmp	r3, #48
 474 0020 00D9     		bls	.LCB305
 475 0022 AFE0     		b	.L24	@long jump
 476              	.LCB305:
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 477              		.loc 1 699 0 is_stmt 1
 478 0024 5E4B     		ldr	r3, .L35
 479 0026 1B78     		ldrb	r3, [r3]
 480 0028 DBB2     		uxtb	r3, r3
 481 002a 1A00     		movs	r2, r3
 482 002c 7B68     		ldr	r3, [r7, #4]
 483 002e 9A42     		cmp	r2, r3
 484 0030 0AD3     		bcc	.L25
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 485              		.loc 1 701 0
 486 0032 5C4A     		ldr	r2, .L35+4
 487 0034 0F23     		movs	r3, #15
 488 0036 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 22


 489 0038 1278     		ldrb	r2, [r2]
 490 003a 1A70     		strb	r2, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 491              		.loc 1 702 0
 492 003c 5A4A     		ldr	r2, .L35+8
 493 003e 0E23     		movs	r3, #14
 494 0040 FB18     		adds	r3, r7, r3
 495 0042 1278     		ldrb	r2, [r2]
 496 0044 1A70     		strb	r2, [r3]
 497 0046 3FE0     		b	.L26
 498              	.L25:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 499              		.loc 1 704 0
 500 0048 584B     		ldr	r3, .L35+12
 501 004a 1B78     		ldrb	r3, [r3]
 502 004c DBB2     		uxtb	r3, r3
 503 004e 1A00     		movs	r2, r3
 504 0050 7B68     		ldr	r3, [r7, #4]
 505 0052 9A42     		cmp	r2, r3
 506 0054 0AD3     		bcc	.L27
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 507              		.loc 1 706 0
 508 0056 564A     		ldr	r2, .L35+16
 509 0058 0F23     		movs	r3, #15
 510 005a FB18     		adds	r3, r7, r3
 511 005c 1278     		ldrb	r2, [r2]
 512 005e 1A70     		strb	r2, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 513              		.loc 1 707 0
 514 0060 544A     		ldr	r2, .L35+20
 515 0062 0E23     		movs	r3, #14
 516 0064 FB18     		adds	r3, r7, r3
 517 0066 1278     		ldrb	r2, [r2]
 518 0068 1A70     		strb	r2, [r3]
 519 006a 2DE0     		b	.L26
 520              	.L27:
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 521              		.loc 1 709 0
 522 006c 524B     		ldr	r3, .L35+24
 523 006e 1B78     		ldrb	r3, [r3]
 524 0070 DBB2     		uxtb	r3, r3
 525 0072 1A00     		movs	r2, r3
 526 0074 7B68     		ldr	r3, [r7, #4]
 527 0076 9A42     		cmp	r2, r3
 528 0078 0AD3     		bcc	.L28
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 529              		.loc 1 711 0
 530 007a 504A     		ldr	r2, .L35+28
 531 007c 0F23     		movs	r3, #15
 532 007e FB18     		adds	r3, r7, r3
 533 0080 1278     		ldrb	r2, [r2]
 534 0082 1A70     		strb	r2, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 23


 535              		.loc 1 712 0
 536 0084 4E4A     		ldr	r2, .L35+32
 537 0086 0E23     		movs	r3, #14
 538 0088 FB18     		adds	r3, r7, r3
 539 008a 1278     		ldrb	r2, [r2]
 540 008c 1A70     		strb	r2, [r3]
 541 008e 1BE0     		b	.L26
 542              	.L28:
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 543              		.loc 1 714 0
 544 0090 4C4B     		ldr	r3, .L35+36
 545 0092 1B78     		ldrb	r3, [r3]
 546 0094 DBB2     		uxtb	r3, r3
 547 0096 1A00     		movs	r2, r3
 548 0098 7B68     		ldr	r3, [r7, #4]
 549 009a 9A42     		cmp	r2, r3
 550 009c 0AD3     		bcc	.L29
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 551              		.loc 1 716 0
 552 009e 4A4A     		ldr	r2, .L35+40
 553 00a0 0F23     		movs	r3, #15
 554 00a2 FB18     		adds	r3, r7, r3
 555 00a4 1278     		ldrb	r2, [r2]
 556 00a6 1A70     		strb	r2, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 557              		.loc 1 717 0
 558 00a8 484A     		ldr	r2, .L35+44
 559 00aa 0E23     		movs	r3, #14
 560 00ac FB18     		adds	r3, r7, r3
 561 00ae 1278     		ldrb	r2, [r2]
 562 00b0 1A70     		strb	r2, [r3]
 563 00b2 09E0     		b	.L26
 564              	.L29:
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 565              		.loc 1 721 0
 566 00b4 464A     		ldr	r2, .L35+48
 567 00b6 0F23     		movs	r3, #15
 568 00b8 FB18     		adds	r3, r7, r3
 569 00ba 1278     		ldrb	r2, [r2]
 570 00bc 1A70     		strb	r2, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 571              		.loc 1 722 0
 572 00be 454A     		ldr	r2, .L35+52
 573 00c0 0E23     		movs	r3, #14
 574 00c2 FB18     		adds	r3, r7, r3
 575 00c4 1278     		ldrb	r2, [r2]
 576 00c6 1A70     		strb	r2, [r3]
 577              	.L26:
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 24


 578              		.loc 1 726 0
 579 00c8 7B68     		ldr	r3, [r7, #4]
 580 00ca DA1E     		subs	r2, r3, #3
 581 00cc 0B23     		movs	r3, #11
 582 00ce FB18     		adds	r3, r7, r3
 583 00d0 4149     		ldr	r1, .L35+56
 584 00d2 8A5C     		ldrb	r2, [r1, r2]
 585 00d4 1A70     		strb	r2, [r3]
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 586              		.loc 1 738 0
 587 00d6 0B23     		movs	r3, #11
 588 00d8 FB18     		adds	r3, r7, r3
 589 00da 1B78     		ldrb	r3, [r3]
 590 00dc 2F2B     		cmp	r3, #47
 591 00de 0DD9     		bls	.L30
 592              		.loc 1 738 0 is_stmt 0 discriminator 1
 593 00e0 7B68     		ldr	r3, [r7, #4]
 594 00e2 2A2B     		cmp	r3, #42
 595 00e4 0AD9     		bls	.L30
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 596              		.loc 1 741 0 is_stmt 1
 597 00e6 3D4B     		ldr	r3, .L35+60
 598 00e8 1922     		movs	r2, #25
 599 00ea 1A60     		str	r2, [r3]
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 600              		.loc 1 744 0
 601 00ec 0520     		movs	r0, #5
 602 00ee FFF7FEFF 		bl	CyDelayCycles
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 603              		.loc 1 746 0
 604 00f2 0D23     		movs	r3, #13
 605 00f4 FB18     		adds	r3, r7, r3
 606 00f6 1922     		movs	r2, #25
 607 00f8 1A70     		strb	r2, [r3]
 608 00fa 07E0     		b	.L31
 609              	.L30:
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 610              		.loc 1 750 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 25


 611 00fc 374B     		ldr	r3, .L35+60
 612 00fe 1B68     		ldr	r3, [r3]
 613 0100 DAB2     		uxtb	r2, r3
 614 0102 0D23     		movs	r3, #13
 615 0104 FB18     		adds	r3, r7, r3
 616 0106 3F21     		movs	r1, #63
 617 0108 0A40     		ands	r2, r1
 618 010a 1A70     		strb	r2, [r3]
 619              	.L31:
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 620              		.loc 1 762 0
 621 010c 0B23     		movs	r3, #11
 622 010e FA18     		adds	r2, r7, r3
 623 0110 0D23     		movs	r3, #13
 624 0112 FB18     		adds	r3, r7, r3
 625 0114 1278     		ldrb	r2, [r2]
 626 0116 1B78     		ldrb	r3, [r3]
 627 0118 9A42     		cmp	r2, r3
 628 011a 08D2     		bcs	.L32
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 629              		.loc 1 765 0
 630 011c 2F4B     		ldr	r3, .L35+60
 631 011e 7A68     		ldr	r2, [r7, #4]
 632 0120 033A     		subs	r2, r2, #3
 633 0122 2D49     		ldr	r1, .L35+56
 634 0124 8A5C     		ldrb	r2, [r1, r2]
 635 0126 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 636              		.loc 1 766 0
 637 0128 0520     		movs	r0, #5
 638 012a FFF7FEFF 		bl	CyDelayCycles
 639              	.L32:
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 26


 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 640              		.loc 1 785 0
 641 012e 7B68     		ldr	r3, [r7, #4]
 642 0130 284A     		ldr	r2, .L35+52
 643 0132 9A18     		adds	r2, r3, r2
 644 0134 0A23     		movs	r3, #10
 645 0136 FB18     		adds	r3, r7, r3
 646 0138 1278     		ldrb	r2, [r2]
 647 013a 1A70     		strb	r2, [r3]
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 648              		.loc 1 789 0
 649 013c 284B     		ldr	r3, .L35+64
 650 013e 0A22     		movs	r2, #10
 651 0140 BA18     		adds	r2, r7, r2
 652 0142 1278     		ldrb	r2, [r2]
 653 0144 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 654              		.loc 1 790 0
 655 0146 274B     		ldr	r3, .L35+68
 656 0148 0F22     		movs	r2, #15
 657 014a BA18     		adds	r2, r7, r2
 658 014c 1278     		ldrb	r2, [r2]
 659 014e 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 660              		.loc 1 791 0
 661 0150 254B     		ldr	r3, .L35+72
 662 0152 0E22     		movs	r2, #14
 663 0154 BA18     		adds	r2, r7, r2
 664 0156 1278     		ldrb	r2, [r2]
 665 0158 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 666              		.loc 1 792 0
 667 015a 0520     		movs	r0, #5
 668 015c FFF7FEFF 		bl	CyDelayUs
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 669              		.loc 1 794 0
 670 0160 0B23     		movs	r3, #11
 671 0162 FA18     		adds	r2, r7, r3
 672 0164 0D23     		movs	r3, #13
 673 0166 FB18     		adds	r3, r7, r3
 674 0168 1278     		ldrb	r2, [r2]
 675 016a 1B78     		ldrb	r3, [r3]
 676 016c 9A42     		cmp	r2, r3
 677 016e 0CD9     		bls	.L34
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 27


 678              		.loc 1 797 0
 679 0170 1A4B     		ldr	r3, .L35+60
 680 0172 7A68     		ldr	r2, [r7, #4]
 681 0174 033A     		subs	r2, r2, #3
 682 0176 1849     		ldr	r1, .L35+56
 683 0178 8A5C     		ldrb	r2, [r1, r2]
 684 017a 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 685              		.loc 1 798 0
 686 017c 0520     		movs	r0, #5
 687 017e FFF7FEFF 		bl	CyDelayCycles
 794:Generated_Source\PSoC4/CyLib.c ****             {
 688              		.loc 1 794 0
 689 0182 02E0     		b	.L34
 690              	.L24:
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 691              		.loc 1 804 0 discriminator 1
 692 0184 0020     		movs	r0, #0
 693 0186 FFF7FEFF 		bl	CyHalt
 694              	.L34:
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 695              		.loc 1 823 0
 696 018a 0C23     		movs	r3, #12
 697 018c FB18     		adds	r3, r7, r3
 698 018e 1B78     		ldrb	r3, [r3]
 699 0190 1800     		movs	r0, r3
 700 0192 FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 701              		.loc 1 824 0
 702 0196 C046     		nop
 703 0198 BD46     		mov	sp, r7
 704 019a 05B0     		add	sp, sp, #20
 705              		@ sp needed
 706 019c 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 28


 707              	.L36:
 708 019e C046     		.align	2
 709              	.L35:
 710 01a0 40F3FF0F 		.word	268432192
 711 01a4 41F3FF0F 		.word	268432193
 712 01a8 42F3FF0F 		.word	268432194
 713 01ac 43F3FF0F 		.word	268432195
 714 01b0 44F3FF0F 		.word	268432196
 715 01b4 45F3FF0F 		.word	268432197
 716 01b8 46F3FF0F 		.word	268432198
 717 01bc 47F3FF0F 		.word	268432199
 718 01c0 48F3FF0F 		.word	268432200
 719 01c4 49F3FF0F 		.word	268432201
 720 01c8 4AF3FF0F 		.word	268432202
 721 01cc 4BF3FF0F 		.word	268432203
 722 01d0 4CF3FF0F 		.word	268432204
 723 01d4 4DF3FF0F 		.word	268432205
 724 01d8 00000000 		.word	cyImoFreqMhz2Reg
 725 01dc 2CFF0B40 		.word	1074528044
 726 01e0 28FF0B40 		.word	1074528040
 727 01e4 1CFF0B40 		.word	1074528028
 728 01e8 20FF0B40 		.word	1074528032
 729              		.cfi_endproc
 730              	.LFE8:
 731              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 732              		.section	.text.CySysClkEcoStart,"ax",%progbits
 733              		.align	2
 734              		.global	CySysClkEcoStart
 735              		.code	16
 736              		.thumb_func
 737              		.type	CySysClkEcoStart, %function
 738              	CySysClkEcoStart:
 739              	.LFB9:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 29


 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 30


 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 31


 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 32


1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
 740              		.loc 1 1028 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 16
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744 0000 80B5     		push	{r7, lr}
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 84B0     		sub	sp, sp, #16
 749              		.cfi_def_cfa_offset 24
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 753              		.loc 1 1029 0
 754 0008 0023     		movs	r3, #0
 755 000a FB60     		str	r3, [r7, #12]
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 756              		.loc 1 1033 0
 757 000c 154B     		ldr	r3, .L43
 758 000e 154A     		ldr	r2, .L43
 759 0010 1268     		ldr	r2, [r2]
 760 0012 0121     		movs	r1, #1
 761 0014 0A43     		orrs	r2, r1
 762 0016 1A60     		str	r2, [r3]
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 763              		.loc 1 1036 0
 764 0018 134B     		ldr	r3, .L43+4
 765 001a 144A     		ldr	r2, .L43+8
 766 001c 1A60     		str	r2, [r3]
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 767              		.loc 1 1039 0
 768 001e 144B     		ldr	r3, .L43+12
 769 0020 134A     		ldr	r2, .L43+12
 770 0022 1268     		ldr	r2, [r2]
 771 0024 8021     		movs	r1, #128
 772 0026 0902     		lsls	r1, r1, #8
 773 0028 0A43     		orrs	r2, r1
 774 002a 1A60     		str	r2, [r3]
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 33


1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 34


1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 775              		.loc 1 1137 0
 776 002c 7B68     		ldr	r3, [r7, #4]
 777 002e 002B     		cmp	r3, #0
 778 0030 12D0     		beq	.L38
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 779              		.loc 1 1139 0
 780 0032 1023     		movs	r3, #16
 781 0034 FB60     		str	r3, [r7, #12]
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 782              		.loc 1 1141 0
 783 0036 0CE0     		b	.L39
 784              	.L41:
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 785              		.loc 1 1143 0
 786 0038 0120     		movs	r0, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 35


 787 003a FFF7FEFF 		bl	CyDelayUs
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 788              		.loc 1 1145 0
 789 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 790 0042 031E     		subs	r3, r0, #0
 791 0044 02D0     		beq	.L40
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 792              		.loc 1 1147 0
 793 0046 0023     		movs	r3, #0
 794 0048 FB60     		str	r3, [r7, #12]
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
 795              		.loc 1 1148 0
 796 004a 05E0     		b	.L38
 797              	.L40:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 798              		.loc 1 1141 0
 799 004c 7B68     		ldr	r3, [r7, #4]
 800 004e 013B     		subs	r3, r3, #1
 801 0050 7B60     		str	r3, [r7, #4]
 802              	.L39:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 803              		.loc 1 1141 0 is_stmt 0 discriminator 1
 804 0052 7B68     		ldr	r3, [r7, #4]
 805 0054 002B     		cmp	r3, #0
 806 0056 EFD1     		bne	.L41
 807              	.L38:
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 808              		.loc 1 1154 0 is_stmt 1
 809 0058 FB68     		ldr	r3, [r7, #12]
1155:Generated_Source\PSoC4/CyLib.c ****     }
 810              		.loc 1 1155 0
 811 005a 1800     		movs	r0, r3
 812 005c BD46     		mov	sp, r7
 813 005e 04B0     		add	sp, sp, #16
 814              		@ sp needed
 815 0060 80BD     		pop	{r7, pc}
 816              	.L44:
 817 0062 C046     		.align	2
 818              	.L43:
 819 0064 60F02E40 		.word	1076818016
 820 0068 78002E40 		.word	1076756600
 821 006c 02200000 		.word	8194
 822 0070 10002E40 		.word	1076756496
 823              		.cfi_endproc
 824              	.LFE9:
 825              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 826              		.section	.text.CySysClkEcoStop,"ax",%progbits
 827              		.align	2
 828              		.global	CySysClkEcoStop
 829              		.code	16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 36


 830              		.thumb_func
 831              		.type	CySysClkEcoStop, %function
 832              	CySysClkEcoStop:
 833              	.LFB10:
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 834              		.loc 1 1170 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 7, -8
 841              		.cfi_offset 14, -4
 842 0002 00AF     		add	r7, sp, #0
 843              		.cfi_def_cfa_register 7
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 844              		.loc 1 1173 0
 845 0004 074B     		ldr	r3, .L46
 846 0006 074A     		ldr	r2, .L46
 847 0008 1268     		ldr	r2, [r2]
 848 000a 0121     		movs	r1, #1
 849 000c 8A43     		bics	r2, r1
 850 000e 1A60     		str	r2, [r3]
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 851              		.loc 1 1176 0
 852 0010 054B     		ldr	r3, .L46+4
 853 0012 054A     		ldr	r2, .L46+4
 854 0014 1268     		ldr	r2, [r2]
 855 0016 0549     		ldr	r1, .L46+8
 856 0018 0A40     		ands	r2, r1
 857 001a 1A60     		str	r2, [r3]
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 858              		.loc 1 1182 0
 859 001c C046     		nop
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 37


 860 001e BD46     		mov	sp, r7
 861              		@ sp needed
 862 0020 80BD     		pop	{r7, pc}
 863              	.L47:
 864 0022 C046     		.align	2
 865              	.L46:
 866 0024 60F02E40 		.word	1076818016
 867 0028 10002E40 		.word	1076756496
 868 002c FF7FFFFF 		.word	-32769
 869              		.cfi_endproc
 870              	.LFE10:
 871              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 872              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 873              		.align	2
 874              		.global	CySysClkEcoReadStatus
 875              		.code	16
 876              		.thumb_func
 877              		.type	CySysClkEcoReadStatus, %function
 878              	CySysClkEcoReadStatus:
 879              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 880              		.loc 1 1204 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 8
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884 0000 80B5     		push	{r7, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 7, -8
 887              		.cfi_offset 14, -4
 888 0002 82B0     		sub	sp, sp, #8
 889              		.cfi_def_cfa_offset 16
 890 0004 00AF     		add	r7, sp, #0
 891              		.cfi_def_cfa_register 7
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 38


1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 892              		.loc 1 1208 0
 893 0006 054B     		ldr	r3, .L50
 894 0008 1B68     		ldr	r3, [r3]
 895 000a 0122     		movs	r2, #1
 896 000c 1340     		ands	r3, r2
 897 000e 7B60     		str	r3, [r7, #4]
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 898              		.loc 1 1220 0
 899 0010 7B68     		ldr	r3, [r7, #4]
1221:Generated_Source\PSoC4/CyLib.c ****     }
 900              		.loc 1 1221 0
 901 0012 1800     		movs	r0, r3
 902 0014 BD46     		mov	sp, r7
 903 0016 02B0     		add	sp, sp, #8
 904              		@ sp needed
 905 0018 80BD     		pop	{r7, pc}
 906              	.L51:
 907 001a C046     		.align	2
 908              	.L50:
 909 001c 0C002E40 		.word	1076756492
 910              		.cfi_endproc
 911              	.LFE11:
 912              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 913              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 914              		.align	2
 915              		.global	CySysClkWriteEcoDiv
 916              		.code	16
 917              		.thumb_func
 918              		.type	CySysClkWriteEcoDiv, %function
 919              	CySysClkWriteEcoDiv:
 920              	.LFB12:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 39


1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
 921              		.loc 1 1251 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 16
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925 0000 90B5     		push	{r4, r7, lr}
 926              		.cfi_def_cfa_offset 12
 927              		.cfi_offset 4, -12
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 85B0     		sub	sp, sp, #20
 931              		.cfi_def_cfa_offset 32
 932 0004 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 934 0006 7860     		str	r0, [r7, #4]
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 935              		.loc 1 1254 0
 936 0008 114B     		ldr	r3, .L56
 937 000a 1B68     		ldr	r3, [r3]
 938 000c 0722     		movs	r2, #7
 939 000e 1340     		ands	r3, r2
 940 0010 022B     		cmp	r3, #2
 941 0012 16D0     		beq	.L53
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
 942              		.loc 1 1256 0
 943 0014 0F23     		movs	r3, #15
 944 0016 FC18     		adds	r4, r7, r3
 945 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 946 001c 0300     		movs	r3, r0
 947 001e 2370     		strb	r3, [r4]
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 948              		.loc 1 1258 0
 949 0020 0C4B     		ldr	r3, .L56+4
 950 0022 7A68     		ldr	r2, [r7, #4]
 951 0024 0321     		movs	r1, #3
 952 0026 1140     		ands	r1, r2
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 953              		.loc 1 1259 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 40


 954 0028 0A4A     		ldr	r2, .L56+4
 955 002a 1268     		ldr	r2, [r2]
 956 002c 0320     		movs	r0, #3
 957 002e 8243     		bics	r2, r0
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 958              		.loc 1 1258 0
 959 0030 0A43     		orrs	r2, r1
 960 0032 1A60     		str	r2, [r3]
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 961              		.loc 1 1261 0
 962 0034 0F23     		movs	r3, #15
 963 0036 FB18     		adds	r3, r7, r3
 964 0038 1B78     		ldrb	r3, [r3]
 965 003a 1800     		movs	r0, r3
 966 003c FFF7FEFF 		bl	CyExitCriticalSection
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
 967              		.loc 1 1268 0
 968 0040 02E0     		b	.L55
 969              	.L53:
1266:Generated_Source\PSoC4/CyLib.c ****             }
 970              		.loc 1 1266 0 discriminator 1
 971 0042 0020     		movs	r0, #0
 972 0044 FFF7FEFF 		bl	CyHalt
 973              	.L55:
 974              		.loc 1 1268 0
 975 0048 C046     		nop
 976 004a BD46     		mov	sp, r7
 977 004c 05B0     		add	sp, sp, #20
 978              		@ sp needed
 979 004e 90BD     		pop	{r4, r7, pc}
 980              	.L57:
 981              		.align	2
 982              	.L56:
 983 0050 00010B40 		.word	1074462976
 984 0054 64F02E40 		.word	1076818020
 985              		.cfi_endproc
 986              	.LFE12:
 987              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 988              		.section	.text.CySysLvdEnable,"ax",%progbits
 989              		.align	2
 990              		.global	CySysLvdEnable
 991              		.code	16
 992              		.thumb_func
 993              		.type	CySysLvdEnable, %function
 994              	CySysLvdEnable:
 995              	.LFB13:
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 41


1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 42


1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 43


1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 44


1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 45


1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 46


1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 47


1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 48


1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 49


1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 50


1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 51


1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 52


1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 53


1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 54


2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 55


2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 996              		.loc 1 2119 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 8
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000 0000 80B5     		push	{r7, lr}
 1001              		.cfi_def_cfa_offset 8
 1002              		.cfi_offset 7, -8
 1003              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 56


 1004 0002 82B0     		sub	sp, sp, #8
 1005              		.cfi_def_cfa_offset 16
 1006 0004 00AF     		add	r7, sp, #0
 1007              		.cfi_def_cfa_register 7
 1008 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1009              		.loc 1 2121 0
 1010 0008 144B     		ldr	r3, .L59
 1011 000a 144A     		ldr	r2, .L59
 1012 000c 1268     		ldr	r2, [r2]
 1013 000e 0221     		movs	r1, #2
 1014 0010 8A43     		bics	r2, r1
 1015 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1016              		.loc 1 2124 0
 1017 0014 124B     		ldr	r3, .L59+4
 1018 0016 124A     		ldr	r2, .L59+4
 1019 0018 1268     		ldr	r2, [r2]
 1020 001a 1E21     		movs	r1, #30
 1021 001c 8A43     		bics	r2, r1
 1022 001e 1100     		movs	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1023              		.loc 1 2125 0
 1024 0020 7A68     		ldr	r2, [r7, #4]
 1025 0022 5200     		lsls	r2, r2, #1
 1026 0024 1E20     		movs	r0, #30
 1027 0026 0240     		ands	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1028              		.loc 1 2124 0
 1029 0028 0A43     		orrs	r2, r1
 1030 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1031              		.loc 1 2128 0
 1032 002c 0C4B     		ldr	r3, .L59+4
 1033 002e 0C4A     		ldr	r2, .L59+4
 1034 0030 1268     		ldr	r2, [r2]
 1035 0032 0121     		movs	r1, #1
 1036 0034 0A43     		orrs	r2, r1
 1037 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 1038              		.loc 1 2131 0
 1039 0038 FA23     		movs	r3, #250
 1040 003a 9B00     		lsls	r3, r3, #2
 1041 003c 1800     		movs	r0, r3
 1042 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 1043              		.loc 1 2134 0
 1044 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 57


2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 1045              		.loc 1 2137 0
 1046 0046 054B     		ldr	r3, .L59
 1047 0048 044A     		ldr	r2, .L59
 1048 004a 1268     		ldr	r2, [r2]
 1049 004c 0221     		movs	r1, #2
 1050 004e 0A43     		orrs	r2, r1
 1051 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 1052              		.loc 1 2138 0
 1053 0052 C046     		nop
 1054 0054 BD46     		mov	sp, r7
 1055 0056 02B0     		add	sp, sp, #8
 1056              		@ sp needed
 1057 0058 80BD     		pop	{r7, pc}
 1058              	.L60:
 1059 005a C046     		.align	2
 1060              	.L59:
 1061 005c 08000B40 		.word	1074462728
 1062 0060 18000B40 		.word	1074462744
 1063              		.cfi_endproc
 1064              	.LFE13:
 1065              		.size	CySysLvdEnable, .-CySysLvdEnable
 1066              		.section	.text.CySysLvdDisable,"ax",%progbits
 1067              		.align	2
 1068              		.global	CySysLvdDisable
 1069              		.code	16
 1070              		.thumb_func
 1071              		.type	CySysLvdDisable, %function
 1072              	CySysLvdDisable:
 1073              	.LFB14:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 1074              		.loc 1 2149 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 1, uses_anonymous_args = 0
 1078 0000 80B5     		push	{r7, lr}
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 7, -8
 1081              		.cfi_offset 14, -4
 1082 0002 00AF     		add	r7, sp, #0
 1083              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1084              		.loc 1 2150 0
 1085 0004 074B     		ldr	r3, .L62
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 58


 1086 0006 074A     		ldr	r2, .L62
 1087 0008 1268     		ldr	r2, [r2]
 1088 000a 0221     		movs	r1, #2
 1089 000c 8A43     		bics	r2, r1
 1090 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1091              		.loc 1 2151 0
 1092 0010 054B     		ldr	r3, .L62+4
 1093 0012 054A     		ldr	r2, .L62+4
 1094 0014 1268     		ldr	r2, [r2]
 1095 0016 0121     		movs	r1, #1
 1096 0018 8A43     		bics	r2, r1
 1097 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 1098              		.loc 1 2152 0
 1099 001c C046     		nop
 1100 001e BD46     		mov	sp, r7
 1101              		@ sp needed
 1102 0020 80BD     		pop	{r7, pc}
 1103              	.L63:
 1104 0022 C046     		.align	2
 1105              	.L62:
 1106 0024 08000B40 		.word	1074462728
 1107 0028 18000B40 		.word	1074462744
 1108              		.cfi_endproc
 1109              	.LFE14:
 1110              		.size	CySysLvdDisable, .-CySysLvdDisable
 1111              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 1112              		.align	2
 1113              		.global	CySysLvdGetInterruptSource
 1114              		.code	16
 1115              		.thumb_func
 1116              		.type	CySysLvdGetInterruptSource, %function
 1117              	CySysLvdGetInterruptSource:
 1118              	.LFB15:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 1119              		.loc 1 2167 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 59


 1126              		.cfi_offset 14, -4
 1127 0002 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 1129              		.loc 1 2168 0
 1130 0004 034B     		ldr	r3, .L66
 1131 0006 1B68     		ldr	r3, [r3]
 1132 0008 0222     		movs	r2, #2
 1133 000a 1340     		ands	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 1134              		.loc 1 2169 0
 1135 000c 1800     		movs	r0, r3
 1136 000e BD46     		mov	sp, r7
 1137              		@ sp needed
 1138 0010 80BD     		pop	{r7, pc}
 1139              	.L67:
 1140 0012 C046     		.align	2
 1141              	.L66:
 1142 0014 04000B40 		.word	1074462724
 1143              		.cfi_endproc
 1144              	.LFE15:
 1145              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 1146              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 1147              		.align	2
 1148              		.global	CySysLvdClearInterrupt
 1149              		.code	16
 1150              		.thumb_func
 1151              		.type	CySysLvdClearInterrupt, %function
 1152              	CySysLvdClearInterrupt:
 1153              	.LFB16:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 1154              		.loc 1 2183 0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 1, uses_anonymous_args = 0
 1158 0000 80B5     		push	{r7, lr}
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 7, -8
 1161              		.cfi_offset 14, -4
 1162 0002 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1164              		.loc 1 2184 0
 1165 0004 024B     		ldr	r3, .L69
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 60


 1166 0006 0222     		movs	r2, #2
 1167 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 1168              		.loc 1 2185 0
 1169 000a C046     		nop
 1170 000c BD46     		mov	sp, r7
 1171              		@ sp needed
 1172 000e 80BD     		pop	{r7, pc}
 1173              	.L70:
 1174              		.align	2
 1175              	.L69:
 1176 0010 04000B40 		.word	1074462724
 1177              		.cfi_endproc
 1178              	.LFE16:
 1179              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1180              		.section	.text.CySysGetResetReason,"ax",%progbits
 1181              		.align	2
 1182              		.global	CySysGetResetReason
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	CySysGetResetReason, %function
 1186              	CySysGetResetReason:
 1187              	.LFB17:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 1188              		.loc 1 2209 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 16
 1191              		@ frame_needed = 1, uses_anonymous_args = 0
 1192 0000 80B5     		push	{r7, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 84B0     		sub	sp, sp, #16
 1197              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 61


 1198 0004 00AF     		add	r7, sp, #0
 1199              		.cfi_def_cfa_register 7
 1200 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1201              		.loc 1 2212 0
 1202 0008 7B68     		ldr	r3, [r7, #4]
 1203 000a 1922     		movs	r2, #25
 1204 000c 1340     		ands	r3, r2
 1205 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1206              		.loc 1 2213 0
 1207 0010 064B     		ldr	r3, .L73
 1208 0012 1B68     		ldr	r3, [r3]
 1209 0014 1922     		movs	r2, #25
 1210 0016 1340     		ands	r3, r2
 1211 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 1212              		.loc 1 2215 0
 1213 001a 044B     		ldr	r3, .L73
 1214 001c 7A68     		ldr	r2, [r7, #4]
 1215 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 1216              		.loc 1 2217 0
 1217 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 1218              		.loc 1 2218 0
 1219 0022 1800     		movs	r0, r3
 1220 0024 BD46     		mov	sp, r7
 1221 0026 04B0     		add	sp, sp, #16
 1222              		@ sp needed
 1223 0028 80BD     		pop	{r7, pc}
 1224              	.L74:
 1225 002a C046     		.align	2
 1226              	.L73:
 1227 002c 00030B40 		.word	1074463488
 1228              		.cfi_endproc
 1229              	.LFE17:
 1230              		.size	CySysGetResetReason, .-CySysGetResetReason
 1231              		.section	.text.CyDisableInts,"ax",%progbits
 1232              		.align	2
 1233              		.global	CyDisableInts
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	CyDisableInts, %function
 1237              	CyDisableInts:
 1238              	.LFB18:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 62


2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 1239              		.loc 1 2232 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 8
 1242              		@ frame_needed = 1, uses_anonymous_args = 0
 1243 0000 80B5     		push	{r7, lr}
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 82B0     		sub	sp, sp, #8
 1248              		.cfi_def_cfa_offset 16
 1249 0004 00AF     		add	r7, sp, #0
 1250              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 1251              		.loc 1 2236 0
 1252 0006 064B     		ldr	r3, .L77
 1253 0008 1B68     		ldr	r3, [r3]
 1254 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 1255              		.loc 1 2239 0
 1256 000c 044B     		ldr	r3, .L77
 1257 000e 0122     		movs	r2, #1
 1258 0010 5242     		rsbs	r2, r2, #0
 1259 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 1260              		.loc 1 2241 0
 1261 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 1262              		.loc 1 2242 0
 1263 0016 1800     		movs	r0, r3
 1264 0018 BD46     		mov	sp, r7
 1265 001a 02B0     		add	sp, sp, #8
 1266              		@ sp needed
 1267 001c 80BD     		pop	{r7, pc}
 1268              	.L78:
 1269 001e C046     		.align	2
 1270              	.L77:
 1271 0020 80E100E0 		.word	-536813184
 1272              		.cfi_endproc
 1273              	.LFE18:
 1274              		.size	CyDisableInts, .-CyDisableInts
 1275              		.section	.text.CyEnableInts,"ax",%progbits
 1276              		.align	2
 1277              		.global	CyEnableInts
 1278              		.code	16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 63


 1279              		.thumb_func
 1280              		.type	CyEnableInts, %function
 1281              	CyEnableInts:
 1282              	.LFB19:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 1283              		.loc 1 2255 0
 1284              		.cfi_startproc
 1285              		@ args = 0, pretend = 0, frame = 8
 1286              		@ frame_needed = 1, uses_anonymous_args = 0
 1287 0000 80B5     		push	{r7, lr}
 1288              		.cfi_def_cfa_offset 8
 1289              		.cfi_offset 7, -8
 1290              		.cfi_offset 14, -4
 1291 0002 82B0     		sub	sp, sp, #8
 1292              		.cfi_def_cfa_offset 16
 1293 0004 00AF     		add	r7, sp, #0
 1294              		.cfi_def_cfa_register 7
 1295 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1296              		.loc 1 2256 0
 1297 0008 034B     		ldr	r3, .L80
 1298 000a 7A68     		ldr	r2, [r7, #4]
 1299 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 1300              		.loc 1 2257 0
 1301 000e C046     		nop
 1302 0010 BD46     		mov	sp, r7
 1303 0012 02B0     		add	sp, sp, #8
 1304              		@ sp needed
 1305 0014 80BD     		pop	{r7, pc}
 1306              	.L81:
 1307 0016 C046     		.align	2
 1308              	.L80:
 1309 0018 00E100E0 		.word	-536813312
 1310              		.cfi_endproc
 1311              	.LFE19:
 1312              		.size	CyEnableInts, .-CyEnableInts
 1313              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1314              		.align	2
 1315              		.global	CyIntSetSysVector
 1316              		.code	16
 1317              		.thumb_func
 1318              		.type	CyIntSetSysVector, %function
 1319              	CyIntSetSysVector:
 1320              	.LFB20:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 64


2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 1321              		.loc 1 2280 0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 16
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325 0000 80B5     		push	{r7, lr}
 1326              		.cfi_def_cfa_offset 8
 1327              		.cfi_offset 7, -8
 1328              		.cfi_offset 14, -4
 1329 0002 84B0     		sub	sp, sp, #16
 1330              		.cfi_def_cfa_offset 24
 1331 0004 00AF     		add	r7, sp, #0
 1332              		.cfi_def_cfa_register 7
 1333 0006 0200     		movs	r2, r0
 1334 0008 3960     		str	r1, [r7]
 1335 000a FB1D     		adds	r3, r7, #7
 1336 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1337              		.loc 1 2282 0
 1338 000e 8023     		movs	r3, #128
 1339 0010 9B05     		lsls	r3, r3, #22
 1340 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1341              		.loc 1 2284 0
 1342 0014 FB1D     		adds	r3, r7, #7
 1343 0016 1B78     		ldrb	r3, [r3]
 1344 0018 0F2B     		cmp	r3, #15
 1345 001a 02D9     		bls	.L83
 1346              		.loc 1 2284 0 is_stmt 0 discriminator 1
 1347 001c 0020     		movs	r0, #0
 1348 001e FFF7FEFF 		bl	CyHalt
 1349              	.L83:
2285:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 65


2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1350              		.loc 1 2287 0 is_stmt 1
 1351 0022 FB1D     		adds	r3, r7, #7
 1352 0024 1B78     		ldrb	r3, [r3]
 1353 0026 9B00     		lsls	r3, r3, #2
 1354 0028 FA68     		ldr	r2, [r7, #12]
 1355 002a D318     		adds	r3, r2, r3
 1356 002c 1B68     		ldr	r3, [r3]
 1357 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1358              		.loc 1 2290 0
 1359 0030 FB1D     		adds	r3, r7, #7
 1360 0032 1B78     		ldrb	r3, [r3]
 1361 0034 9B00     		lsls	r3, r3, #2
 1362 0036 FA68     		ldr	r2, [r7, #12]
 1363 0038 D318     		adds	r3, r2, r3
 1364 003a 3A68     		ldr	r2, [r7]
 1365 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1366              		.loc 1 2292 0
 1367 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 1368              		.loc 1 2293 0
 1369 0040 1800     		movs	r0, r3
 1370 0042 BD46     		mov	sp, r7
 1371 0044 04B0     		add	sp, sp, #16
 1372              		@ sp needed
 1373 0046 80BD     		pop	{r7, pc}
 1374              		.cfi_endproc
 1375              	.LFE20:
 1376              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1377              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1378              		.align	2
 1379              		.global	CyIntGetSysVector
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CyIntGetSysVector, %function
 1383              	CyIntGetSysVector:
 1384              	.LFB21:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 66


2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 1385              		.loc 1 2314 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 16
 1388              		@ frame_needed = 1, uses_anonymous_args = 0
 1389 0000 80B5     		push	{r7, lr}
 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 7, -8
 1392              		.cfi_offset 14, -4
 1393 0002 84B0     		sub	sp, sp, #16
 1394              		.cfi_def_cfa_offset 24
 1395 0004 00AF     		add	r7, sp, #0
 1396              		.cfi_def_cfa_register 7
 1397 0006 0200     		movs	r2, r0
 1398 0008 FB1D     		adds	r3, r7, #7
 1399 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1400              		.loc 1 2315 0
 1401 000c 8023     		movs	r3, #128
 1402 000e 9B05     		lsls	r3, r3, #22
 1403 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1404              		.loc 1 2317 0
 1405 0012 FB1D     		adds	r3, r7, #7
 1406 0014 1B78     		ldrb	r3, [r3]
 1407 0016 0F2B     		cmp	r3, #15
 1408 0018 02D9     		bls	.L86
 1409              		.loc 1 2317 0 is_stmt 0 discriminator 1
 1410 001a 0020     		movs	r0, #0
 1411 001c FFF7FEFF 		bl	CyHalt
 1412              	.L86:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1413              		.loc 1 2319 0 is_stmt 1
 1414 0020 FB1D     		adds	r3, r7, #7
 1415 0022 1B78     		ldrb	r3, [r3]
 1416 0024 9B00     		lsls	r3, r3, #2
 1417 0026 FA68     		ldr	r2, [r7, #12]
 1418 0028 D318     		adds	r3, r2, r3
 1419 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 1420              		.loc 1 2320 0
 1421 002c 1800     		movs	r0, r3
 1422 002e BD46     		mov	sp, r7
 1423 0030 04B0     		add	sp, sp, #16
 1424              		@ sp needed
 1425 0032 80BD     		pop	{r7, pc}
 1426              		.cfi_endproc
 1427              	.LFE21:
 1428              		.size	CyIntGetSysVector, .-CyIntGetSysVector
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 67


 1429              		.section	.text.CyIntSetVector,"ax",%progbits
 1430              		.align	2
 1431              		.global	CyIntSetVector
 1432              		.code	16
 1433              		.thumb_func
 1434              		.type	CyIntSetVector, %function
 1435              	CyIntSetVector:
 1436              	.LFB22:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 1437              		.loc 1 2336 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 16
 1440              		@ frame_needed = 1, uses_anonymous_args = 0
 1441 0000 80B5     		push	{r7, lr}
 1442              		.cfi_def_cfa_offset 8
 1443              		.cfi_offset 7, -8
 1444              		.cfi_offset 14, -4
 1445 0002 84B0     		sub	sp, sp, #16
 1446              		.cfi_def_cfa_offset 24
 1447 0004 00AF     		add	r7, sp, #0
 1448              		.cfi_def_cfa_register 7
 1449 0006 0200     		movs	r2, r0
 1450 0008 3960     		str	r1, [r7]
 1451 000a FB1D     		adds	r3, r7, #7
 1452 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1453              		.loc 1 2338 0
 1454 000e 8023     		movs	r3, #128
 1455 0010 9B05     		lsls	r3, r3, #22
 1456 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1457              		.loc 1 2340 0
 1458 0014 FB1D     		adds	r3, r7, #7
 1459 0016 1B78     		ldrb	r3, [r3]
 1460 0018 1F2B     		cmp	r3, #31
 1461 001a 02D9     		bls	.L89
 1462              		.loc 1 2340 0 is_stmt 0 discriminator 1
 1463 001c 0020     		movs	r0, #0
 1464 001e FFF7FEFF 		bl	CyHalt
 1465              	.L89:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 68


2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1466              		.loc 1 2343 0 is_stmt 1
 1467 0022 FB1D     		adds	r3, r7, #7
 1468 0024 1B78     		ldrb	r3, [r3]
 1469 0026 1033     		adds	r3, r3, #16
 1470 0028 9B00     		lsls	r3, r3, #2
 1471 002a FA68     		ldr	r2, [r7, #12]
 1472 002c D318     		adds	r3, r2, r3
 1473 002e 1B68     		ldr	r3, [r3]
 1474 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1475              		.loc 1 2346 0
 1476 0032 FB1D     		adds	r3, r7, #7
 1477 0034 1B78     		ldrb	r3, [r3]
 1478 0036 1033     		adds	r3, r3, #16
 1479 0038 9B00     		lsls	r3, r3, #2
 1480 003a FA68     		ldr	r2, [r7, #12]
 1481 003c D318     		adds	r3, r2, r3
 1482 003e 3A68     		ldr	r2, [r7]
 1483 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1484              		.loc 1 2348 0
 1485 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 1486              		.loc 1 2349 0
 1487 0044 1800     		movs	r0, r3
 1488 0046 BD46     		mov	sp, r7
 1489 0048 04B0     		add	sp, sp, #16
 1490              		@ sp needed
 1491 004a 80BD     		pop	{r7, pc}
 1492              		.cfi_endproc
 1493              	.LFE22:
 1494              		.size	CyIntSetVector, .-CyIntSetVector
 1495              		.section	.text.CyIntGetVector,"ax",%progbits
 1496              		.align	2
 1497              		.global	CyIntGetVector
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	CyIntGetVector, %function
 1501              	CyIntGetVector:
 1502              	.LFB23:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 69


2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 1503              		.loc 1 2364 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 16
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 84B0     		sub	sp, sp, #16
 1512              		.cfi_def_cfa_offset 24
 1513 0004 00AF     		add	r7, sp, #0
 1514              		.cfi_def_cfa_register 7
 1515 0006 0200     		movs	r2, r0
 1516 0008 FB1D     		adds	r3, r7, #7
 1517 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1518              		.loc 1 2365 0
 1519 000c 8023     		movs	r3, #128
 1520 000e 9B05     		lsls	r3, r3, #22
 1521 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1522              		.loc 1 2367 0
 1523 0012 FB1D     		adds	r3, r7, #7
 1524 0014 1B78     		ldrb	r3, [r3]
 1525 0016 1F2B     		cmp	r3, #31
 1526 0018 02D9     		bls	.L92
 1527              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1528 001a 0020     		movs	r0, #0
 1529 001c FFF7FEFF 		bl	CyHalt
 1530              	.L92:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1531              		.loc 1 2369 0 is_stmt 1
 1532 0020 FB1D     		adds	r3, r7, #7
 1533 0022 1B78     		ldrb	r3, [r3]
 1534 0024 1033     		adds	r3, r3, #16
 1535 0026 9B00     		lsls	r3, r3, #2
 1536 0028 FA68     		ldr	r2, [r7, #12]
 1537 002a D318     		adds	r3, r2, r3
 1538 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 1539              		.loc 1 2370 0
 1540 002e 1800     		movs	r0, r3
 1541 0030 BD46     		mov	sp, r7
 1542 0032 04B0     		add	sp, sp, #16
 1543              		@ sp needed
 1544 0034 80BD     		pop	{r7, pc}
 1545              		.cfi_endproc
 1546              	.LFE23:
 1547              		.size	CyIntGetVector, .-CyIntGetVector
 1548 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1549              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 70


 1550              		.global	CyIntSetPriority
 1551              		.code	16
 1552              		.thumb_func
 1553              		.type	CyIntSetPriority, %function
 1554              	CyIntSetPriority:
 1555              	.LFB24:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 1556              		.loc 1 2383 0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 24
 1559              		@ frame_needed = 1, uses_anonymous_args = 0
 1560 0000 90B5     		push	{r4, r7, lr}
 1561              		.cfi_def_cfa_offset 12
 1562              		.cfi_offset 4, -12
 1563              		.cfi_offset 7, -8
 1564              		.cfi_offset 14, -4
 1565 0002 87B0     		sub	sp, sp, #28
 1566              		.cfi_def_cfa_offset 40
 1567 0004 00AF     		add	r7, sp, #0
 1568              		.cfi_def_cfa_register 7
 1569 0006 0200     		movs	r2, r0
 1570 0008 FB1D     		adds	r3, r7, #7
 1571 000a 1A70     		strb	r2, [r3]
 1572 000c BB1D     		adds	r3, r7, #6
 1573 000e 0A1C     		adds	r2, r1, #0
 1574 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1575              		.loc 1 2388 0
 1576 0012 BB1D     		adds	r3, r7, #6
 1577 0014 1B78     		ldrb	r3, [r3]
 1578 0016 032B     		cmp	r3, #3
 1579 0018 02D9     		bls	.L95
 1580              		.loc 1 2388 0 is_stmt 0 discriminator 1
 1581 001a 0020     		movs	r0, #0
 1582 001c FFF7FEFF 		bl	CyHalt
 1583              	.L95:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1584              		.loc 1 2389 0 is_stmt 1
 1585 0020 FB1D     		adds	r3, r7, #7
 1586 0022 1B78     		ldrb	r3, [r3]
 1587 0024 1F2B     		cmp	r3, #31
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 71


 1588 0026 02D9     		bls	.L96
 1589              		.loc 1 2389 0 is_stmt 0 discriminator 1
 1590 0028 0020     		movs	r0, #0
 1591 002a FFF7FEFF 		bl	CyHalt
 1592              	.L96:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1593              		.loc 1 2391 0 is_stmt 1
 1594 002e FB1D     		adds	r3, r7, #7
 1595 0030 1B78     		ldrb	r3, [r3]
 1596 0032 0322     		movs	r2, #3
 1597 0034 1340     		ands	r3, r2
 1598 0036 DB00     		lsls	r3, r3, #3
 1599 0038 0633     		adds	r3, r3, #6
 1600 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1601              		.loc 1 2393 0
 1602 003c 1323     		movs	r3, #19
 1603 003e FC18     		adds	r4, r7, r3
 1604 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1605 0044 0300     		movs	r3, r0
 1606 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1607              		.loc 1 2395 0
 1608 0048 FB1D     		adds	r3, r7, #7
 1609 004a 1B78     		ldrb	r3, [r3]
 1610 004c 9B08     		lsrs	r3, r3, #2
 1611 004e DBB2     		uxtb	r3, r3
 1612 0050 9B00     		lsls	r3, r3, #2
 1613 0052 144A     		ldr	r2, .L97
 1614 0054 9446     		mov	ip, r2
 1615 0056 6344     		add	r3, r3, ip
 1616 0058 1B68     		ldr	r3, [r3]
 1617 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1618              		.loc 1 2396 0
 1619 005c 0322     		movs	r2, #3
 1620 005e 7B69     		ldr	r3, [r7, #20]
 1621 0060 9A40     		lsls	r2, r2, r3
 1622 0062 1300     		movs	r3, r2
 1623 0064 DA43     		mvns	r2, r3
 1624 0066 FB68     		ldr	r3, [r7, #12]
 1625 0068 1340     		ands	r3, r2
 1626 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1627              		.loc 1 2397 0
 1628 006c BB1D     		adds	r3, r7, #6
 1629 006e 1A78     		ldrb	r2, [r3]
 1630 0070 7B69     		ldr	r3, [r7, #20]
 1631 0072 9A40     		lsls	r2, r2, r3
 1632 0074 1300     		movs	r3, r2
 1633 0076 FA68     		ldr	r2, [r7, #12]
 1634 0078 1343     		orrs	r3, r2
 1635 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 72


 1636              		.loc 1 2398 0
 1637 007c FB1D     		adds	r3, r7, #7
 1638 007e 1B78     		ldrb	r3, [r3]
 1639 0080 9B08     		lsrs	r3, r3, #2
 1640 0082 DBB2     		uxtb	r3, r3
 1641 0084 9B00     		lsls	r3, r3, #2
 1642 0086 074A     		ldr	r2, .L97
 1643 0088 9446     		mov	ip, r2
 1644 008a 6344     		add	r3, r3, ip
 1645 008c FA68     		ldr	r2, [r7, #12]
 1646 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1647              		.loc 1 2400 0
 1648 0090 1323     		movs	r3, #19
 1649 0092 FB18     		adds	r3, r7, r3
 1650 0094 1B78     		ldrb	r3, [r3]
 1651 0096 1800     		movs	r0, r3
 1652 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 1653              		.loc 1 2401 0
 1654 009c C046     		nop
 1655 009e BD46     		mov	sp, r7
 1656 00a0 07B0     		add	sp, sp, #28
 1657              		@ sp needed
 1658 00a2 90BD     		pop	{r4, r7, pc}
 1659              	.L98:
 1660              		.align	2
 1661              	.L97:
 1662 00a4 00E400E0 		.word	-536812544
 1663              		.cfi_endproc
 1664              	.LFE24:
 1665              		.size	CyIntSetPriority, .-CyIntSetPriority
 1666              		.section	.text.CyIntGetPriority,"ax",%progbits
 1667              		.align	2
 1668              		.global	CyIntGetPriority
 1669              		.code	16
 1670              		.thumb_func
 1671              		.type	CyIntGetPriority, %function
 1672              	CyIntGetPriority:
 1673              	.LFB25:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 73


 1674              		.loc 1 2417 0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 16
 1677              		@ frame_needed = 1, uses_anonymous_args = 0
 1678 0000 80B5     		push	{r7, lr}
 1679              		.cfi_def_cfa_offset 8
 1680              		.cfi_offset 7, -8
 1681              		.cfi_offset 14, -4
 1682 0002 84B0     		sub	sp, sp, #16
 1683              		.cfi_def_cfa_offset 24
 1684 0004 00AF     		add	r7, sp, #0
 1685              		.cfi_def_cfa_register 7
 1686 0006 0200     		movs	r2, r0
 1687 0008 FB1D     		adds	r3, r7, #7
 1688 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1689              		.loc 1 2420 0
 1690 000c FB1D     		adds	r3, r7, #7
 1691 000e 1B78     		ldrb	r3, [r3]
 1692 0010 1F2B     		cmp	r3, #31
 1693 0012 02D9     		bls	.L100
 1694              		.loc 1 2420 0 is_stmt 0 discriminator 1
 1695 0014 0020     		movs	r0, #0
 1696 0016 FFF7FEFF 		bl	CyHalt
 1697              	.L100:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1698              		.loc 1 2422 0 is_stmt 1
 1699 001a FB1D     		adds	r3, r7, #7
 1700 001c 1B78     		ldrb	r3, [r3]
 1701 001e 9B08     		lsrs	r3, r3, #2
 1702 0020 DBB2     		uxtb	r3, r3
 1703 0022 9B00     		lsls	r3, r3, #2
 1704 0024 0B4A     		ldr	r2, .L102
 1705 0026 9446     		mov	ip, r2
 1706 0028 6344     		add	r3, r3, ip
 1707 002a 1A68     		ldr	r2, [r3]
 1708 002c FB1D     		adds	r3, r7, #7
 1709 002e 1B78     		ldrb	r3, [r3]
 1710 0030 0321     		movs	r1, #3
 1711 0032 0B40     		ands	r3, r1
 1712 0034 DB00     		lsls	r3, r3, #3
 1713 0036 0633     		adds	r3, r3, #6
 1714 0038 DA40     		lsrs	r2, r2, r3
 1715 003a 0F23     		movs	r3, #15
 1716 003c FB18     		adds	r3, r7, r3
 1717 003e 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1718              		.loc 1 2424 0
 1719 0040 0F23     		movs	r3, #15
 1720 0042 FB18     		adds	r3, r7, r3
 1721 0044 1B78     		ldrb	r3, [r3]
 1722 0046 0322     		movs	r2, #3
 1723 0048 1340     		ands	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 74


 1724 004a DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 1725              		.loc 1 2425 0
 1726 004c 1800     		movs	r0, r3
 1727 004e BD46     		mov	sp, r7
 1728 0050 04B0     		add	sp, sp, #16
 1729              		@ sp needed
 1730 0052 80BD     		pop	{r7, pc}
 1731              	.L103:
 1732              		.align	2
 1733              	.L102:
 1734 0054 00E400E0 		.word	-536812544
 1735              		.cfi_endproc
 1736              	.LFE25:
 1737              		.size	CyIntGetPriority, .-CyIntGetPriority
 1738              		.section	.text.CyIntEnable,"ax",%progbits
 1739              		.align	2
 1740              		.global	CyIntEnable
 1741              		.code	16
 1742              		.thumb_func
 1743              		.type	CyIntEnable, %function
 1744              	CyIntEnable:
 1745              	.LFB26:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 1746              		.loc 1 2438 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 8
 1749              		@ frame_needed = 1, uses_anonymous_args = 0
 1750 0000 80B5     		push	{r7, lr}
 1751              		.cfi_def_cfa_offset 8
 1752              		.cfi_offset 7, -8
 1753              		.cfi_offset 14, -4
 1754 0002 82B0     		sub	sp, sp, #8
 1755              		.cfi_def_cfa_offset 16
 1756 0004 00AF     		add	r7, sp, #0
 1757              		.cfi_def_cfa_register 7
 1758 0006 0200     		movs	r2, r0
 1759 0008 FB1D     		adds	r3, r7, #7
 1760 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1761              		.loc 1 2439 0
 1762 000c 064B     		ldr	r3, .L105
 1763 000e FA1D     		adds	r2, r7, #7
 1764 0010 1278     		ldrb	r2, [r2]
 1765 0012 1F21     		movs	r1, #31
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 75


 1766 0014 0A40     		ands	r2, r1
 1767 0016 0121     		movs	r1, #1
 1768 0018 9140     		lsls	r1, r1, r2
 1769 001a 0A00     		movs	r2, r1
 1770 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 1771              		.loc 1 2440 0
 1772 001e C046     		nop
 1773 0020 BD46     		mov	sp, r7
 1774 0022 02B0     		add	sp, sp, #8
 1775              		@ sp needed
 1776 0024 80BD     		pop	{r7, pc}
 1777              	.L106:
 1778 0026 C046     		.align	2
 1779              	.L105:
 1780 0028 00E100E0 		.word	-536813312
 1781              		.cfi_endproc
 1782              	.LFE26:
 1783              		.size	CyIntEnable, .-CyIntEnable
 1784              		.section	.text.CyIntGetState,"ax",%progbits
 1785              		.align	2
 1786              		.global	CyIntGetState
 1787              		.code	16
 1788              		.thumb_func
 1789              		.type	CyIntGetState, %function
 1790              	CyIntGetState:
 1791              	.LFB27:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 1792              		.loc 1 2456 0
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 8
 1795              		@ frame_needed = 1, uses_anonymous_args = 0
 1796 0000 80B5     		push	{r7, lr}
 1797              		.cfi_def_cfa_offset 8
 1798              		.cfi_offset 7, -8
 1799              		.cfi_offset 14, -4
 1800 0002 82B0     		sub	sp, sp, #8
 1801              		.cfi_def_cfa_offset 16
 1802 0004 00AF     		add	r7, sp, #0
 1803              		.cfi_def_cfa_register 7
 1804 0006 0200     		movs	r2, r0
 1805 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 76


 1806 000a 1A70     		strb	r2, [r3]
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1807              		.loc 1 2458 0
 1808 000c 074B     		ldr	r3, .L109
 1809 000e 1A68     		ldr	r2, [r3]
 1810 0010 FB1D     		adds	r3, r7, #7
 1811 0012 1B78     		ldrb	r3, [r3]
 1812 0014 1F21     		movs	r1, #31
 1813 0016 0B40     		ands	r3, r1
 1814 0018 DA40     		lsrs	r2, r2, r3
 1815 001a 1300     		movs	r3, r2
 1816 001c DBB2     		uxtb	r3, r3
 1817 001e 0122     		movs	r2, #1
 1818 0020 1340     		ands	r3, r2
 1819 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 1820              		.loc 1 2459 0
 1821 0024 1800     		movs	r0, r3
 1822 0026 BD46     		mov	sp, r7
 1823 0028 02B0     		add	sp, sp, #8
 1824              		@ sp needed
 1825 002a 80BD     		pop	{r7, pc}
 1826              	.L110:
 1827              		.align	2
 1828              	.L109:
 1829 002c 00E100E0 		.word	-536813312
 1830              		.cfi_endproc
 1831              	.LFE27:
 1832              		.size	CyIntGetState, .-CyIntGetState
 1833              		.section	.text.CyIntDisable,"ax",%progbits
 1834              		.align	2
 1835              		.global	CyIntDisable
 1836              		.code	16
 1837              		.thumb_func
 1838              		.type	CyIntDisable, %function
 1839              	CyIntDisable:
 1840              	.LFB28:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 1841              		.loc 1 2472 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 1, uses_anonymous_args = 0
 1845 0000 80B5     		push	{r7, lr}
 1846              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 77


 1847              		.cfi_offset 7, -8
 1848              		.cfi_offset 14, -4
 1849 0002 82B0     		sub	sp, sp, #8
 1850              		.cfi_def_cfa_offset 16
 1851 0004 00AF     		add	r7, sp, #0
 1852              		.cfi_def_cfa_register 7
 1853 0006 0200     		movs	r2, r0
 1854 0008 FB1D     		adds	r3, r7, #7
 1855 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1856              		.loc 1 2473 0
 1857 000c 064B     		ldr	r3, .L112
 1858 000e FA1D     		adds	r2, r7, #7
 1859 0010 1278     		ldrb	r2, [r2]
 1860 0012 1F21     		movs	r1, #31
 1861 0014 0A40     		ands	r2, r1
 1862 0016 0121     		movs	r1, #1
 1863 0018 9140     		lsls	r1, r1, r2
 1864 001a 0A00     		movs	r2, r1
 1865 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 1866              		.loc 1 2474 0
 1867 001e C046     		nop
 1868 0020 BD46     		mov	sp, r7
 1869 0022 02B0     		add	sp, sp, #8
 1870              		@ sp needed
 1871 0024 80BD     		pop	{r7, pc}
 1872              	.L113:
 1873 0026 C046     		.align	2
 1874              	.L112:
 1875 0028 80E100E0 		.word	-536813184
 1876              		.cfi_endproc
 1877              	.LFE28:
 1878              		.size	CyIntDisable, .-CyIntDisable
 1879              		.section	.text.CyIntSetPending,"ax",%progbits
 1880              		.align	2
 1881              		.global	CyIntSetPending
 1882              		.code	16
 1883              		.thumb_func
 1884              		.type	CyIntSetPending, %function
 1885              	CyIntSetPending:
 1886              	.LFB29:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1887              		.loc 1 2486 0
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 78


 1890              		@ frame_needed = 1, uses_anonymous_args = 0
 1891 0000 80B5     		push	{r7, lr}
 1892              		.cfi_def_cfa_offset 8
 1893              		.cfi_offset 7, -8
 1894              		.cfi_offset 14, -4
 1895 0002 82B0     		sub	sp, sp, #8
 1896              		.cfi_def_cfa_offset 16
 1897 0004 00AF     		add	r7, sp, #0
 1898              		.cfi_def_cfa_register 7
 1899 0006 0200     		movs	r2, r0
 1900 0008 FB1D     		adds	r3, r7, #7
 1901 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1902              		.loc 1 2487 0
 1903 000c 064B     		ldr	r3, .L115
 1904 000e FA1D     		adds	r2, r7, #7
 1905 0010 1278     		ldrb	r2, [r2]
 1906 0012 1F21     		movs	r1, #31
 1907 0014 0A40     		ands	r2, r1
 1908 0016 0121     		movs	r1, #1
 1909 0018 9140     		lsls	r1, r1, r2
 1910 001a 0A00     		movs	r2, r1
 1911 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 1912              		.loc 1 2488 0
 1913 001e C046     		nop
 1914 0020 BD46     		mov	sp, r7
 1915 0022 02B0     		add	sp, sp, #8
 1916              		@ sp needed
 1917 0024 80BD     		pop	{r7, pc}
 1918              	.L116:
 1919 0026 C046     		.align	2
 1920              	.L115:
 1921 0028 00E200E0 		.word	-536813056
 1922              		.cfi_endproc
 1923              	.LFE29:
 1924              		.size	CyIntSetPending, .-CyIntSetPending
 1925              		.section	.text.CyIntClearPending,"ax",%progbits
 1926              		.align	2
 1927              		.global	CyIntClearPending
 1928              		.code	16
 1929              		.thumb_func
 1930              		.type	CyIntClearPending, %function
 1931              	CyIntClearPending:
 1932              	.LFB30:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 79


2501:Generated_Source\PSoC4/CyLib.c **** {
 1933              		.loc 1 2501 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 8
 1936              		@ frame_needed = 1, uses_anonymous_args = 0
 1937 0000 80B5     		push	{r7, lr}
 1938              		.cfi_def_cfa_offset 8
 1939              		.cfi_offset 7, -8
 1940              		.cfi_offset 14, -4
 1941 0002 82B0     		sub	sp, sp, #8
 1942              		.cfi_def_cfa_offset 16
 1943 0004 00AF     		add	r7, sp, #0
 1944              		.cfi_def_cfa_register 7
 1945 0006 0200     		movs	r2, r0
 1946 0008 FB1D     		adds	r3, r7, #7
 1947 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1948              		.loc 1 2502 0
 1949 000c 064B     		ldr	r3, .L118
 1950 000e FA1D     		adds	r2, r7, #7
 1951 0010 1278     		ldrb	r2, [r2]
 1952 0012 1F21     		movs	r1, #31
 1953 0014 0A40     		ands	r2, r1
 1954 0016 0121     		movs	r1, #1
 1955 0018 9140     		lsls	r1, r1, r2
 1956 001a 0A00     		movs	r2, r1
 1957 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 1958              		.loc 1 2503 0
 1959 001e C046     		nop
 1960 0020 BD46     		mov	sp, r7
 1961 0022 02B0     		add	sp, sp, #8
 1962              		@ sp needed
 1963 0024 80BD     		pop	{r7, pc}
 1964              	.L119:
 1965 0026 C046     		.align	2
 1966              	.L118:
 1967 0028 80E200E0 		.word	-536812928
 1968              		.cfi_endproc
 1969              	.LFE30:
 1970              		.size	CyIntClearPending, .-CyIntClearPending
 1971              		.section	.text.CyHalt,"ax",%progbits
 1972              		.align	2
 1973              		.global	CyHalt
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CyHalt, %function
 1977              	CyHalt:
 1978              	.LFB31:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 80


2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 1979              		.loc 1 2516 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 8
 1982              		@ frame_needed = 1, uses_anonymous_args = 0
 1983 0000 80B5     		push	{r7, lr}
 1984              		.cfi_def_cfa_offset 8
 1985              		.cfi_offset 7, -8
 1986              		.cfi_offset 14, -4
 1987 0002 82B0     		sub	sp, sp, #8
 1988              		.cfi_def_cfa_offset 16
 1989 0004 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
 1991 0006 0200     		movs	r2, r0
 1992 0008 FB1D     		adds	r3, r7, #7
 1993 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1994              		.loc 1 2525 0
 1995              		.syntax divided
 1996              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1997 000c 01BE     		    bkpt    1
 1998              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1999              		.loc 1 2529 0
 2000              		.thumb
 2001              		.syntax unified
 2002 000e C046     		nop
 2003 0010 BD46     		mov	sp, r7
 2004 0012 02B0     		add	sp, sp, #8
 2005              		@ sp needed
 2006 0014 80BD     		pop	{r7, pc}
 2007              		.cfi_endproc
 2008              	.LFE31:
 2009              		.size	CyHalt, .-CyHalt
 2010 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 2011              		.align	2
 2012              		.global	CySoftwareReset
 2013              		.code	16
 2014              		.thumb_func
 2015              		.type	CySoftwareReset, %function
 2016              	CySoftwareReset:
 2017              	.LFB32:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 81


2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 2018              		.loc 1 2540 0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 1, uses_anonymous_args = 0
 2022 0000 80B5     		push	{r7, lr}
 2023              		.cfi_def_cfa_offset 8
 2024              		.cfi_offset 7, -8
 2025              		.cfi_offset 14, -4
 2026 0002 00AF     		add	r7, sp, #0
 2027              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 2028              		.loc 1 2545 0
 2029 0004 054B     		ldr	r3, .L122
 2030 0006 054A     		ldr	r2, .L122
 2031 0008 1268     		ldr	r2, [r2]
 2032 000a 1204     		lsls	r2, r2, #16
 2033 000c 120C     		lsrs	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2034              		.loc 1 2546 0
 2035 000e 0449     		ldr	r1, .L122+4
 2036 0010 0A43     		orrs	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 2037              		.loc 1 2545 0
 2038 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 2039              		.loc 1 2547 0
 2040 0014 C046     		nop
 2041 0016 BD46     		mov	sp, r7
 2042              		@ sp needed
 2043 0018 80BD     		pop	{r7, pc}
 2044              	.L123:
 2045 001a C046     		.align	2
 2046              	.L122:
 2047 001c 0CED00E0 		.word	-536810228
 2048 0020 0400FA05 		.word	100270084
 2049              		.cfi_endproc
 2050              	.LFE32:
 2051              		.size	CySoftwareReset, .-CySoftwareReset
 2052              		.section	.text.CyDelay,"ax",%progbits
 2053              		.align	2
 2054              		.global	CyDelay
 2055              		.code	16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 82


 2056              		.thumb_func
 2057              		.type	CyDelay, %function
 2058              	CyDelay:
 2059              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 2060              		.loc 1 2560 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 8
 2063              		@ frame_needed = 1, uses_anonymous_args = 0
 2064 0000 80B5     		push	{r7, lr}
 2065              		.cfi_def_cfa_offset 8
 2066              		.cfi_offset 7, -8
 2067              		.cfi_offset 14, -4
 2068 0002 82B0     		sub	sp, sp, #8
 2069              		.cfi_def_cfa_offset 16
 2070 0004 00AF     		add	r7, sp, #0
 2071              		.cfi_def_cfa_register 7
 2072 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2073              		.loc 1 2561 0
 2074 0008 09E0     		b	.L125
 2075              	.L126:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 2076              		.loc 1 2566 0
 2077 000a 0D4B     		ldr	r3, .L127
 2078 000c 1B68     		ldr	r3, [r3]
 2079 000e 1800     		movs	r0, r3
 2080 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 2081              		.loc 1 2567 0
 2082 0014 7B68     		ldr	r3, [r7, #4]
 2083 0016 0B4A     		ldr	r2, .L127+4
 2084 0018 9446     		mov	ip, r2
 2085 001a 6344     		add	r3, r3, ip
 2086 001c 7B60     		str	r3, [r7, #4]
 2087              	.L125:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 2088              		.loc 1 2561 0
 2089 001e 7A68     		ldr	r2, [r7, #4]
 2090 0020 8023     		movs	r3, #128
 2091 0022 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 83


 2092 0024 9A42     		cmp	r2, r3
 2093 0026 F0D8     		bhi	.L126
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 2094              		.loc 1 2570 0
 2095 0028 074B     		ldr	r3, .L127+8
 2096 002a 1B68     		ldr	r3, [r3]
 2097 002c 7A68     		ldr	r2, [r7, #4]
 2098 002e 5343     		muls	r3, r2
 2099 0030 1800     		movs	r0, r3
 2100 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 2101              		.loc 1 2571 0
 2102 0036 C046     		nop
 2103 0038 BD46     		mov	sp, r7
 2104 003a 02B0     		add	sp, sp, #8
 2105              		@ sp needed
 2106 003c 80BD     		pop	{r7, pc}
 2107              	.L128:
 2108 003e C046     		.align	2
 2109              	.L127:
 2110 0040 00000000 		.word	cydelay32kMs
 2111 0044 0080FFFF 		.word	-32768
 2112 0048 00000000 		.word	cydelayFreqKhz
 2113              		.cfi_endproc
 2114              	.LFE33:
 2115              		.size	CyDelay, .-CyDelay
 2116              		.section	.text.CyDelayUs,"ax",%progbits
 2117              		.align	2
 2118              		.global	CyDelayUs
 2119              		.code	16
 2120              		.thumb_func
 2121              		.type	CyDelayUs, %function
 2122              	CyDelayUs:
 2123              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 2124              		.loc 1 2583 0
 2125              		.cfi_startproc
 2126              		@ args = 0, pretend = 0, frame = 8
 2127              		@ frame_needed = 1, uses_anonymous_args = 0
 2128 0000 80B5     		push	{r7, lr}
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 7, -8
 2131              		.cfi_offset 14, -4
 2132 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 84


 2133              		.cfi_def_cfa_offset 16
 2134 0004 00AF     		add	r7, sp, #0
 2135              		.cfi_def_cfa_register 7
 2136 0006 0200     		movs	r2, r0
 2137 0008 BB1D     		adds	r3, r7, #6
 2138 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 2139              		.loc 1 2584 0
 2140 000c BB1D     		adds	r3, r7, #6
 2141 000e 1B88     		ldrh	r3, [r3]
 2142 0010 044A     		ldr	r2, .L130
 2143 0012 1278     		ldrb	r2, [r2]
 2144 0014 5343     		muls	r3, r2
 2145 0016 1800     		movs	r0, r3
 2146 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 2147              		.loc 1 2585 0
 2148 001c C046     		nop
 2149 001e BD46     		mov	sp, r7
 2150 0020 02B0     		add	sp, sp, #8
 2151              		@ sp needed
 2152 0022 80BD     		pop	{r7, pc}
 2153              	.L131:
 2154              		.align	2
 2155              	.L130:
 2156 0024 00000000 		.word	cydelayFreqMhz
 2157              		.cfi_endproc
 2158              	.LFE34:
 2159              		.size	CyDelayUs, .-CyDelayUs
 2160              		.global	__aeabi_uidiv
 2161              		.section	.text.CyDelayFreq,"ax",%progbits
 2162              		.align	2
 2163              		.global	CyDelayFreq
 2164              		.code	16
 2165              		.thumb_func
 2166              		.type	CyDelayFreq, %function
 2167              	CyDelayFreq:
 2168              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 2169              		.loc 1 2597 0
 2170              		.cfi_startproc
 2171              		@ args = 0, pretend = 0, frame = 8
 2172              		@ frame_needed = 1, uses_anonymous_args = 0
 2173 0000 80B5     		push	{r7, lr}
 2174              		.cfi_def_cfa_offset 8
 2175              		.cfi_offset 7, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 85


 2176              		.cfi_offset 14, -4
 2177 0002 82B0     		sub	sp, sp, #8
 2178              		.cfi_def_cfa_offset 16
 2179 0004 00AF     		add	r7, sp, #0
 2180              		.cfi_def_cfa_register 7
 2181 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 2182              		.loc 1 2598 0
 2183 0008 7B68     		ldr	r3, [r7, #4]
 2184 000a 002B     		cmp	r3, #0
 2185 000c 03D0     		beq	.L133
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 2186              		.loc 1 2600 0
 2187 000e 154B     		ldr	r3, .L135
 2188 0010 7A68     		ldr	r2, [r7, #4]
 2189 0012 1A60     		str	r2, [r3]
 2190 0014 02E0     		b	.L134
 2191              	.L133:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 2192              		.loc 1 2604 0
 2193 0016 134B     		ldr	r3, .L135
 2194 0018 134A     		ldr	r2, .L135+4
 2195 001a 1A60     		str	r2, [r3]
 2196              	.L134:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 2197              		.loc 1 2607 0
 2198 001c 114B     		ldr	r3, .L135
 2199 001e 1B68     		ldr	r3, [r3]
 2200 0020 124A     		ldr	r2, .L135+8
 2201 0022 9446     		mov	ip, r2
 2202 0024 6344     		add	r3, r3, ip
 2203 0026 1249     		ldr	r1, .L135+12
 2204 0028 1800     		movs	r0, r3
 2205 002a FFF7FEFF 		bl	__aeabi_uidiv
 2206 002e 0300     		movs	r3, r0
 2207 0030 DAB2     		uxtb	r2, r3
 2208 0032 104B     		ldr	r3, .L135+16
 2209 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 2210              		.loc 1 2608 0
 2211 0036 0B4B     		ldr	r3, .L135
 2212 0038 1B68     		ldr	r3, [r3]
 2213 003a 0F4A     		ldr	r2, .L135+20
 2214 003c 9A18     		adds	r2, r3, r2
 2215 003e FA23     		movs	r3, #250
 2216 0040 9900     		lsls	r1, r3, #2
 2217 0042 1000     		movs	r0, r2
 2218 0044 FFF7FEFF 		bl	__aeabi_uidiv
 2219 0048 0300     		movs	r3, r0
 2220 004a 1A00     		movs	r2, r3
 2221 004c 0B4B     		ldr	r3, .L135+24
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 86


 2222 004e 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 2223              		.loc 1 2609 0
 2224 0050 0A4B     		ldr	r3, .L135+24
 2225 0052 1B68     		ldr	r3, [r3]
 2226 0054 DA03     		lsls	r2, r3, #15
 2227 0056 0A4B     		ldr	r3, .L135+28
 2228 0058 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 2229              		.loc 1 2610 0
 2230 005a C046     		nop
 2231 005c BD46     		mov	sp, r7
 2232 005e 02B0     		add	sp, sp, #8
 2233              		@ sp needed
 2234 0060 80BD     		pop	{r7, pc}
 2235              	.L136:
 2236 0062 C046     		.align	2
 2237              	.L135:
 2238 0064 00000000 		.word	cydelayFreqHz
 2239 0068 00366E01 		.word	24000000
 2240 006c 3F420F00 		.word	999999
 2241 0070 40420F00 		.word	1000000
 2242 0074 00000000 		.word	cydelayFreqMhz
 2243 0078 E7030000 		.word	999
 2244 007c 00000000 		.word	cydelayFreqKhz
 2245 0080 00000000 		.word	cydelay32kMs
 2246              		.cfi_endproc
 2247              	.LFE35:
 2248              		.size	CyDelayFreq, .-CyDelayFreq
 2249              		.section	.text.CySysTickStart,"ax",%progbits
 2250              		.align	2
 2251              		.global	CySysTickStart
 2252              		.code	16
 2253              		.thumb_func
 2254              		.type	CySysTickStart, %function
 2255              	CySysTickStart:
 2256              	.LFB36:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 2257              		.loc 1 2629 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 87


 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 0
 2260              		@ frame_needed = 1, uses_anonymous_args = 0
 2261 0000 80B5     		push	{r7, lr}
 2262              		.cfi_def_cfa_offset 8
 2263              		.cfi_offset 7, -8
 2264              		.cfi_offset 14, -4
 2265 0002 00AF     		add	r7, sp, #0
 2266              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2267              		.loc 1 2630 0
 2268 0004 064B     		ldr	r3, .L139
 2269 0006 1B68     		ldr	r3, [r3]
 2270 0008 002B     		cmp	r3, #0
 2271 000a 04D1     		bne	.L138
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2272              		.loc 1 2632 0
 2273 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2274              		.loc 1 2633 0
 2275 0010 034B     		ldr	r3, .L139
 2276 0012 0122     		movs	r2, #1
 2277 0014 1A60     		str	r2, [r3]
 2278              	.L138:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2279              		.loc 1 2636 0
 2280 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 2281              		.loc 1 2637 0
 2282 001a C046     		nop
 2283 001c BD46     		mov	sp, r7
 2284              		@ sp needed
 2285 001e 80BD     		pop	{r7, pc}
 2286              	.L140:
 2287              		.align	2
 2288              	.L139:
 2289 0020 00000000 		.word	CySysTickInitVar
 2290              		.cfi_endproc
 2291              	.LFE36:
 2292              		.size	CySysTickStart, .-CySysTickStart
 2293              		.section	.text.CySysTickInit,"ax",%progbits
 2294              		.align	2
 2295              		.global	CySysTickInit
 2296              		.code	16
 2297              		.thumb_func
 2298              		.type	CySysTickInit, %function
 2299              	CySysTickInit:
 2300              	.LFB37:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 88


2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 2301              		.loc 1 2658 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 8
 2304              		@ frame_needed = 1, uses_anonymous_args = 0
 2305 0000 80B5     		push	{r7, lr}
 2306              		.cfi_def_cfa_offset 8
 2307              		.cfi_offset 7, -8
 2308              		.cfi_offset 14, -4
 2309 0002 82B0     		sub	sp, sp, #8
 2310              		.cfi_def_cfa_offset 16
 2311 0004 00AF     		add	r7, sp, #0
 2312              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2313              		.loc 1 2661 0
 2314 0006 0023     		movs	r3, #0
 2315 0008 7B60     		str	r3, [r7, #4]
 2316 000a 07E0     		b	.L142
 2317              	.L143:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2318              		.loc 1 2663 0 discriminator 3
 2319 000c 114B     		ldr	r3, .L144
 2320 000e 7A68     		ldr	r2, [r7, #4]
 2321 0010 9200     		lsls	r2, r2, #2
 2322 0012 0021     		movs	r1, #0
 2323 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2324              		.loc 1 2661 0 discriminator 3
 2325 0016 7B68     		ldr	r3, [r7, #4]
 2326 0018 0133     		adds	r3, r3, #1
 2327 001a 7B60     		str	r3, [r7, #4]
 2328              	.L142:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 2329              		.loc 1 2661 0 is_stmt 0 discriminator 1
 2330 001c 7B68     		ldr	r3, [r7, #4]
 2331 001e 042B     		cmp	r3, #4
 2332 0020 F4D9     		bls	.L143
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 89


 2333              		.loc 1 2666 0 is_stmt 1
 2334 0022 0D4B     		ldr	r3, .L144+4
 2335 0024 1900     		movs	r1, r3
 2336 0026 0F20     		movs	r0, #15
 2337 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 2338              		.loc 1 2669 0
 2339 002c 0120     		movs	r0, #1
 2340 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2341              		.loc 1 2672 0
 2342 0032 0A4B     		ldr	r3, .L144+8
 2343 0034 1A68     		ldr	r2, [r3]
 2344 0036 FA23     		movs	r3, #250
 2345 0038 9900     		lsls	r1, r3, #2
 2346 003a 1000     		movs	r0, r2
 2347 003c FFF7FEFF 		bl	__aeabi_uidiv
 2348 0040 0300     		movs	r3, r0
 2349 0042 1800     		movs	r0, r3
 2350 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2351              		.loc 1 2673 0
 2352 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c **** }
 2353              		.loc 1 2674 0
 2354 004c C046     		nop
 2355 004e BD46     		mov	sp, r7
 2356 0050 02B0     		add	sp, sp, #8
 2357              		@ sp needed
 2358 0052 80BD     		pop	{r7, pc}
 2359              	.L145:
 2360              		.align	2
 2361              	.L144:
 2362 0054 00000000 		.word	CySysTickCallbacks
 2363 0058 00000000 		.word	CySysTickServiceCallbacks
 2364 005c 00000000 		.word	cydelayFreqHz
 2365              		.cfi_endproc
 2366              	.LFE37:
 2367              		.size	CySysTickInit, .-CySysTickInit
 2368              		.section	.text.CySysTickEnable,"ax",%progbits
 2369              		.align	2
 2370              		.global	CySysTickEnable
 2371              		.code	16
 2372              		.thumb_func
 2373              		.type	CySysTickEnable, %function
 2374              	CySysTickEnable:
 2375              	.LFB38:
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 90


2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 2376              		.loc 1 2688 0
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 0
 2379              		@ frame_needed = 1, uses_anonymous_args = 0
 2380 0000 80B5     		push	{r7, lr}
 2381              		.cfi_def_cfa_offset 8
 2382              		.cfi_offset 7, -8
 2383              		.cfi_offset 14, -4
 2384 0002 00AF     		add	r7, sp, #0
 2385              		.cfi_def_cfa_register 7
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2386              		.loc 1 2689 0
 2387 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2388              		.loc 1 2690 0
 2389 0008 044B     		ldr	r3, .L147
 2390 000a 044A     		ldr	r2, .L147
 2391 000c 1268     		ldr	r2, [r2]
 2392 000e 0121     		movs	r1, #1
 2393 0010 0A43     		orrs	r2, r1
 2394 0012 1A60     		str	r2, [r3]
2691:Generated_Source\PSoC4/CyLib.c **** }
 2395              		.loc 1 2691 0
 2396 0014 C046     		nop
 2397 0016 BD46     		mov	sp, r7
 2398              		@ sp needed
 2399 0018 80BD     		pop	{r7, pc}
 2400              	.L148:
 2401 001a C046     		.align	2
 2402              	.L147:
 2403 001c 10E000E0 		.word	-536813552
 2404              		.cfi_endproc
 2405              	.LFE38:
 2406              		.size	CySysTickEnable, .-CySysTickEnable
 2407              		.section	.text.CySysTickStop,"ax",%progbits
 2408              		.align	2
 2409              		.global	CySysTickStop
 2410              		.code	16
 2411              		.thumb_func
 2412              		.type	CySysTickStop, %function
 2413              	CySysTickStop:
 2414              	.LFB39:
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 91


2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
 2415              		.loc 1 2705 0
 2416              		.cfi_startproc
 2417              		@ args = 0, pretend = 0, frame = 0
 2418              		@ frame_needed = 1, uses_anonymous_args = 0
 2419 0000 80B5     		push	{r7, lr}
 2420              		.cfi_def_cfa_offset 8
 2421              		.cfi_offset 7, -8
 2422              		.cfi_offset 14, -4
 2423 0002 00AF     		add	r7, sp, #0
 2424              		.cfi_def_cfa_register 7
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2425              		.loc 1 2706 0
 2426 0004 044B     		ldr	r3, .L150
 2427 0006 044A     		ldr	r2, .L150
 2428 0008 1268     		ldr	r2, [r2]
 2429 000a 0121     		movs	r1, #1
 2430 000c 8A43     		bics	r2, r1
 2431 000e 1A60     		str	r2, [r3]
2707:Generated_Source\PSoC4/CyLib.c **** }
 2432              		.loc 1 2707 0
 2433 0010 C046     		nop
 2434 0012 BD46     		mov	sp, r7
 2435              		@ sp needed
 2436 0014 80BD     		pop	{r7, pc}
 2437              	.L151:
 2438 0016 C046     		.align	2
 2439              	.L150:
 2440 0018 10E000E0 		.word	-536813552
 2441              		.cfi_endproc
 2442              	.LFE39:
 2443              		.size	CySysTickStop, .-CySysTickStop
 2444              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2445              		.align	2
 2446              		.global	CySysTickEnableInterrupt
 2447              		.code	16
 2448              		.thumb_func
 2449              		.type	CySysTickEnableInterrupt, %function
 2450              	CySysTickEnableInterrupt:
 2451              	.LFB40:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 92


2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
 2452              		.loc 1 2721 0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 1, uses_anonymous_args = 0
 2456 0000 80B5     		push	{r7, lr}
 2457              		.cfi_def_cfa_offset 8
 2458              		.cfi_offset 7, -8
 2459              		.cfi_offset 14, -4
 2460 0002 00AF     		add	r7, sp, #0
 2461              		.cfi_def_cfa_register 7
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2462              		.loc 1 2722 0
 2463 0004 044B     		ldr	r3, .L153
 2464 0006 044A     		ldr	r2, .L153
 2465 0008 1268     		ldr	r2, [r2]
 2466 000a 0221     		movs	r1, #2
 2467 000c 0A43     		orrs	r2, r1
 2468 000e 1A60     		str	r2, [r3]
2723:Generated_Source\PSoC4/CyLib.c **** }
 2469              		.loc 1 2723 0
 2470 0010 C046     		nop
 2471 0012 BD46     		mov	sp, r7
 2472              		@ sp needed
 2473 0014 80BD     		pop	{r7, pc}
 2474              	.L154:
 2475 0016 C046     		.align	2
 2476              	.L153:
 2477 0018 10E000E0 		.word	-536813552
 2478              		.cfi_endproc
 2479              	.LFE40:
 2480              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2481              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2482              		.align	2
 2483              		.global	CySysTickDisableInterrupt
 2484              		.code	16
 2485              		.thumb_func
 2486              		.type	CySysTickDisableInterrupt, %function
 2487              	CySysTickDisableInterrupt:
 2488              	.LFB41:
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
 2489              		.loc 1 2737 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 93


 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 0
 2492              		@ frame_needed = 1, uses_anonymous_args = 0
 2493 0000 80B5     		push	{r7, lr}
 2494              		.cfi_def_cfa_offset 8
 2495              		.cfi_offset 7, -8
 2496              		.cfi_offset 14, -4
 2497 0002 00AF     		add	r7, sp, #0
 2498              		.cfi_def_cfa_register 7
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2499              		.loc 1 2738 0
 2500 0004 044B     		ldr	r3, .L156
 2501 0006 044A     		ldr	r2, .L156
 2502 0008 1268     		ldr	r2, [r2]
 2503 000a 0221     		movs	r1, #2
 2504 000c 8A43     		bics	r2, r1
 2505 000e 1A60     		str	r2, [r3]
2739:Generated_Source\PSoC4/CyLib.c **** }
 2506              		.loc 1 2739 0
 2507 0010 C046     		nop
 2508 0012 BD46     		mov	sp, r7
 2509              		@ sp needed
 2510 0014 80BD     		pop	{r7, pc}
 2511              	.L157:
 2512 0016 C046     		.align	2
 2513              	.L156:
 2514 0018 10E000E0 		.word	-536813552
 2515              		.cfi_endproc
 2516              	.LFE41:
 2517              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2518              		.section	.text.CySysTickSetReload,"ax",%progbits
 2519              		.align	2
 2520              		.global	CySysTickSetReload
 2521              		.code	16
 2522              		.thumb_func
 2523              		.type	CySysTickSetReload, %function
 2524              	CySysTickSetReload:
 2525              	.LFB42:
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
 2526              		.loc 1 2754 0
 2527              		.cfi_startproc
 2528              		@ args = 0, pretend = 0, frame = 8
 2529              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 94


 2530 0000 80B5     		push	{r7, lr}
 2531              		.cfi_def_cfa_offset 8
 2532              		.cfi_offset 7, -8
 2533              		.cfi_offset 14, -4
 2534 0002 82B0     		sub	sp, sp, #8
 2535              		.cfi_def_cfa_offset 16
 2536 0004 00AF     		add	r7, sp, #0
 2537              		.cfi_def_cfa_register 7
 2538 0006 7860     		str	r0, [r7, #4]
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2539              		.loc 1 2755 0
 2540 0008 044B     		ldr	r3, .L159
 2541 000a 7A68     		ldr	r2, [r7, #4]
 2542 000c 1202     		lsls	r2, r2, #8
 2543 000e 120A     		lsrs	r2, r2, #8
 2544 0010 1A60     		str	r2, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** }
 2545              		.loc 1 2756 0
 2546 0012 C046     		nop
 2547 0014 BD46     		mov	sp, r7
 2548 0016 02B0     		add	sp, sp, #8
 2549              		@ sp needed
 2550 0018 80BD     		pop	{r7, pc}
 2551              	.L160:
 2552 001a C046     		.align	2
 2553              	.L159:
 2554 001c 14E000E0 		.word	-536813548
 2555              		.cfi_endproc
 2556              	.LFE42:
 2557              		.size	CySysTickSetReload, .-CySysTickSetReload
 2558              		.section	.text.CySysTickGetReload,"ax",%progbits
 2559              		.align	2
 2560              		.global	CySysTickGetReload
 2561              		.code	16
 2562              		.thumb_func
 2563              		.type	CySysTickGetReload, %function
 2564              	CySysTickGetReload:
 2565              	.LFB43:
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
 2566              		.loc 1 2770 0
 2567              		.cfi_startproc
 2568              		@ args = 0, pretend = 0, frame = 0
 2569              		@ frame_needed = 1, uses_anonymous_args = 0
 2570 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 95


 2571              		.cfi_def_cfa_offset 8
 2572              		.cfi_offset 7, -8
 2573              		.cfi_offset 14, -4
 2574 0002 00AF     		add	r7, sp, #0
 2575              		.cfi_def_cfa_register 7
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2576              		.loc 1 2771 0
 2577 0004 034B     		ldr	r3, .L163
 2578 0006 1B68     		ldr	r3, [r3]
 2579 0008 1B02     		lsls	r3, r3, #8
 2580 000a 1B0A     		lsrs	r3, r3, #8
2772:Generated_Source\PSoC4/CyLib.c **** }
 2581              		.loc 1 2772 0
 2582 000c 1800     		movs	r0, r3
 2583 000e BD46     		mov	sp, r7
 2584              		@ sp needed
 2585 0010 80BD     		pop	{r7, pc}
 2586              	.L164:
 2587 0012 C046     		.align	2
 2588              	.L163:
 2589 0014 14E000E0 		.word	-536813548
 2590              		.cfi_endproc
 2591              	.LFE43:
 2592              		.size	CySysTickGetReload, .-CySysTickGetReload
 2593              		.section	.text.CySysTickGetValue,"ax",%progbits
 2594              		.align	2
 2595              		.global	CySysTickGetValue
 2596              		.code	16
 2597              		.thumb_func
 2598              		.type	CySysTickGetValue, %function
 2599              	CySysTickGetValue:
 2600              	.LFB44:
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
 2601              		.loc 1 2786 0
 2602              		.cfi_startproc
 2603              		@ args = 0, pretend = 0, frame = 0
 2604              		@ frame_needed = 1, uses_anonymous_args = 0
 2605 0000 80B5     		push	{r7, lr}
 2606              		.cfi_def_cfa_offset 8
 2607              		.cfi_offset 7, -8
 2608              		.cfi_offset 14, -4
 2609 0002 00AF     		add	r7, sp, #0
 2610              		.cfi_def_cfa_register 7
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 96


 2611              		.loc 1 2787 0
 2612 0004 034B     		ldr	r3, .L167
 2613 0006 1B68     		ldr	r3, [r3]
 2614 0008 1B02     		lsls	r3, r3, #8
 2615 000a 1B0A     		lsrs	r3, r3, #8
2788:Generated_Source\PSoC4/CyLib.c **** }
 2616              		.loc 1 2788 0
 2617 000c 1800     		movs	r0, r3
 2618 000e BD46     		mov	sp, r7
 2619              		@ sp needed
 2620 0010 80BD     		pop	{r7, pc}
 2621              	.L168:
 2622 0012 C046     		.align	2
 2623              	.L167:
 2624 0014 18E000E0 		.word	-536813544
 2625              		.cfi_endproc
 2626              	.LFE44:
 2627              		.size	CySysTickGetValue, .-CySysTickGetValue
 2628              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2629              		.align	2
 2630              		.global	CySysTickSetClockSource
 2631              		.code	16
 2632              		.thumb_func
 2633              		.type	CySysTickSetClockSource, %function
 2634              	CySysTickSetClockSource:
 2635              	.LFB45:
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
 2636              		.loc 1 2818 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 97


 2637              		.cfi_startproc
 2638              		@ args = 0, pretend = 0, frame = 8
 2639              		@ frame_needed = 1, uses_anonymous_args = 0
 2640 0000 80B5     		push	{r7, lr}
 2641              		.cfi_def_cfa_offset 8
 2642              		.cfi_offset 7, -8
 2643              		.cfi_offset 14, -4
 2644 0002 82B0     		sub	sp, sp, #8
 2645              		.cfi_def_cfa_offset 16
 2646 0004 00AF     		add	r7, sp, #0
 2647              		.cfi_def_cfa_register 7
 2648 0006 7860     		str	r0, [r7, #4]
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2649              		.loc 1 2819 0
 2650 0008 7B68     		ldr	r3, [r7, #4]
 2651 000a 012B     		cmp	r3, #1
 2652 000c 06D1     		bne	.L170
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 2653              		.loc 1 2821 0
 2654 000e 084B     		ldr	r3, .L173
 2655 0010 074A     		ldr	r2, .L173
 2656 0012 1268     		ldr	r2, [r2]
 2657 0014 0421     		movs	r1, #4
 2658 0016 0A43     		orrs	r2, r1
 2659 0018 1A60     		str	r2, [r3]
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
 2660              		.loc 1 2827 0
 2661 001a 05E0     		b	.L172
 2662              	.L170:
2825:Generated_Source\PSoC4/CyLib.c ****         }
 2663              		.loc 1 2825 0
 2664 001c 044B     		ldr	r3, .L173
 2665 001e 044A     		ldr	r2, .L173
 2666 0020 1268     		ldr	r2, [r2]
 2667 0022 0421     		movs	r1, #4
 2668 0024 8A43     		bics	r2, r1
 2669 0026 1A60     		str	r2, [r3]
 2670              	.L172:
 2671              		.loc 1 2827 0
 2672 0028 C046     		nop
 2673 002a BD46     		mov	sp, r7
 2674 002c 02B0     		add	sp, sp, #8
 2675              		@ sp needed
 2676 002e 80BD     		pop	{r7, pc}
 2677              	.L174:
 2678              		.align	2
 2679              	.L173:
 2680 0030 10E000E0 		.word	-536813552
 2681              		.cfi_endproc
 2682              	.LFE45:
 2683              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 98


 2684              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2685              		.align	2
 2686              		.global	CySysTickGetClockSource
 2687              		.code	16
 2688              		.thumb_func
 2689              		.type	CySysTickGetClockSource, %function
 2690              	CySysTickGetClockSource:
 2691              	.LFB46:
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
 2692              		.loc 1 2843 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 0
 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696 0000 80B5     		push	{r7, lr}
 2697              		.cfi_def_cfa_offset 8
 2698              		.cfi_offset 7, -8
 2699              		.cfi_offset 14, -4
 2700 0002 00AF     		add	r7, sp, #0
 2701              		.cfi_def_cfa_register 7
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2702              		.loc 1 2844 0
 2703 0004 034B     		ldr	r3, .L177
 2704 0006 1B68     		ldr	r3, [r3]
 2705 0008 9B08     		lsrs	r3, r3, #2
 2706 000a 0122     		movs	r2, #1
 2707 000c 1340     		ands	r3, r2
2845:Generated_Source\PSoC4/CyLib.c ****     }
 2708              		.loc 1 2845 0
 2709 000e 1800     		movs	r0, r3
 2710 0010 BD46     		mov	sp, r7
 2711              		@ sp needed
 2712 0012 80BD     		pop	{r7, pc}
 2713              	.L178:
 2714              		.align	2
 2715              	.L177:
 2716 0014 10E000E0 		.word	-536813552
 2717              		.cfi_endproc
 2718              	.LFE46:
 2719              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2720              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2721              		.align	2
 2722              		.global	CySysTickGetCountFlag
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 99


 2723              		.code	16
 2724              		.thumb_func
 2725              		.type	CySysTickGetCountFlag, %function
 2726              	CySysTickGetCountFlag:
 2727              	.LFB47:
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
 2728              		.loc 1 2866 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 7, -8
 2735              		.cfi_offset 14, -4
 2736 0002 00AF     		add	r7, sp, #0
 2737              		.cfi_def_cfa_register 7
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2738              		.loc 1 2867 0
 2739 0004 034B     		ldr	r3, .L181
 2740 0006 1B68     		ldr	r3, [r3]
 2741 0008 1B0C     		lsrs	r3, r3, #16
 2742 000a 0122     		movs	r2, #1
 2743 000c 1340     		ands	r3, r2
2868:Generated_Source\PSoC4/CyLib.c **** }
 2744              		.loc 1 2868 0
 2745 000e 1800     		movs	r0, r3
 2746 0010 BD46     		mov	sp, r7
 2747              		@ sp needed
 2748 0012 80BD     		pop	{r7, pc}
 2749              	.L182:
 2750              		.align	2
 2751              	.L181:
 2752 0014 10E000E0 		.word	-536813552
 2753              		.cfi_endproc
 2754              	.LFE47:
 2755              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2756              		.section	.text.CySysTickClear,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 100


 2757              		.align	2
 2758              		.global	CySysTickClear
 2759              		.code	16
 2760              		.thumb_func
 2761              		.type	CySysTickClear, %function
 2762              	CySysTickClear:
 2763              	.LFB48:
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
 2764              		.loc 1 2879 0
 2765              		.cfi_startproc
 2766              		@ args = 0, pretend = 0, frame = 0
 2767              		@ frame_needed = 1, uses_anonymous_args = 0
 2768 0000 80B5     		push	{r7, lr}
 2769              		.cfi_def_cfa_offset 8
 2770              		.cfi_offset 7, -8
 2771              		.cfi_offset 14, -4
 2772 0002 00AF     		add	r7, sp, #0
 2773              		.cfi_def_cfa_register 7
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2774              		.loc 1 2880 0
 2775 0004 024B     		ldr	r3, .L184
 2776 0006 0022     		movs	r2, #0
 2777 0008 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** }
 2778              		.loc 1 2881 0
 2779 000a C046     		nop
 2780 000c BD46     		mov	sp, r7
 2781              		@ sp needed
 2782 000e 80BD     		pop	{r7, pc}
 2783              	.L185:
 2784              		.align	2
 2785              	.L184:
 2786 0010 18E000E0 		.word	-536813544
 2787              		.cfi_endproc
 2788              	.LFE48:
 2789              		.size	CySysTickClear, .-CySysTickClear
 2790              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2791              		.align	2
 2792              		.global	CySysTickSetCallback
 2793              		.code	16
 2794              		.thumb_func
 2795              		.type	CySysTickSetCallback, %function
 2796              	CySysTickSetCallback:
 2797              	.LFB49:
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 101


2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
 2798              		.loc 1 2914 0
 2799              		.cfi_startproc
 2800              		@ args = 0, pretend = 0, frame = 16
 2801              		@ frame_needed = 1, uses_anonymous_args = 0
 2802 0000 80B5     		push	{r7, lr}
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_offset 7, -8
 2805              		.cfi_offset 14, -4
 2806 0002 84B0     		sub	sp, sp, #16
 2807              		.cfi_def_cfa_offset 24
 2808 0004 00AF     		add	r7, sp, #0
 2809              		.cfi_def_cfa_register 7
 2810 0006 7860     		str	r0, [r7, #4]
 2811 0008 3960     		str	r1, [r7]
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2812              		.loc 1 2917 0
 2813 000a 074B     		ldr	r3, .L188
 2814 000c 7A68     		ldr	r2, [r7, #4]
 2815 000e 9200     		lsls	r2, r2, #2
 2816 0010 D358     		ldr	r3, [r2, r3]
 2817 0012 FB60     		str	r3, [r7, #12]
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2818              		.loc 1 2918 0
 2819 0014 044B     		ldr	r3, .L188
 2820 0016 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 102


 2821 0018 9200     		lsls	r2, r2, #2
 2822 001a 3968     		ldr	r1, [r7]
 2823 001c D150     		str	r1, [r2, r3]
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2824              		.loc 1 2919 0
 2825 001e FB68     		ldr	r3, [r7, #12]
2920:Generated_Source\PSoC4/CyLib.c **** }
 2826              		.loc 1 2920 0
 2827 0020 1800     		movs	r0, r3
 2828 0022 BD46     		mov	sp, r7
 2829 0024 04B0     		add	sp, sp, #16
 2830              		@ sp needed
 2831 0026 80BD     		pop	{r7, pc}
 2832              	.L189:
 2833              		.align	2
 2834              	.L188:
 2835 0028 00000000 		.word	CySysTickCallbacks
 2836              		.cfi_endproc
 2837              	.LFE49:
 2838              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2839              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2840              		.align	2
 2841              		.global	CySysTickGetCallback
 2842              		.code	16
 2843              		.thumb_func
 2844              		.type	CySysTickGetCallback, %function
 2845              	CySysTickGetCallback:
 2846              	.LFB50:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
 2847              		.loc 1 2938 0
 2848              		.cfi_startproc
 2849              		@ args = 0, pretend = 0, frame = 8
 2850              		@ frame_needed = 1, uses_anonymous_args = 0
 2851 0000 80B5     		push	{r7, lr}
 2852              		.cfi_def_cfa_offset 8
 2853              		.cfi_offset 7, -8
 2854              		.cfi_offset 14, -4
 2855 0002 82B0     		sub	sp, sp, #8
 2856              		.cfi_def_cfa_offset 16
 2857 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 103


 2858              		.cfi_def_cfa_register 7
 2859 0006 7860     		str	r0, [r7, #4]
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2860              		.loc 1 2939 0
 2861 0008 034B     		ldr	r3, .L192
 2862 000a 7A68     		ldr	r2, [r7, #4]
 2863 000c 9200     		lsls	r2, r2, #2
 2864 000e D358     		ldr	r3, [r2, r3]
2940:Generated_Source\PSoC4/CyLib.c **** }
 2865              		.loc 1 2940 0
 2866 0010 1800     		movs	r0, r3
 2867 0012 BD46     		mov	sp, r7
 2868 0014 02B0     		add	sp, sp, #8
 2869              		@ sp needed
 2870 0016 80BD     		pop	{r7, pc}
 2871              	.L193:
 2872              		.align	2
 2873              	.L192:
 2874 0018 00000000 		.word	CySysTickCallbacks
 2875              		.cfi_endproc
 2876              	.LFE50:
 2877              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2878              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2879              		.align	2
 2880              		.code	16
 2881              		.thumb_func
 2882              		.type	CySysTickServiceCallbacks, %function
 2883              	CySysTickServiceCallbacks:
 2884              	.LFB51:
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 2885              		.loc 1 2951 0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 8
 2888              		@ frame_needed = 1, uses_anonymous_args = 0
 2889 0000 80B5     		push	{r7, lr}
 2890              		.cfi_def_cfa_offset 8
 2891              		.cfi_offset 7, -8
 2892              		.cfi_offset 14, -4
 2893 0002 82B0     		sub	sp, sp, #8
 2894              		.cfi_def_cfa_offset 16
 2895 0004 00AF     		add	r7, sp, #0
 2896              		.cfi_def_cfa_register 7
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2897              		.loc 1 2955 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 104


 2898 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2899 000a 0300     		movs	r3, r0
 2900 000c 012B     		cmp	r3, #1
 2901 000e 13D1     		bne	.L199
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2902              		.loc 1 2957 0
 2903 0010 0023     		movs	r3, #0
 2904 0012 7B60     		str	r3, [r7, #4]
 2905 0014 0DE0     		b	.L196
 2906              	.L198:
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2907              		.loc 1 2959 0
 2908 0016 0A4B     		ldr	r3, .L200
 2909 0018 7A68     		ldr	r2, [r7, #4]
 2910 001a 9200     		lsls	r2, r2, #2
 2911 001c D358     		ldr	r3, [r2, r3]
 2912 001e 002B     		cmp	r3, #0
 2913 0020 04D0     		beq	.L197
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2914              		.loc 1 2961 0
 2915 0022 074B     		ldr	r3, .L200
 2916 0024 7A68     		ldr	r2, [r7, #4]
 2917 0026 9200     		lsls	r2, r2, #2
 2918 0028 D358     		ldr	r3, [r2, r3]
 2919 002a 9847     		blx	r3
 2920              	.L197:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2921              		.loc 1 2957 0 discriminator 2
 2922 002c 7B68     		ldr	r3, [r7, #4]
 2923 002e 0133     		adds	r3, r3, #1
 2924 0030 7B60     		str	r3, [r7, #4]
 2925              	.L196:
2957:Generated_Source\PSoC4/CyLib.c ****         {
 2926              		.loc 1 2957 0 is_stmt 0 discriminator 1
 2927 0032 7B68     		ldr	r3, [r7, #4]
 2928 0034 042B     		cmp	r3, #4
 2929 0036 EED9     		bls	.L198
 2930              	.L199:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 2931              		.loc 1 2965 0 is_stmt 1
 2932 0038 C046     		nop
 2933 003a BD46     		mov	sp, r7
 2934 003c 02B0     		add	sp, sp, #8
 2935              		@ sp needed
 2936 003e 80BD     		pop	{r7, pc}
 2937              	.L201:
 2938              		.align	2
 2939              	.L200:
 2940 0040 00000000 		.word	CySysTickCallbacks
 2941              		.cfi_endproc
 2942              	.LFE51:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 105


 2943              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2944              		.section	.text.CyGetUniqueId,"ax",%progbits
 2945              		.align	2
 2946              		.global	CyGetUniqueId
 2947              		.code	16
 2948              		.thumb_func
 2949              		.type	CyGetUniqueId, %function
 2950              	CyGetUniqueId:
 2951              	.LFB52:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2952              		.loc 1 2983 0
 2953              		.cfi_startproc
 2954              		@ args = 0, pretend = 0, frame = 8
 2955              		@ frame_needed = 1, uses_anonymous_args = 0
 2956 0000 80B5     		push	{r7, lr}
 2957              		.cfi_def_cfa_offset 8
 2958              		.cfi_offset 7, -8
 2959              		.cfi_offset 14, -4
 2960 0002 82B0     		sub	sp, sp, #8
 2961              		.cfi_def_cfa_offset 16
 2962 0004 00AF     		add	r7, sp, #0
 2963              		.cfi_def_cfa_register 7
 2964 0006 7860     		str	r0, [r7, #4]
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2965              		.loc 1 2985 0
 2966 0008 254B     		ldr	r3, .L203
 2967 000a 1B78     		ldrb	r3, [r3]
 2968 000c DBB2     		uxtb	r3, r3
 2969 000e 1A00     		movs	r2, r3
 2970 0010 7B68     		ldr	r3, [r7, #4]
 2971 0012 1A60     		str	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2972              		.loc 1 2986 0
 2973 0014 234B     		ldr	r3, .L203+4
 2974 0016 1B78     		ldrb	r3, [r3]
 2975 0018 DBB2     		uxtb	r3, r3
 2976 001a 1A02     		lsls	r2, r3, #8
 2977 001c 7B68     		ldr	r3, [r7, #4]
 2978 001e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 106


 2979 0020 1A43     		orrs	r2, r3
 2980 0022 7B68     		ldr	r3, [r7, #4]
 2981 0024 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2982              		.loc 1 2987 0
 2983 0026 204B     		ldr	r3, .L203+8
 2984 0028 1B78     		ldrb	r3, [r3]
 2985 002a DBB2     		uxtb	r3, r3
 2986 002c 1A04     		lsls	r2, r3, #16
 2987 002e 7B68     		ldr	r3, [r7, #4]
 2988 0030 1B68     		ldr	r3, [r3]
 2989 0032 1A43     		orrs	r2, r3
 2990 0034 7B68     		ldr	r3, [r7, #4]
 2991 0036 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2992              		.loc 1 2988 0
 2993 0038 1C4B     		ldr	r3, .L203+12
 2994 003a 1B78     		ldrb	r3, [r3]
 2995 003c DBB2     		uxtb	r3, r3
 2996 003e 1A06     		lsls	r2, r3, #24
 2997 0040 7B68     		ldr	r3, [r7, #4]
 2998 0042 1B68     		ldr	r3, [r3]
 2999 0044 1A43     		orrs	r2, r3
 3000 0046 7B68     		ldr	r3, [r7, #4]
 3001 0048 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 3002              		.loc 1 2990 0
 3003 004a 7B68     		ldr	r3, [r7, #4]
 3004 004c 0433     		adds	r3, r3, #4
 3005 004e 184A     		ldr	r2, .L203+16
 3006 0050 1278     		ldrb	r2, [r2]
 3007 0052 D2B2     		uxtb	r2, r2
 3008 0054 1A60     		str	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 3009              		.loc 1 2991 0
 3010 0056 174B     		ldr	r3, .L203+20
 3011 0058 1B78     		ldrb	r3, [r3]
 3012 005a DBB2     		uxtb	r3, r3
 3013 005c 1902     		lsls	r1, r3, #8
 3014 005e 7B68     		ldr	r3, [r7, #4]
 3015 0060 0433     		adds	r3, r3, #4
 3016 0062 7A68     		ldr	r2, [r7, #4]
 3017 0064 0432     		adds	r2, r2, #4
 3018 0066 1268     		ldr	r2, [r2]
 3019 0068 0A43     		orrs	r2, r1
 3020 006a 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 3021              		.loc 1 2992 0
 3022 006c 124B     		ldr	r3, .L203+24
 3023 006e 1B78     		ldrb	r3, [r3]
 3024 0070 DBB2     		uxtb	r3, r3
 3025 0072 1904     		lsls	r1, r3, #16
 3026 0074 7B68     		ldr	r3, [r7, #4]
 3027 0076 0433     		adds	r3, r3, #4
 3028 0078 7A68     		ldr	r2, [r7, #4]
 3029 007a 0432     		adds	r2, r2, #4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 107


 3030 007c 1268     		ldr	r2, [r2]
 3031 007e 0A43     		orrs	r2, r1
 3032 0080 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 3033              		.loc 1 2993 0
 3034 0082 0E4B     		ldr	r3, .L203+28
 3035 0084 1B78     		ldrb	r3, [r3]
 3036 0086 DBB2     		uxtb	r3, r3
 3037 0088 1906     		lsls	r1, r3, #24
 3038 008a 7B68     		ldr	r3, [r7, #4]
 3039 008c 0433     		adds	r3, r3, #4
 3040 008e 7A68     		ldr	r2, [r7, #4]
 3041 0090 0432     		adds	r2, r2, #4
 3042 0092 1268     		ldr	r2, [r2]
 3043 0094 0A43     		orrs	r2, r1
 3044 0096 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 3045              		.loc 1 3005 0
 3046 0098 C046     		nop
 3047 009a BD46     		mov	sp, r7
 3048 009c 02B0     		add	sp, sp, #8
 3049              		@ sp needed
 3050 009e 80BD     		pop	{r7, pc}
 3051              	.L204:
 3052              		.align	2
 3053              	.L203:
 3054 00a0 78F2FF0F 		.word	268431992
 3055 00a4 79F2FF0F 		.word	268431993
 3056 00a8 7AF2FF0F 		.word	268431994
 3057 00ac 7BF2FF0F 		.word	268431995
 3058 00b0 7CF2FF0F 		.word	268431996
 3059 00b4 7DF2FF0F 		.word	268431997
 3060 00b8 7EF2FF0F 		.word	268431998
 3061 00bc 7FF2FF0F 		.word	268431999
 3062              		.cfi_endproc
 3063              	.LFE52:
 3064              		.size	CyGetUniqueId, .-CyGetUniqueId
 3065              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 3066              		.align	2
 3067              		.global	CySysSetRamAccessArbPriority
 3068              		.code	16
 3069              		.thumb_func
 3070              		.type	CySysSetRamAccessArbPriority, %function
 3071              	CySysSetRamAccessArbPriority:
 3072              	.LFB53:
3006:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 108


3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:Generated_Source\PSoC4/CyLib.c ****     *
3013:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3014:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3015:Generated_Source\PSoC4/CyLib.c ****     *  details.
3016:Generated_Source\PSoC4/CyLib.c ****     *
3017:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3018:Generated_Source\PSoC4/CyLib.c ****     *
3019:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3020:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3024:Generated_Source\PSoC4/CyLib.c ****     *
3025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3027:Generated_Source\PSoC4/CyLib.c ****     {
 3073              		.loc 1 3027 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 16
 3076              		@ frame_needed = 1, uses_anonymous_args = 0
 3077 0000 80B5     		push	{r7, lr}
 3078              		.cfi_def_cfa_offset 8
 3079              		.cfi_offset 7, -8
 3080              		.cfi_offset 14, -4
 3081 0002 84B0     		sub	sp, sp, #16
 3082              		.cfi_def_cfa_offset 24
 3083 0004 00AF     		add	r7, sp, #0
 3084              		.cfi_def_cfa_register 7
 3085 0006 7860     		str	r0, [r7, #4]
3028:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3029:Generated_Source\PSoC4/CyLib.c **** 
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 3086              		.loc 1 3030 0
 3087 0008 094B     		ldr	r3, .L206
 3088 000a 1B68     		ldr	r3, [r3]
 3089 000c 094A     		ldr	r2, .L206+4
 3090 000e 1340     		ands	r3, r2
 3091 0010 FB60     		str	r3, [r7, #12]
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 3092              		.loc 1 3031 0
 3093 0012 7B68     		ldr	r3, [r7, #4]
 3094 0014 5A04     		lsls	r2, r3, #17
 3095 0016 C023     		movs	r3, #192
 3096 0018 DB02     		lsls	r3, r3, #11
 3097 001a 1340     		ands	r3, r2
 3098 001c FA68     		ldr	r2, [r7, #12]
 3099 001e 1343     		orrs	r3, r2
 3100 0020 FB60     		str	r3, [r7, #12]
3032:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 3101              		.loc 1 3032 0
 3102 0022 034B     		ldr	r3, .L206
 3103 0024 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 109


 3104 0026 1A60     		str	r2, [r3]
3033:Generated_Source\PSoC4/CyLib.c ****     }
 3105              		.loc 1 3033 0
 3106 0028 C046     		nop
 3107 002a BD46     		mov	sp, r7
 3108 002c 04B0     		add	sp, sp, #16
 3109              		@ sp needed
 3110 002e 80BD     		pop	{r7, pc}
 3111              	.L207:
 3112              		.align	2
 3113              	.L206:
 3114 0030 38001040 		.word	1074790456
 3115 0034 FFFFF9FF 		.word	-393217
 3116              		.cfi_endproc
 3117              	.LFE53:
 3118              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 3119              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 3120              		.align	2
 3121              		.global	CySysSetFlashAccessArbPriority
 3122              		.code	16
 3123              		.thumb_func
 3124              		.type	CySysSetFlashAccessArbPriority, %function
 3125              	CySysSetFlashAccessArbPriority:
 3126              	.LFB54:
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3037:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3038:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3039:Generated_Source\PSoC4/CyLib.c ****     *
3040:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3041:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3042:Generated_Source\PSoC4/CyLib.c ****     *  details.
3043:Generated_Source\PSoC4/CyLib.c ****     *
3044:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3045:Generated_Source\PSoC4/CyLib.c ****     *
3046:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3047:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3051:Generated_Source\PSoC4/CyLib.c ****     *
3052:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3053:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3054:Generated_Source\PSoC4/CyLib.c ****     {
 3127              		.loc 1 3054 0
 3128              		.cfi_startproc
 3129              		@ args = 0, pretend = 0, frame = 16
 3130              		@ frame_needed = 1, uses_anonymous_args = 0
 3131 0000 80B5     		push	{r7, lr}
 3132              		.cfi_def_cfa_offset 8
 3133              		.cfi_offset 7, -8
 3134              		.cfi_offset 14, -4
 3135 0002 84B0     		sub	sp, sp, #16
 3136              		.cfi_def_cfa_offset 24
 3137 0004 00AF     		add	r7, sp, #0
 3138              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 110


 3139 0006 7860     		str	r0, [r7, #4]
3055:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3056:Generated_Source\PSoC4/CyLib.c **** 
3057:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 3140              		.loc 1 3057 0
 3141 0008 094B     		ldr	r3, .L209
 3142 000a 1B68     		ldr	r3, [r3]
 3143 000c 094A     		ldr	r2, .L209+4
 3144 000e 1340     		ands	r3, r2
 3145 0010 FB60     		str	r3, [r7, #12]
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 3146              		.loc 1 3058 0
 3147 0012 7B68     		ldr	r3, [r7, #4]
 3148 0014 5A04     		lsls	r2, r3, #17
 3149 0016 C023     		movs	r3, #192
 3150 0018 DB02     		lsls	r3, r3, #11
 3151 001a 1340     		ands	r3, r2
 3152 001c FA68     		ldr	r2, [r7, #12]
 3153 001e 1343     		orrs	r3, r2
 3154 0020 FB60     		str	r3, [r7, #12]
3059:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 3155              		.loc 1 3059 0
 3156 0022 034B     		ldr	r3, .L209
 3157 0024 FA68     		ldr	r2, [r7, #12]
 3158 0026 1A60     		str	r2, [r3]
3060:Generated_Source\PSoC4/CyLib.c ****     }
 3159              		.loc 1 3060 0
 3160 0028 C046     		nop
 3161 002a BD46     		mov	sp, r7
 3162 002c 04B0     		add	sp, sp, #16
 3163              		@ sp needed
 3164 002e 80BD     		pop	{r7, pc}
 3165              	.L210:
 3166              		.align	2
 3167              	.L209:
 3168 0030 30001040 		.word	1074790448
 3169 0034 FFFFF9FF 		.word	-393217
 3170              		.cfi_endproc
 3171              	.LFE54:
 3172              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 3173              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 3174              		.align	2
 3175              		.global	CySysSetDmacAccessArbPriority
 3176              		.code	16
 3177              		.thumb_func
 3178              		.type	CySysSetDmacAccessArbPriority, %function
 3179              	CySysSetDmacAccessArbPriority:
 3180              	.LFB55:
3061:Generated_Source\PSoC4/CyLib.c **** 
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3064:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3065:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3066:Generated_Source\PSoC4/CyLib.c ****     *
3067:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3068:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3069:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 111


3070:Generated_Source\PSoC4/CyLib.c ****     *
3071:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3072:Generated_Source\PSoC4/CyLib.c ****     *
3073:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3074:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3078:Generated_Source\PSoC4/CyLib.c ****     *
3079:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3080:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3081:Generated_Source\PSoC4/CyLib.c ****     {
 3181              		.loc 1 3081 0
 3182              		.cfi_startproc
 3183              		@ args = 0, pretend = 0, frame = 16
 3184              		@ frame_needed = 1, uses_anonymous_args = 0
 3185 0000 80B5     		push	{r7, lr}
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 7, -8
 3188              		.cfi_offset 14, -4
 3189 0002 84B0     		sub	sp, sp, #16
 3190              		.cfi_def_cfa_offset 24
 3191 0004 00AF     		add	r7, sp, #0
 3192              		.cfi_def_cfa_register 7
 3193 0006 7860     		str	r0, [r7, #4]
3082:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3083:Generated_Source\PSoC4/CyLib.c **** 
3084:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 3194              		.loc 1 3084 0
 3195 0008 094B     		ldr	r3, .L212
 3196 000a 1B68     		ldr	r3, [r3]
 3197 000c 094A     		ldr	r2, .L212+4
 3198 000e 1340     		ands	r3, r2
 3199 0010 FB60     		str	r3, [r7, #12]
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 3200              		.loc 1 3085 0
 3201 0012 7B68     		ldr	r3, [r7, #4]
 3202 0014 5A04     		lsls	r2, r3, #17
 3203 0016 C023     		movs	r3, #192
 3204 0018 DB02     		lsls	r3, r3, #11
 3205 001a 1340     		ands	r3, r2
 3206 001c FA68     		ldr	r2, [r7, #12]
 3207 001e 1343     		orrs	r3, r2
 3208 0020 FB60     		str	r3, [r7, #12]
3086:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 3209              		.loc 1 3086 0
 3210 0022 034B     		ldr	r3, .L212
 3211 0024 FA68     		ldr	r2, [r7, #12]
 3212 0026 1A60     		str	r2, [r3]
3087:Generated_Source\PSoC4/CyLib.c ****     }
 3213              		.loc 1 3087 0
 3214 0028 C046     		nop
 3215 002a BD46     		mov	sp, r7
 3216 002c 04B0     		add	sp, sp, #16
 3217              		@ sp needed
 3218 002e 80BD     		pop	{r7, pc}
 3219              	.L213:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 112


 3220              		.align	2
 3221              	.L212:
 3222 0030 3C001040 		.word	1074790460
 3223 0034 FFFFF9FF 		.word	-393217
 3224              		.cfi_endproc
 3225              	.LFE55:
 3226              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 3227              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 3228              		.align	2
 3229              		.global	CySysSetPeripheralAccessArbPriority
 3230              		.code	16
 3231              		.thumb_func
 3232              		.type	CySysSetPeripheralAccessArbPriority, %function
 3233              	CySysSetPeripheralAccessArbPriority:
 3234              	.LFB56:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3092:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c ****     *
3094:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3095:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3096:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3097:Generated_Source\PSoC4/CyLib.c ****     *
3098:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3099:Generated_Source\PSoC4/CyLib.c ****     *
3100:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3101:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3102:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3103:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3107:Generated_Source\PSoC4/CyLib.c ****     *
3108:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3109:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3110:Generated_Source\PSoC4/CyLib.c ****     {
 3235              		.loc 1 3110 0
 3236              		.cfi_startproc
 3237              		@ args = 0, pretend = 0, frame = 16
 3238              		@ frame_needed = 1, uses_anonymous_args = 0
 3239 0000 80B5     		push	{r7, lr}
 3240              		.cfi_def_cfa_offset 8
 3241              		.cfi_offset 7, -8
 3242              		.cfi_offset 14, -4
 3243 0002 84B0     		sub	sp, sp, #16
 3244              		.cfi_def_cfa_offset 24
 3245 0004 00AF     		add	r7, sp, #0
 3246              		.cfi_def_cfa_register 7
 3247 0006 7860     		str	r0, [r7, #4]
 3248 0008 3960     		str	r1, [r7]
3111:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3112:Generated_Source\PSoC4/CyLib.c **** 
3113:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 3249              		.loc 1 3113 0
 3250 000a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 113


 3251 000c 002B     		cmp	r3, #0
 3252 000e 10D1     		bne	.L215
3114:Generated_Source\PSoC4/CyLib.c ****         {
3115:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 3253              		.loc 1 3115 0
 3254 0010 1F4B     		ldr	r3, .L220
 3255 0012 1B68     		ldr	r3, [r3]
 3256 0014 1F4A     		ldr	r2, .L220+4
 3257 0016 1340     		ands	r3, r2
 3258 0018 FB60     		str	r3, [r7, #12]
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3259              		.loc 1 3116 0
 3260 001a 3B68     		ldr	r3, [r7]
 3261 001c 5A04     		lsls	r2, r3, #17
 3262 001e C023     		movs	r3, #192
 3263 0020 DB02     		lsls	r3, r3, #11
 3264 0022 1340     		ands	r3, r2
 3265 0024 FA68     		ldr	r2, [r7, #12]
 3266 0026 1343     		orrs	r3, r2
 3267 0028 FB60     		str	r3, [r7, #12]
3117:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 3268              		.loc 1 3117 0
 3269 002a 194B     		ldr	r3, .L220
 3270 002c FA68     		ldr	r2, [r7, #12]
 3271 002e 1A60     		str	r2, [r3]
3118:Generated_Source\PSoC4/CyLib.c ****         } else
3119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3120:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
3121:Generated_Source\PSoC4/CyLib.c ****         {
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3124:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3125:Generated_Source\PSoC4/CyLib.c ****         } else
3126:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3127:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3128:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3129:Generated_Source\PSoC4/CyLib.c ****         {
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3133:Generated_Source\PSoC4/CyLib.c ****         } else
3134:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3135:Generated_Source\PSoC4/CyLib.c ****         {
3136:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3137:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3138:Generated_Source\PSoC4/CyLib.c ****         }
3139:Generated_Source\PSoC4/CyLib.c ****     }
 3272              		.loc 1 3139 0
 3273 0030 2AE0     		b	.L219
 3274              	.L215:
3120:Generated_Source\PSoC4/CyLib.c ****         {
 3275              		.loc 1 3120 0
 3276 0032 7B68     		ldr	r3, [r7, #4]
 3277 0034 012B     		cmp	r3, #1
 3278 0036 10D1     		bne	.L217
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3279              		.loc 1 3122 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 114


 3280 0038 174B     		ldr	r3, .L220+8
 3281 003a 1B68     		ldr	r3, [r3]
 3282 003c 154A     		ldr	r2, .L220+4
 3283 003e 1340     		ands	r3, r2
 3284 0040 FB60     		str	r3, [r7, #12]
3123:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 3285              		.loc 1 3123 0
 3286 0042 3B68     		ldr	r3, [r7]
 3287 0044 5A04     		lsls	r2, r3, #17
 3288 0046 C023     		movs	r3, #192
 3289 0048 DB02     		lsls	r3, r3, #11
 3290 004a 1340     		ands	r3, r2
 3291 004c FA68     		ldr	r2, [r7, #12]
 3292 004e 1343     		orrs	r3, r2
 3293 0050 FB60     		str	r3, [r7, #12]
3124:Generated_Source\PSoC4/CyLib.c ****         } else
 3294              		.loc 1 3124 0
 3295 0052 114B     		ldr	r3, .L220+8
 3296 0054 FA68     		ldr	r2, [r7, #12]
 3297 0056 1A60     		str	r2, [r3]
 3298              		.loc 1 3139 0
 3299 0058 16E0     		b	.L219
 3300              	.L217:
3128:Generated_Source\PSoC4/CyLib.c ****         {
 3301              		.loc 1 3128 0
 3302 005a 7B68     		ldr	r3, [r7, #4]
 3303 005c 022B     		cmp	r3, #2
 3304 005e 10D1     		bne	.L218
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 3305              		.loc 1 3130 0
 3306 0060 0E4B     		ldr	r3, .L220+12
 3307 0062 1B68     		ldr	r3, [r3]
 3308 0064 0B4A     		ldr	r2, .L220+4
 3309 0066 1340     		ands	r3, r2
 3310 0068 FB60     		str	r3, [r7, #12]
3131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 3311              		.loc 1 3131 0
 3312 006a 3B68     		ldr	r3, [r7]
 3313 006c 5A04     		lsls	r2, r3, #17
 3314 006e C023     		movs	r3, #192
 3315 0070 DB02     		lsls	r3, r3, #11
 3316 0072 1340     		ands	r3, r2
 3317 0074 FA68     		ldr	r2, [r7, #12]
 3318 0076 1343     		orrs	r3, r2
 3319 0078 FB60     		str	r3, [r7, #12]
3132:Generated_Source\PSoC4/CyLib.c ****         } else
 3320              		.loc 1 3132 0
 3321 007a 084B     		ldr	r3, .L220+12
 3322 007c FA68     		ldr	r2, [r7, #12]
 3323 007e 1A60     		str	r2, [r3]
 3324              		.loc 1 3139 0
 3325 0080 02E0     		b	.L219
 3326              	.L218:
3137:Generated_Source\PSoC4/CyLib.c ****         }
 3327              		.loc 1 3137 0 discriminator 1
 3328 0082 0020     		movs	r0, #0
 3329 0084 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 115


 3330              	.L219:
 3331              		.loc 1 3139 0
 3332 0088 C046     		nop
 3333 008a BD46     		mov	sp, r7
 3334 008c 04B0     		add	sp, sp, #16
 3335              		@ sp needed
 3336 008e 80BD     		pop	{r7, pc}
 3337              	.L221:
 3338              		.align	2
 3339              	.L220:
 3340 0090 00011040 		.word	1074790656
 3341 0094 FFFFF9FF 		.word	-393217
 3342 0098 04011040 		.word	1074790660
 3343 009c 08011040 		.word	1074790664
 3344              		.cfi_endproc
 3345              	.LFE56:
 3346              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 3347              		.text
 3348              	.Letext0:
 3349              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 3350              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 3351              		.section	.debug_info,"",%progbits
 3352              	.Ldebug_info0:
 3353 0000 C00A0000 		.4byte	0xac0
 3354 0004 0400     		.2byte	0x4
 3355 0006 00000000 		.4byte	.Ldebug_abbrev0
 3356 000a 04       		.byte	0x4
 3357 000b 01       		.uleb128 0x1
 3358 000c EE030000 		.4byte	.LASF119
 3359 0010 0C       		.byte	0xc
 3360 0011 D4070000 		.4byte	.LASF120
 3361 0015 22030000 		.4byte	.LASF121
 3362 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3363 001d 00000000 		.4byte	0
 3364 0021 00000000 		.4byte	.Ldebug_line0
 3365 0025 02       		.uleb128 0x2
 3366 0026 01       		.byte	0x1
 3367 0027 06       		.byte	0x6
 3368 0028 0E010000 		.4byte	.LASF0
 3369 002c 02       		.uleb128 0x2
 3370 002d 01       		.byte	0x1
 3371 002e 08       		.byte	0x8
 3372 002f 14060000 		.4byte	.LASF1
 3373 0033 02       		.uleb128 0x2
 3374 0034 02       		.byte	0x2
 3375 0035 05       		.byte	0x5
 3376 0036 22060000 		.4byte	.LASF2
 3377 003a 02       		.uleb128 0x2
 3378 003b 02       		.byte	0x2
 3379 003c 07       		.byte	0x7
 3380 003d D1020000 		.4byte	.LASF3
 3381 0041 02       		.uleb128 0x2
 3382 0042 04       		.byte	0x4
 3383 0043 05       		.byte	0x5
 3384 0044 4D010000 		.4byte	.LASF4
 3385 0048 02       		.uleb128 0x2
 3386 0049 04       		.byte	0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 116


 3387 004a 07       		.byte	0x7
 3388 004b 70020000 		.4byte	.LASF5
 3389 004f 02       		.uleb128 0x2
 3390 0050 08       		.byte	0x8
 3391 0051 05       		.byte	0x5
 3392 0052 00010000 		.4byte	.LASF6
 3393 0056 02       		.uleb128 0x2
 3394 0057 08       		.byte	0x8
 3395 0058 07       		.byte	0x7
 3396 0059 84000000 		.4byte	.LASF7
 3397 005d 03       		.uleb128 0x3
 3398 005e 04       		.byte	0x4
 3399 005f 05       		.byte	0x5
 3400 0060 696E7400 		.ascii	"int\000"
 3401 0064 02       		.uleb128 0x2
 3402 0065 04       		.byte	0x4
 3403 0066 07       		.byte	0x7
 3404 0067 54020000 		.4byte	.LASF8
 3405 006b 04       		.uleb128 0x4
 3406 006c 78010000 		.4byte	.LASF9
 3407 0070 02       		.byte	0x2
 3408 0071 D201     		.2byte	0x1d2
 3409 0073 2C000000 		.4byte	0x2c
 3410 0077 04       		.uleb128 0x4
 3411 0078 17000000 		.4byte	.LASF10
 3412 007c 02       		.byte	0x2
 3413 007d D301     		.2byte	0x1d3
 3414 007f 3A000000 		.4byte	0x3a
 3415 0083 04       		.uleb128 0x4
 3416 0084 B8010000 		.4byte	.LASF11
 3417 0088 02       		.byte	0x2
 3418 0089 D401     		.2byte	0x1d4
 3419 008b 48000000 		.4byte	0x48
 3420 008f 02       		.uleb128 0x2
 3421 0090 04       		.byte	0x4
 3422 0091 04       		.byte	0x4
 3423 0092 9E050000 		.4byte	.LASF12
 3424 0096 02       		.uleb128 0x2
 3425 0097 08       		.byte	0x8
 3426 0098 04       		.byte	0x4
 3427 0099 94010000 		.4byte	.LASF13
 3428 009d 02       		.uleb128 0x2
 3429 009e 01       		.byte	0x1
 3430 009f 08       		.byte	0x8
 3431 00a0 76060000 		.4byte	.LASF14
 3432 00a4 04       		.uleb128 0x4
 3433 00a5 A9070000 		.4byte	.LASF15
 3434 00a9 02       		.byte	0x2
 3435 00aa 7402     		.2byte	0x274
 3436 00ac 48000000 		.4byte	0x48
 3437 00b0 04       		.uleb128 0x4
 3438 00b1 E1050000 		.4byte	.LASF16
 3439 00b5 02       		.byte	0x2
 3440 00b6 7C02     		.2byte	0x27c
 3441 00b8 BC000000 		.4byte	0xbc
 3442 00bc 05       		.uleb128 0x5
 3443 00bd 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 117


 3444 00c1 04       		.uleb128 0x4
 3445 00c2 C2040000 		.4byte	.LASF17
 3446 00c6 02       		.byte	0x2
 3447 00c7 7E02     		.2byte	0x27e
 3448 00c9 CD000000 		.4byte	0xcd
 3449 00cd 05       		.uleb128 0x5
 3450 00ce 83000000 		.4byte	0x83
 3451 00d2 04       		.uleb128 0x4
 3452 00d3 7B060000 		.4byte	.LASF18
 3453 00d7 02       		.byte	0x2
 3454 00d8 8E02     		.2byte	0x28e
 3455 00da DE000000 		.4byte	0xde
 3456 00de 06       		.uleb128 0x6
 3457 00df 04       		.byte	0x4
 3458 00e0 E4000000 		.4byte	0xe4
 3459 00e4 07       		.uleb128 0x7
 3460 00e5 02       		.uleb128 0x2
 3461 00e6 08       		.byte	0x8
 3462 00e7 04       		.byte	0x4
 3463 00e8 2A050000 		.4byte	.LASF19
 3464 00ec 02       		.uleb128 0x2
 3465 00ed 04       		.byte	0x4
 3466 00ee 07       		.byte	0x7
 3467 00ef EB040000 		.4byte	.LASF20
 3468 00f3 08       		.uleb128 0x8
 3469 00f4 B3050000 		.4byte	.LASF21
 3470 00f8 03       		.byte	0x3
 3471 00f9 F5       		.byte	0xf5
 3472 00fa DE000000 		.4byte	0xde
 3473 00fe 09       		.uleb128 0x9
 3474 00ff B2070000 		.4byte	.LASF22
 3475 0103 01       		.byte	0x1
 3476 0104 6B       		.byte	0x6b
 3477 0105 00000000 		.4byte	.LFB2
 3478 0109 1C000000 		.4byte	.LFE2-.LFB2
 3479 010d 01       		.uleb128 0x1
 3480 010e 9C       		.byte	0x9c
 3481 010f 09       		.uleb128 0x9
 3482 0110 9D020000 		.4byte	.LASF23
 3483 0114 01       		.byte	0x1
 3484 0115 8B       		.byte	0x8b
 3485 0116 00000000 		.4byte	.LFB3
 3486 011a 1C000000 		.4byte	.LFE3-.LFB3
 3487 011e 01       		.uleb128 0x1
 3488 011f 9C       		.byte	0x9c
 3489 0120 0A       		.uleb128 0xa
 3490 0121 27000000 		.4byte	.LASF26
 3491 0125 01       		.byte	0x1
 3492 0126 AD01     		.2byte	0x1ad
 3493 0128 00000000 		.4byte	.LFB4
 3494 012c 48000000 		.4byte	.LFE4-.LFB4
 3495 0130 01       		.uleb128 0x1
 3496 0131 9C       		.byte	0x9c
 3497 0132 64010000 		.4byte	0x164
 3498 0136 0B       		.uleb128 0xb
 3499 0137 4A060000 		.4byte	.LASF28
 3500 013b 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 118


 3501 013c AD01     		.2byte	0x1ad
 3502 013e 83000000 		.4byte	0x83
 3503 0142 02       		.uleb128 0x2
 3504 0143 91       		.byte	0x91
 3505 0144 64       		.sleb128 -28
 3506 0145 0C       		.uleb128 0xc
 3507 0146 2B010000 		.4byte	.LASF24
 3508 014a 01       		.byte	0x1
 3509 014b AF01     		.2byte	0x1af
 3510 014d 6B000000 		.4byte	0x6b
 3511 0151 02       		.uleb128 0x2
 3512 0152 91       		.byte	0x91
 3513 0153 6F       		.sleb128 -17
 3514 0154 0C       		.uleb128 0xc
 3515 0155 00080000 		.4byte	.LASF25
 3516 0159 01       		.byte	0x1
 3517 015a B001     		.2byte	0x1b0
 3518 015c 83000000 		.4byte	0x83
 3519 0160 02       		.uleb128 0x2
 3520 0161 91       		.byte	0x91
 3521 0162 68       		.sleb128 -24
 3522 0163 00       		.byte	0
 3523 0164 0D       		.uleb128 0xd
 3524 0165 AD040000 		.4byte	.LASF27
 3525 0169 01       		.byte	0x1
 3526 016a D901     		.2byte	0x1d9
 3527 016c 00000000 		.4byte	.LFB5
 3528 0170 50000000 		.4byte	.LFE5-.LFB5
 3529 0174 01       		.uleb128 0x1
 3530 0175 9C       		.byte	0x9c
 3531 0176 8A010000 		.4byte	0x18a
 3532 017a 0B       		.uleb128 0xb
 3533 017b 8D010000 		.4byte	.LASF29
 3534 017f 01       		.byte	0x1
 3535 0180 D901     		.2byte	0x1d9
 3536 0182 83000000 		.4byte	0x83
 3537 0186 02       		.uleb128 0x2
 3538 0187 91       		.byte	0x91
 3539 0188 74       		.sleb128 -12
 3540 0189 00       		.byte	0
 3541 018a 0E       		.uleb128 0xe
 3542 018b DA010000 		.4byte	.LASF40
 3543 018f 01       		.byte	0x1
 3544 0190 FE01     		.2byte	0x1fe
 3545 0192 83000000 		.4byte	0x83
 3546 0196 00000000 		.4byte	.LFB6
 3547 019a 34000000 		.4byte	.LFE6-.LFB6
 3548 019e 01       		.uleb128 0x1
 3549 019f 9C       		.byte	0x9c
 3550 01a0 C3010000 		.4byte	0x1c3
 3551 01a4 0C       		.uleb128 0xc
 3552 01a5 2B010000 		.4byte	.LASF24
 3553 01a9 01       		.byte	0x1
 3554 01aa 0002     		.2byte	0x200
 3555 01ac 6B000000 		.4byte	0x6b
 3556 01b0 02       		.uleb128 0x2
 3557 01b1 91       		.byte	0x91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 119


 3558 01b2 6F       		.sleb128 -17
 3559 01b3 0C       		.uleb128 0xc
 3560 01b4 46050000 		.4byte	.LASF30
 3561 01b8 01       		.byte	0x1
 3562 01b9 0102     		.2byte	0x201
 3563 01bb 83000000 		.4byte	0x83
 3564 01bf 02       		.uleb128 0x2
 3565 01c0 91       		.byte	0x91
 3566 01c1 68       		.sleb128 -24
 3567 01c2 00       		.byte	0
 3568 01c3 0A       		.uleb128 0xa
 3569 01c4 98060000 		.4byte	.LASF31
 3570 01c8 01       		.byte	0x1
 3571 01c9 3502     		.2byte	0x235
 3572 01cb 00000000 		.4byte	.LFB7
 3573 01cf 48000000 		.4byte	.LFE7-.LFB7
 3574 01d3 01       		.uleb128 0x1
 3575 01d4 9C       		.byte	0x9c
 3576 01d5 F8010000 		.4byte	0x1f8
 3577 01d9 0B       		.uleb128 0xb
 3578 01da 8D070000 		.4byte	.LASF32
 3579 01de 01       		.byte	0x1
 3580 01df 3502     		.2byte	0x235
 3581 01e1 83000000 		.4byte	0x83
 3582 01e5 02       		.uleb128 0x2
 3583 01e6 91       		.byte	0x91
 3584 01e7 64       		.sleb128 -28
 3585 01e8 0C       		.uleb128 0xc
 3586 01e9 2B010000 		.4byte	.LASF24
 3587 01ed 01       		.byte	0x1
 3588 01ee 3702     		.2byte	0x237
 3589 01f0 6B000000 		.4byte	0x6b
 3590 01f4 02       		.uleb128 0x2
 3591 01f5 91       		.byte	0x91
 3592 01f6 6F       		.sleb128 -17
 3593 01f7 00       		.byte	0
 3594 01f8 0A       		.uleb128 0xa
 3595 01f9 D9030000 		.4byte	.LASF33
 3596 01fd 01       		.byte	0x1
 3597 01fe 6F02     		.2byte	0x26f
 3598 0200 00000000 		.4byte	.LFB8
 3599 0204 EC010000 		.4byte	.LFE8-.LFB8
 3600 0208 01       		.uleb128 0x1
 3601 0209 9C       		.byte	0x9c
 3602 020a 78020000 		.4byte	0x278
 3603 020e 0B       		.uleb128 0xb
 3604 020f 1A010000 		.4byte	.LASF34
 3605 0213 01       		.byte	0x1
 3606 0214 6F02     		.2byte	0x26f
 3607 0216 83000000 		.4byte	0x83
 3608 021a 02       		.uleb128 0x2
 3609 021b 91       		.byte	0x91
 3610 021c 64       		.sleb128 -28
 3611 021d 0C       		.uleb128 0xc
 3612 021e 0F000000 		.4byte	.LASF35
 3613 0222 01       		.byte	0x1
 3614 0223 7502     		.2byte	0x275
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 120


 3615 0225 6B000000 		.4byte	0x6b
 3616 0229 02       		.uleb128 0x2
 3617 022a 91       		.byte	0x91
 3618 022b 6F       		.sleb128 -17
 3619 022c 0C       		.uleb128 0xc
 3620 022d 3E050000 		.4byte	.LASF36
 3621 0231 01       		.byte	0x1
 3622 0232 7602     		.2byte	0x276
 3623 0234 6B000000 		.4byte	0x6b
 3624 0238 02       		.uleb128 0x2
 3625 0239 91       		.byte	0x91
 3626 023a 6E       		.sleb128 -18
 3627 023b 0C       		.uleb128 0xc
 3628 023c C3070000 		.4byte	.LASF37
 3629 0240 01       		.byte	0x1
 3630 0241 7702     		.2byte	0x277
 3631 0243 6B000000 		.4byte	0x6b
 3632 0247 02       		.uleb128 0x2
 3633 0248 91       		.byte	0x91
 3634 0249 6B       		.sleb128 -21
 3635 024a 0C       		.uleb128 0xc
 3636 024b 6F000000 		.4byte	.LASF38
 3637 024f 01       		.byte	0x1
 3638 0250 7802     		.2byte	0x278
 3639 0252 6B000000 		.4byte	0x6b
 3640 0256 02       		.uleb128 0x2
 3641 0257 91       		.byte	0x91
 3642 0258 6D       		.sleb128 -19
 3643 0259 0C       		.uleb128 0xc
 3644 025a D7060000 		.4byte	.LASF39
 3645 025e 01       		.byte	0x1
 3646 025f 7902     		.2byte	0x279
 3647 0261 6B000000 		.4byte	0x6b
 3648 0265 02       		.uleb128 0x2
 3649 0266 91       		.byte	0x91
 3650 0267 6A       		.sleb128 -22
 3651 0268 0C       		.uleb128 0xc
 3652 0269 2B010000 		.4byte	.LASF24
 3653 026d 01       		.byte	0x1
 3654 026e 8402     		.2byte	0x284
 3655 0270 6B000000 		.4byte	0x6b
 3656 0274 02       		.uleb128 0x2
 3657 0275 91       		.byte	0x91
 3658 0276 6C       		.sleb128 -20
 3659 0277 00       		.byte	0
 3660 0278 0E       		.uleb128 0xe
 3661 0279 54060000 		.4byte	.LASF41
 3662 027d 01       		.byte	0x1
 3663 027e 0304     		.2byte	0x403
 3664 0280 A4000000 		.4byte	0xa4
 3665 0284 00000000 		.4byte	.LFB9
 3666 0288 74000000 		.4byte	.LFE9-.LFB9
 3667 028c 01       		.uleb128 0x1
 3668 028d 9C       		.byte	0x9c
 3669 028e B1020000 		.4byte	0x2b1
 3670 0292 0B       		.uleb128 0xb
 3671 0293 83070000 		.4byte	.LASF42
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 121


 3672 0297 01       		.byte	0x1
 3673 0298 0304     		.2byte	0x403
 3674 029a 83000000 		.4byte	0x83
 3675 029e 02       		.uleb128 0x2
 3676 029f 91       		.byte	0x91
 3677 02a0 6C       		.sleb128 -20
 3678 02a1 0C       		.uleb128 0xc
 3679 02a2 D7040000 		.4byte	.LASF43
 3680 02a6 01       		.byte	0x1
 3681 02a7 0504     		.2byte	0x405
 3682 02a9 A4000000 		.4byte	0xa4
 3683 02ad 02       		.uleb128 0x2
 3684 02ae 91       		.byte	0x91
 3685 02af 74       		.sleb128 -12
 3686 02b0 00       		.byte	0
 3687 02b1 0F       		.uleb128 0xf
 3688 02b2 47070000 		.4byte	.LASF44
 3689 02b6 01       		.byte	0x1
 3690 02b7 9104     		.2byte	0x491
 3691 02b9 00000000 		.4byte	.LFB10
 3692 02bd 30000000 		.4byte	.LFE10-.LFB10
 3693 02c1 01       		.uleb128 0x1
 3694 02c2 9C       		.byte	0x9c
 3695 02c3 10       		.uleb128 0x10
 3696 02c4 BF010000 		.4byte	.LASF45
 3697 02c8 01       		.byte	0x1
 3698 02c9 B304     		.2byte	0x4b3
 3699 02cb 83000000 		.4byte	0x83
 3700 02cf 00000000 		.4byte	.LFB11
 3701 02d3 20000000 		.4byte	.LFE11-.LFB11
 3702 02d7 01       		.uleb128 0x1
 3703 02d8 9C       		.byte	0x9c
 3704 02d9 ED020000 		.4byte	0x2ed
 3705 02dd 0C       		.uleb128 0xc
 3706 02de 34080000 		.4byte	.LASF46
 3707 02e2 01       		.byte	0x1
 3708 02e3 B504     		.2byte	0x4b5
 3709 02e5 83000000 		.4byte	0x83
 3710 02e9 02       		.uleb128 0x2
 3711 02ea 91       		.byte	0x91
 3712 02eb 74       		.sleb128 -12
 3713 02ec 00       		.byte	0
 3714 02ed 0A       		.uleb128 0xa
 3715 02ee 95070000 		.4byte	.LASF47
 3716 02f2 01       		.byte	0x1
 3717 02f3 E204     		.2byte	0x4e2
 3718 02f5 00000000 		.4byte	.LFB12
 3719 02f9 58000000 		.4byte	.LFE12-.LFB12
 3720 02fd 01       		.uleb128 0x1
 3721 02fe 9C       		.byte	0x9c
 3722 02ff 22030000 		.4byte	0x322
 3723 0303 0B       		.uleb128 0xb
 3724 0304 8D070000 		.4byte	.LASF32
 3725 0308 01       		.byte	0x1
 3726 0309 E204     		.2byte	0x4e2
 3727 030b 83000000 		.4byte	0x83
 3728 030f 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 122


 3729 0310 91       		.byte	0x91
 3730 0311 64       		.sleb128 -28
 3731 0312 0C       		.uleb128 0xc
 3732 0313 2B010000 		.4byte	.LASF24
 3733 0317 01       		.byte	0x1
 3734 0318 E404     		.2byte	0x4e4
 3735 031a 6B000000 		.4byte	0x6b
 3736 031e 02       		.uleb128 0x2
 3737 031f 91       		.byte	0x91
 3738 0320 6F       		.sleb128 -17
 3739 0321 00       		.byte	0
 3740 0322 0A       		.uleb128 0xa
 3741 0323 A4050000 		.4byte	.LASF48
 3742 0327 01       		.byte	0x1
 3743 0328 4608     		.2byte	0x846
 3744 032a 00000000 		.4byte	.LFB13
 3745 032e 64000000 		.4byte	.LFE13-.LFB13
 3746 0332 01       		.uleb128 0x1
 3747 0333 9C       		.byte	0x9c
 3748 0334 48030000 		.4byte	0x348
 3749 0338 0B       		.uleb128 0xb
 3750 0339 E6050000 		.4byte	.LASF49
 3751 033d 01       		.byte	0x1
 3752 033e 4608     		.2byte	0x846
 3753 0340 83000000 		.4byte	0x83
 3754 0344 02       		.uleb128 0x2
 3755 0345 91       		.byte	0x91
 3756 0346 74       		.sleb128 -12
 3757 0347 00       		.byte	0
 3758 0348 0F       		.uleb128 0xf
 3759 0349 28070000 		.4byte	.LASF50
 3760 034d 01       		.byte	0x1
 3761 034e 6408     		.2byte	0x864
 3762 0350 00000000 		.4byte	.LFB14
 3763 0354 2C000000 		.4byte	.LFE14-.LFB14
 3764 0358 01       		.uleb128 0x1
 3765 0359 9C       		.byte	0x9c
 3766 035a 11       		.uleb128 0x11
 3767 035b 82020000 		.4byte	.LASF90
 3768 035f 01       		.byte	0x1
 3769 0360 7608     		.2byte	0x876
 3770 0362 83000000 		.4byte	0x83
 3771 0366 00000000 		.4byte	.LFB15
 3772 036a 18000000 		.4byte	.LFE15-.LFB15
 3773 036e 01       		.uleb128 0x1
 3774 036f 9C       		.byte	0x9c
 3775 0370 0F       		.uleb128 0xf
 3776 0371 A1010000 		.4byte	.LASF51
 3777 0375 01       		.byte	0x1
 3778 0376 8608     		.2byte	0x886
 3779 0378 00000000 		.4byte	.LFB16
 3780 037c 14000000 		.4byte	.LFE16-.LFB16
 3781 0380 01       		.uleb128 0x1
 3782 0381 9C       		.byte	0x9c
 3783 0382 10       		.uleb128 0x10
 3784 0383 BD020000 		.4byte	.LASF52
 3785 0387 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 123


 3786 0388 A008     		.2byte	0x8a0
 3787 038a 83000000 		.4byte	0x83
 3788 038e 00000000 		.4byte	.LFB17
 3789 0392 30000000 		.4byte	.LFE17-.LFB17
 3790 0396 01       		.uleb128 0x1
 3791 0397 9C       		.byte	0x9c
 3792 0398 BB030000 		.4byte	0x3bb
 3793 039c 0B       		.uleb128 0xb
 3794 039d 6F060000 		.4byte	.LASF53
 3795 03a1 01       		.byte	0x1
 3796 03a2 A008     		.2byte	0x8a0
 3797 03a4 83000000 		.4byte	0x83
 3798 03a8 02       		.uleb128 0x2
 3799 03a9 91       		.byte	0x91
 3800 03aa 6C       		.sleb128 -20
 3801 03ab 0C       		.uleb128 0xc
 3802 03ac D7040000 		.4byte	.LASF43
 3803 03b0 01       		.byte	0x1
 3804 03b1 A208     		.2byte	0x8a2
 3805 03b3 83000000 		.4byte	0x83
 3806 03b7 02       		.uleb128 0x2
 3807 03b8 91       		.byte	0x91
 3808 03b9 74       		.sleb128 -12
 3809 03ba 00       		.byte	0
 3810 03bb 10       		.uleb128 0x10
 3811 03bc 61000000 		.4byte	.LASF54
 3812 03c0 01       		.byte	0x1
 3813 03c1 B708     		.2byte	0x8b7
 3814 03c3 83000000 		.4byte	0x83
 3815 03c7 00000000 		.4byte	.LFB18
 3816 03cb 24000000 		.4byte	.LFE18-.LFB18
 3817 03cf 01       		.uleb128 0x1
 3818 03d0 9C       		.byte	0x9c
 3819 03d1 E5030000 		.4byte	0x3e5
 3820 03d5 0C       		.uleb128 0xc
 3821 03d6 1E000000 		.4byte	.LASF55
 3822 03da 01       		.byte	0x1
 3823 03db B908     		.2byte	0x8b9
 3824 03dd 83000000 		.4byte	0x83
 3825 03e1 02       		.uleb128 0x2
 3826 03e2 91       		.byte	0x91
 3827 03e3 74       		.sleb128 -12
 3828 03e4 00       		.byte	0
 3829 03e5 0D       		.uleb128 0xd
 3830 03e6 AC000000 		.4byte	.LASF56
 3831 03ea 01       		.byte	0x1
 3832 03eb CE08     		.2byte	0x8ce
 3833 03ed 00000000 		.4byte	.LFB19
 3834 03f1 1C000000 		.4byte	.LFE19-.LFB19
 3835 03f5 01       		.uleb128 0x1
 3836 03f6 9C       		.byte	0x9c
 3837 03f7 0B040000 		.4byte	0x40b
 3838 03fb 0B       		.uleb128 0xb
 3839 03fc D5010000 		.4byte	.LASF57
 3840 0400 01       		.byte	0x1
 3841 0401 CE08     		.2byte	0x8ce
 3842 0403 83000000 		.4byte	0x83
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 124


 3843 0407 02       		.uleb128 0x2
 3844 0408 91       		.byte	0x91
 3845 0409 74       		.sleb128 -12
 3846 040a 00       		.byte	0
 3847 040b 0E       		.uleb128 0xe
 3848 040c 9B040000 		.4byte	.LASF58
 3849 0410 01       		.byte	0x1
 3850 0411 E708     		.2byte	0x8e7
 3851 0413 D2000000 		.4byte	0xd2
 3852 0417 00000000 		.4byte	.LFB20
 3853 041b 48000000 		.4byte	.LFE20-.LFB20
 3854 041f 01       		.uleb128 0x1
 3855 0420 9C       		.byte	0x9c
 3856 0421 62040000 		.4byte	0x462
 3857 0425 0B       		.uleb128 0xb
 3858 0426 12030000 		.4byte	.LASF59
 3859 042a 01       		.byte	0x1
 3860 042b E708     		.2byte	0x8e7
 3861 042d 6B000000 		.4byte	0x6b
 3862 0431 02       		.uleb128 0x2
 3863 0432 91       		.byte	0x91
 3864 0433 6F       		.sleb128 -17
 3865 0434 0B       		.uleb128 0xb
 3866 0435 36050000 		.4byte	.LASF60
 3867 0439 01       		.byte	0x1
 3868 043a E708     		.2byte	0x8e7
 3869 043c D2000000 		.4byte	0xd2
 3870 0440 02       		.uleb128 0x2
 3871 0441 91       		.byte	0x91
 3872 0442 68       		.sleb128 -24
 3873 0443 0C       		.uleb128 0xc
 3874 0444 53000000 		.4byte	.LASF61
 3875 0448 01       		.byte	0x1
 3876 0449 E908     		.2byte	0x8e9
 3877 044b D2000000 		.4byte	0xd2
 3878 044f 02       		.uleb128 0x2
 3879 0450 91       		.byte	0x91
 3880 0451 70       		.sleb128 -16
 3881 0452 0C       		.uleb128 0xc
 3882 0453 00000000 		.4byte	.LASF62
 3883 0457 01       		.byte	0x1
 3884 0458 EA08     		.2byte	0x8ea
 3885 045a 62040000 		.4byte	0x462
 3886 045e 02       		.uleb128 0x2
 3887 045f 91       		.byte	0x91
 3888 0460 74       		.sleb128 -12
 3889 0461 00       		.byte	0
 3890 0462 06       		.uleb128 0x6
 3891 0463 04       		.byte	0x4
 3892 0464 D2000000 		.4byte	0xd2
 3893 0468 0E       		.uleb128 0xe
 3894 0469 38060000 		.4byte	.LASF63
 3895 046d 01       		.byte	0x1
 3896 046e 0909     		.2byte	0x909
 3897 0470 D2000000 		.4byte	0xd2
 3898 0474 00000000 		.4byte	.LFB21
 3899 0478 34000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 125


 3900 047c 01       		.uleb128 0x1
 3901 047d 9C       		.byte	0x9c
 3902 047e A1040000 		.4byte	0x4a1
 3903 0482 0B       		.uleb128 0xb
 3904 0483 12030000 		.4byte	.LASF59
 3905 0487 01       		.byte	0x1
 3906 0488 0909     		.2byte	0x909
 3907 048a 6B000000 		.4byte	0x6b
 3908 048e 02       		.uleb128 0x2
 3909 048f 91       		.byte	0x91
 3910 0490 6F       		.sleb128 -17
 3911 0491 0C       		.uleb128 0xc
 3912 0492 00000000 		.4byte	.LASF62
 3913 0496 01       		.byte	0x1
 3914 0497 0B09     		.2byte	0x90b
 3915 0499 62040000 		.4byte	0x462
 3916 049d 02       		.uleb128 0x2
 3917 049e 91       		.byte	0x91
 3918 049f 74       		.sleb128 -12
 3919 04a0 00       		.byte	0
 3920 04a1 0E       		.uleb128 0xe
 3921 04a2 03030000 		.4byte	.LASF64
 3922 04a6 01       		.byte	0x1
 3923 04a7 1F09     		.2byte	0x91f
 3924 04a9 D2000000 		.4byte	0xd2
 3925 04ad 00000000 		.4byte	.LFB22
 3926 04b1 4C000000 		.4byte	.LFE22-.LFB22
 3927 04b5 01       		.uleb128 0x1
 3928 04b6 9C       		.byte	0x9c
 3929 04b7 F8040000 		.4byte	0x4f8
 3930 04bb 0B       		.uleb128 0xb
 3931 04bc 12030000 		.4byte	.LASF59
 3932 04c0 01       		.byte	0x1
 3933 04c1 1F09     		.2byte	0x91f
 3934 04c3 6B000000 		.4byte	0x6b
 3935 04c7 02       		.uleb128 0x2
 3936 04c8 91       		.byte	0x91
 3937 04c9 6F       		.sleb128 -17
 3938 04ca 0B       		.uleb128 0xb
 3939 04cb 36050000 		.4byte	.LASF60
 3940 04cf 01       		.byte	0x1
 3941 04d0 1F09     		.2byte	0x91f
 3942 04d2 D2000000 		.4byte	0xd2
 3943 04d6 02       		.uleb128 0x2
 3944 04d7 91       		.byte	0x91
 3945 04d8 68       		.sleb128 -24
 3946 04d9 0C       		.uleb128 0xc
 3947 04da 53000000 		.4byte	.LASF61
 3948 04de 01       		.byte	0x1
 3949 04df 2109     		.2byte	0x921
 3950 04e1 D2000000 		.4byte	0xd2
 3951 04e5 02       		.uleb128 0x2
 3952 04e6 91       		.byte	0x91
 3953 04e7 70       		.sleb128 -16
 3954 04e8 0C       		.uleb128 0xc
 3955 04e9 00000000 		.4byte	.LASF62
 3956 04ed 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 126


 3957 04ee 2209     		.2byte	0x922
 3958 04f0 62040000 		.4byte	0x462
 3959 04f4 02       		.uleb128 0x2
 3960 04f5 91       		.byte	0x91
 3961 04f6 74       		.sleb128 -12
 3962 04f7 00       		.byte	0
 3963 04f8 0E       		.uleb128 0xe
 3964 04f9 C5050000 		.4byte	.LASF65
 3965 04fd 01       		.byte	0x1
 3966 04fe 3B09     		.2byte	0x93b
 3967 0500 D2000000 		.4byte	0xd2
 3968 0504 00000000 		.4byte	.LFB23
 3969 0508 36000000 		.4byte	.LFE23-.LFB23
 3970 050c 01       		.uleb128 0x1
 3971 050d 9C       		.byte	0x9c
 3972 050e 31050000 		.4byte	0x531
 3973 0512 0B       		.uleb128 0xb
 3974 0513 12030000 		.4byte	.LASF59
 3975 0517 01       		.byte	0x1
 3976 0518 3B09     		.2byte	0x93b
 3977 051a 6B000000 		.4byte	0x6b
 3978 051e 02       		.uleb128 0x2
 3979 051f 91       		.byte	0x91
 3980 0520 6F       		.sleb128 -17
 3981 0521 0C       		.uleb128 0xc
 3982 0522 00000000 		.4byte	.LASF62
 3983 0526 01       		.byte	0x1
 3984 0527 3D09     		.2byte	0x93d
 3985 0529 62040000 		.4byte	0x462
 3986 052d 02       		.uleb128 0x2
 3987 052e 91       		.byte	0x91
 3988 052f 74       		.sleb128 -12
 3989 0530 00       		.byte	0
 3990 0531 0A       		.uleb128 0xa
 3991 0532 8D050000 		.4byte	.LASF66
 3992 0536 01       		.byte	0x1
 3993 0537 4E09     		.2byte	0x94e
 3994 0539 00000000 		.4byte	.LFB24
 3995 053d A8000000 		.4byte	.LFE24-.LFB24
 3996 0541 01       		.uleb128 0x1
 3997 0542 9C       		.byte	0x9c
 3998 0543 93050000 		.4byte	0x593
 3999 0547 0B       		.uleb128 0xb
 4000 0548 12030000 		.4byte	.LASF59
 4001 054c 01       		.byte	0x1
 4002 054d 4E09     		.2byte	0x94e
 4003 054f 6B000000 		.4byte	0x6b
 4004 0553 02       		.uleb128 0x2
 4005 0554 91       		.byte	0x91
 4006 0555 5F       		.sleb128 -33
 4007 0556 0B       		.uleb128 0xb
 4008 0557 19030000 		.4byte	.LASF67
 4009 055b 01       		.byte	0x1
 4010 055c 4E09     		.2byte	0x94e
 4011 055e 6B000000 		.4byte	0x6b
 4012 0562 02       		.uleb128 0x2
 4013 0563 91       		.byte	0x91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 127


 4014 0564 5E       		.sleb128 -34
 4015 0565 0C       		.uleb128 0xc
 4016 0566 2B010000 		.4byte	.LASF24
 4017 056a 01       		.byte	0x1
 4018 056b 5009     		.2byte	0x950
 4019 056d 6B000000 		.4byte	0x6b
 4020 0571 02       		.uleb128 0x2
 4021 0572 91       		.byte	0x91
 4022 0573 6B       		.sleb128 -21
 4023 0574 0C       		.uleb128 0xc
 4024 0575 9B010000 		.4byte	.LASF68
 4025 0579 01       		.byte	0x1
 4026 057a 5109     		.2byte	0x951
 4027 057c 83000000 		.4byte	0x83
 4028 0580 02       		.uleb128 0x2
 4029 0581 91       		.byte	0x91
 4030 0582 6C       		.sleb128 -20
 4031 0583 0C       		.uleb128 0xc
 4032 0584 1E020000 		.4byte	.LASF69
 4033 0588 01       		.byte	0x1
 4034 0589 5209     		.2byte	0x952
 4035 058b 83000000 		.4byte	0x83
 4036 058f 02       		.uleb128 0x2
 4037 0590 91       		.byte	0x91
 4038 0591 64       		.sleb128 -28
 4039 0592 00       		.byte	0
 4040 0593 0E       		.uleb128 0xe
 4041 0594 F2010000 		.4byte	.LASF70
 4042 0598 01       		.byte	0x1
 4043 0599 7009     		.2byte	0x970
 4044 059b 6B000000 		.4byte	0x6b
 4045 059f 00000000 		.4byte	.LFB25
 4046 05a3 58000000 		.4byte	.LFE25-.LFB25
 4047 05a7 01       		.uleb128 0x1
 4048 05a8 9C       		.byte	0x9c
 4049 05a9 CC050000 		.4byte	0x5cc
 4050 05ad 0B       		.uleb128 0xb
 4051 05ae 12030000 		.4byte	.LASF59
 4052 05b2 01       		.byte	0x1
 4053 05b3 7009     		.2byte	0x970
 4054 05b5 6B000000 		.4byte	0x6b
 4055 05b9 02       		.uleb128 0x2
 4056 05ba 91       		.byte	0x91
 4057 05bb 6F       		.sleb128 -17
 4058 05bc 0C       		.uleb128 0xc
 4059 05bd 19030000 		.4byte	.LASF67
 4060 05c1 01       		.byte	0x1
 4061 05c2 7209     		.2byte	0x972
 4062 05c4 6B000000 		.4byte	0x6b
 4063 05c8 02       		.uleb128 0x2
 4064 05c9 91       		.byte	0x91
 4065 05ca 77       		.sleb128 -9
 4066 05cb 00       		.byte	0
 4067 05cc 0D       		.uleb128 0xd
 4068 05cd 2C060000 		.4byte	.LASF71
 4069 05d1 01       		.byte	0x1
 4070 05d2 8509     		.2byte	0x985
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 128


 4071 05d4 00000000 		.4byte	.LFB26
 4072 05d8 2C000000 		.4byte	.LFE26-.LFB26
 4073 05dc 01       		.uleb128 0x1
 4074 05dd 9C       		.byte	0x9c
 4075 05de F2050000 		.4byte	0x5f2
 4076 05e2 0B       		.uleb128 0xb
 4077 05e3 12030000 		.4byte	.LASF59
 4078 05e7 01       		.byte	0x1
 4079 05e8 8509     		.2byte	0x985
 4080 05ea 6B000000 		.4byte	0x6b
 4081 05ee 02       		.uleb128 0x2
 4082 05ef 91       		.byte	0x91
 4083 05f0 77       		.sleb128 -9
 4084 05f1 00       		.byte	0
 4085 05f2 10       		.uleb128 0x10
 4086 05f3 F2000000 		.4byte	.LASF72
 4087 05f7 01       		.byte	0x1
 4088 05f8 9709     		.2byte	0x997
 4089 05fa 6B000000 		.4byte	0x6b
 4090 05fe 00000000 		.4byte	.LFB27
 4091 0602 30000000 		.4byte	.LFE27-.LFB27
 4092 0606 01       		.uleb128 0x1
 4093 0607 9C       		.byte	0x9c
 4094 0608 1C060000 		.4byte	0x61c
 4095 060c 0B       		.uleb128 0xb
 4096 060d 12030000 		.4byte	.LASF59
 4097 0611 01       		.byte	0x1
 4098 0612 9709     		.2byte	0x997
 4099 0614 6B000000 		.4byte	0x6b
 4100 0618 02       		.uleb128 0x2
 4101 0619 91       		.byte	0x91
 4102 061a 77       		.sleb128 -9
 4103 061b 00       		.byte	0
 4104 061c 0D       		.uleb128 0xd
 4105 061d 56010000 		.4byte	.LASF73
 4106 0621 01       		.byte	0x1
 4107 0622 A709     		.2byte	0x9a7
 4108 0624 00000000 		.4byte	.LFB28
 4109 0628 2C000000 		.4byte	.LFE28-.LFB28
 4110 062c 01       		.uleb128 0x1
 4111 062d 9C       		.byte	0x9c
 4112 062e 42060000 		.4byte	0x642
 4113 0632 0B       		.uleb128 0xb
 4114 0633 12030000 		.4byte	.LASF59
 4115 0637 01       		.byte	0x1
 4116 0638 A709     		.2byte	0x9a7
 4117 063a 6B000000 		.4byte	0x6b
 4118 063e 02       		.uleb128 0x2
 4119 063f 91       		.byte	0x91
 4120 0640 77       		.sleb128 -9
 4121 0641 00       		.byte	0
 4122 0642 0D       		.uleb128 0xd
 4123 0643 AD020000 		.4byte	.LASF74
 4124 0647 01       		.byte	0x1
 4125 0648 B509     		.2byte	0x9b5
 4126 064a 00000000 		.4byte	.LFB29
 4127 064e 2C000000 		.4byte	.LFE29-.LFB29
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 129


 4128 0652 01       		.uleb128 0x1
 4129 0653 9C       		.byte	0x9c
 4130 0654 68060000 		.4byte	0x668
 4131 0658 0B       		.uleb128 0xb
 4132 0659 12030000 		.4byte	.LASF59
 4133 065d 01       		.byte	0x1
 4134 065e B509     		.2byte	0x9b5
 4135 0660 6B000000 		.4byte	0x6b
 4136 0664 02       		.uleb128 0x2
 4137 0665 91       		.byte	0x91
 4138 0666 77       		.sleb128 -9
 4139 0667 00       		.byte	0
 4140 0668 0D       		.uleb128 0xd
 4141 0669 18050000 		.4byte	.LASF75
 4142 066d 01       		.byte	0x1
 4143 066e C409     		.2byte	0x9c4
 4144 0670 00000000 		.4byte	.LFB30
 4145 0674 2C000000 		.4byte	.LFE30-.LFB30
 4146 0678 01       		.uleb128 0x1
 4147 0679 9C       		.byte	0x9c
 4148 067a 8E060000 		.4byte	0x68e
 4149 067e 0B       		.uleb128 0xb
 4150 067f 12030000 		.4byte	.LASF59
 4151 0683 01       		.byte	0x1
 4152 0684 C409     		.2byte	0x9c4
 4153 0686 6B000000 		.4byte	0x6b
 4154 068a 02       		.uleb128 0x2
 4155 068b 91       		.byte	0x91
 4156 068c 77       		.sleb128 -9
 4157 068d 00       		.byte	0
 4158 068e 0D       		.uleb128 0xd
 4159 068f F0050000 		.4byte	.LASF76
 4160 0693 01       		.byte	0x1
 4161 0694 D309     		.2byte	0x9d3
 4162 0696 00000000 		.4byte	.LFB31
 4163 069a 16000000 		.4byte	.LFE31-.LFB31
 4164 069e 01       		.uleb128 0x1
 4165 069f 9C       		.byte	0x9c
 4166 06a0 B4060000 		.4byte	0x6b4
 4167 06a4 0B       		.uleb128 0xb
 4168 06a5 6F060000 		.4byte	.LASF53
 4169 06a9 01       		.byte	0x1
 4170 06aa D309     		.2byte	0x9d3
 4171 06ac 6B000000 		.4byte	0x6b
 4172 06b0 02       		.uleb128 0x2
 4173 06b1 91       		.byte	0x91
 4174 06b2 77       		.sleb128 -9
 4175 06b3 00       		.byte	0
 4176 06b4 0F       		.uleb128 0xf
 4177 06b5 C9000000 		.4byte	.LASF77
 4178 06b9 01       		.byte	0x1
 4179 06ba EB09     		.2byte	0x9eb
 4180 06bc 00000000 		.4byte	.LFB32
 4181 06c0 24000000 		.4byte	.LFE32-.LFB32
 4182 06c4 01       		.uleb128 0x1
 4183 06c5 9C       		.byte	0x9c
 4184 06c6 0A       		.uleb128 0xa
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 130


 4185 06c7 EE060000 		.4byte	.LASF78
 4186 06cb 01       		.byte	0x1
 4187 06cc FF09     		.2byte	0x9ff
 4188 06ce 00000000 		.4byte	.LFB33
 4189 06d2 4C000000 		.4byte	.LFE33-.LFB33
 4190 06d6 01       		.uleb128 0x1
 4191 06d7 9C       		.byte	0x9c
 4192 06d8 EC060000 		.4byte	0x6ec
 4193 06dc 0B       		.uleb128 0xb
 4194 06dd D4050000 		.4byte	.LASF79
 4195 06e1 01       		.byte	0x1
 4196 06e2 FF09     		.2byte	0x9ff
 4197 06e4 83000000 		.4byte	0x83
 4198 06e8 02       		.uleb128 0x2
 4199 06e9 91       		.byte	0x91
 4200 06ea 74       		.sleb128 -12
 4201 06eb 00       		.byte	0
 4202 06ec 0A       		.uleb128 0xa
 4203 06ed 65060000 		.4byte	.LASF80
 4204 06f1 01       		.byte	0x1
 4205 06f2 160A     		.2byte	0xa16
 4206 06f4 00000000 		.4byte	.LFB34
 4207 06f8 28000000 		.4byte	.LFE34-.LFB34
 4208 06fc 01       		.uleb128 0x1
 4209 06fd 9C       		.byte	0x9c
 4210 06fe 12070000 		.4byte	0x712
 4211 0702 0B       		.uleb128 0xb
 4212 0703 F3070000 		.4byte	.LASF81
 4213 0707 01       		.byte	0x1
 4214 0708 160A     		.2byte	0xa16
 4215 070a 77000000 		.4byte	0x77
 4216 070e 02       		.uleb128 0x2
 4217 070f 91       		.byte	0x91
 4218 0710 76       		.sleb128 -10
 4219 0711 00       		.byte	0
 4220 0712 0A       		.uleb128 0xa
 4221 0713 1F010000 		.4byte	.LASF82
 4222 0717 01       		.byte	0x1
 4223 0718 240A     		.2byte	0xa24
 4224 071a 00000000 		.4byte	.LFB35
 4225 071e 84000000 		.4byte	.LFE35-.LFB35
 4226 0722 01       		.uleb128 0x1
 4227 0723 9C       		.byte	0x9c
 4228 0724 38070000 		.4byte	0x738
 4229 0728 0B       		.uleb128 0xb
 4230 0729 1A010000 		.4byte	.LASF34
 4231 072d 01       		.byte	0x1
 4232 072e 240A     		.2byte	0xa24
 4233 0730 83000000 		.4byte	0x83
 4234 0734 02       		.uleb128 0x2
 4235 0735 91       		.byte	0x91
 4236 0736 74       		.sleb128 -12
 4237 0737 00       		.byte	0
 4238 0738 12       		.uleb128 0x12
 4239 0739 C8040000 		.4byte	.LASF83
 4240 073d 01       		.byte	0x1
 4241 073e 440A     		.2byte	0xa44
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 131


 4242 0740 00000000 		.4byte	.LFB36
 4243 0744 24000000 		.4byte	.LFE36-.LFB36
 4244 0748 01       		.uleb128 0x1
 4245 0749 9C       		.byte	0x9c
 4246 074a 0A       		.uleb128 0xa
 4247 074b 10020000 		.4byte	.LASF84
 4248 074f 01       		.byte	0x1
 4249 0750 610A     		.2byte	0xa61
 4250 0752 00000000 		.4byte	.LFB37
 4251 0756 60000000 		.4byte	.LFE37-.LFB37
 4252 075a 01       		.uleb128 0x1
 4253 075b 9C       		.byte	0x9c
 4254 075c 6E070000 		.4byte	0x76e
 4255 0760 13       		.uleb128 0x13
 4256 0761 6900     		.ascii	"i\000"
 4257 0763 01       		.byte	0x1
 4258 0764 630A     		.2byte	0xa63
 4259 0766 83000000 		.4byte	0x83
 4260 076a 02       		.uleb128 0x2
 4261 076b 91       		.byte	0x91
 4262 076c 74       		.sleb128 -12
 4263 076d 00       		.byte	0
 4264 076e 12       		.uleb128 0x12
 4265 076f 88060000 		.4byte	.LASF85
 4266 0773 01       		.byte	0x1
 4267 0774 7F0A     		.2byte	0xa7f
 4268 0776 00000000 		.4byte	.LFB38
 4269 077a 20000000 		.4byte	.LFE38-.LFB38
 4270 077e 01       		.uleb128 0x1
 4271 077f 9C       		.byte	0x9c
 4272 0780 0F       		.uleb128 0xf
 4273 0781 75070000 		.4byte	.LASF86
 4274 0785 01       		.byte	0x1
 4275 0786 900A     		.2byte	0xa90
 4276 0788 00000000 		.4byte	.LFB39
 4277 078c 1C000000 		.4byte	.LFE39-.LFB39
 4278 0790 01       		.uleb128 0x1
 4279 0791 9C       		.byte	0x9c
 4280 0792 0F       		.uleb128 0xf
 4281 0793 D9000000 		.4byte	.LASF87
 4282 0797 01       		.byte	0x1
 4283 0798 A00A     		.2byte	0xaa0
 4284 079a 00000000 		.4byte	.LFB40
 4285 079e 1C000000 		.4byte	.LFE40-.LFB40
 4286 07a2 01       		.uleb128 0x1
 4287 07a3 9C       		.byte	0x9c
 4288 07a4 0F       		.uleb128 0xf
 4289 07a5 0E070000 		.4byte	.LASF88
 4290 07a9 01       		.byte	0x1
 4291 07aa B00A     		.2byte	0xab0
 4292 07ac 00000000 		.4byte	.LFB41
 4293 07b0 1C000000 		.4byte	.LFE41-.LFB41
 4294 07b4 01       		.uleb128 0x1
 4295 07b5 9C       		.byte	0x9c
 4296 07b6 0D       		.uleb128 0xd
 4297 07b7 07080000 		.4byte	.LASF89
 4298 07bb 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 132


 4299 07bc C10A     		.2byte	0xac1
 4300 07be 00000000 		.4byte	.LFB42
 4301 07c2 20000000 		.4byte	.LFE42-.LFB42
 4302 07c6 01       		.uleb128 0x1
 4303 07c7 9C       		.byte	0x9c
 4304 07c8 DC070000 		.4byte	0x7dc
 4305 07cc 0B       		.uleb128 0xb
 4306 07cd 1E020000 		.4byte	.LASF69
 4307 07d1 01       		.byte	0x1
 4308 07d2 C10A     		.2byte	0xac1
 4309 07d4 83000000 		.4byte	0x83
 4310 07d8 02       		.uleb128 0x2
 4311 07d9 91       		.byte	0x91
 4312 07da 74       		.sleb128 -12
 4313 07db 00       		.byte	0
 4314 07dc 11       		.uleb128 0x11
 4315 07dd 3A010000 		.4byte	.LASF91
 4316 07e1 01       		.byte	0x1
 4317 07e2 D10A     		.2byte	0xad1
 4318 07e4 83000000 		.4byte	0x83
 4319 07e8 00000000 		.4byte	.LFB43
 4320 07ec 18000000 		.4byte	.LFE43-.LFB43
 4321 07f0 01       		.uleb128 0x1
 4322 07f1 9C       		.byte	0x9c
 4323 07f2 11       		.uleb128 0x11
 4324 07f3 6D050000 		.4byte	.LASF92
 4325 07f7 01       		.byte	0x1
 4326 07f8 E10A     		.2byte	0xae1
 4327 07fa 83000000 		.4byte	0x83
 4328 07fe 00000000 		.4byte	.LFB44
 4329 0802 18000000 		.4byte	.LFE44-.LFB44
 4330 0806 01       		.uleb128 0x1
 4331 0807 9C       		.byte	0x9c
 4332 0808 0D       		.uleb128 0xd
 4333 0809 EB020000 		.4byte	.LASF93
 4334 080d 01       		.byte	0x1
 4335 080e 010B     		.2byte	0xb01
 4336 0810 00000000 		.4byte	.LFB45
 4337 0814 34000000 		.4byte	.LFE45-.LFB45
 4338 0818 01       		.uleb128 0x1
 4339 0819 9C       		.byte	0x9c
 4340 081a 2E080000 		.4byte	0x82e
 4341 081e 0B       		.uleb128 0xb
 4342 081f 24020000 		.4byte	.LASF94
 4343 0823 01       		.byte	0x1
 4344 0824 010B     		.2byte	0xb01
 4345 0826 83000000 		.4byte	0x83
 4346 082a 02       		.uleb128 0x2
 4347 082b 91       		.byte	0x91
 4348 082c 74       		.sleb128 -12
 4349 082d 00       		.byte	0
 4350 082e 11       		.uleb128 0x11
 4351 082f F6060000 		.4byte	.LASF95
 4352 0833 01       		.byte	0x1
 4353 0834 1A0B     		.2byte	0xb1a
 4354 0836 83000000 		.4byte	0x83
 4355 083a 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 133


 4356 083e 18000000 		.4byte	.LFE46-.LFB46
 4357 0842 01       		.uleb128 0x1
 4358 0843 9C       		.byte	0x9c
 4359 0844 11       		.uleb128 0x11
 4360 0845 3E020000 		.4byte	.LASF96
 4361 0849 01       		.byte	0x1
 4362 084a 310B     		.2byte	0xb31
 4363 084c 83000000 		.4byte	0x83
 4364 0850 00000000 		.4byte	.LFB47
 4365 0854 18000000 		.4byte	.LFE47-.LFB47
 4366 0858 01       		.uleb128 0x1
 4367 0859 9C       		.byte	0x9c
 4368 085a 0F       		.uleb128 0xf
 4369 085b 61020000 		.4byte	.LASF97
 4370 085f 01       		.byte	0x1
 4371 0860 3E0B     		.2byte	0xb3e
 4372 0862 00000000 		.4byte	.LFB48
 4373 0866 14000000 		.4byte	.LFE48-.LFB48
 4374 086a 01       		.uleb128 0x1
 4375 086b 9C       		.byte	0x9c
 4376 086c 10       		.uleb128 0x10
 4377 086d AF060000 		.4byte	.LASF98
 4378 0871 01       		.byte	0x1
 4379 0872 610B     		.2byte	0xb61
 4380 0874 F3000000 		.4byte	0xf3
 4381 0878 00000000 		.4byte	.LFB49
 4382 087c 2C000000 		.4byte	.LFE49-.LFB49
 4383 0880 01       		.uleb128 0x1
 4384 0881 9C       		.byte	0x9c
 4385 0882 B4080000 		.4byte	0x8b4
 4386 0886 0B       		.uleb128 0xb
 4387 0887 12030000 		.4byte	.LASF59
 4388 088b 01       		.byte	0x1
 4389 088c 610B     		.2byte	0xb61
 4390 088e 83000000 		.4byte	0x83
 4391 0892 02       		.uleb128 0x2
 4392 0893 91       		.byte	0x91
 4393 0894 6C       		.sleb128 -20
 4394 0895 0B       		.uleb128 0xb
 4395 0896 53050000 		.4byte	.LASF99
 4396 089a 01       		.byte	0x1
 4397 089b 610B     		.2byte	0xb61
 4398 089d F3000000 		.4byte	0xf3
 4399 08a1 02       		.uleb128 0x2
 4400 08a2 91       		.byte	0x91
 4401 08a3 68       		.sleb128 -24
 4402 08a4 0C       		.uleb128 0xc
 4403 08a5 5A000000 		.4byte	.LASF100
 4404 08a9 01       		.byte	0x1
 4405 08aa 630B     		.2byte	0xb63
 4406 08ac F3000000 		.4byte	0xf3
 4407 08b0 02       		.uleb128 0x2
 4408 08b1 91       		.byte	0x91
 4409 08b2 74       		.sleb128 -12
 4410 08b3 00       		.byte	0
 4411 08b4 10       		.uleb128 0x10
 4412 08b5 63010000 		.4byte	.LASF101
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 134


 4413 08b9 01       		.byte	0x1
 4414 08ba 790B     		.2byte	0xb79
 4415 08bc F3000000 		.4byte	0xf3
 4416 08c0 00000000 		.4byte	.LFB50
 4417 08c4 1C000000 		.4byte	.LFE50-.LFB50
 4418 08c8 01       		.uleb128 0x1
 4419 08c9 9C       		.byte	0x9c
 4420 08ca DE080000 		.4byte	0x8de
 4421 08ce 0B       		.uleb128 0xb
 4422 08cf 12030000 		.4byte	.LASF59
 4423 08d3 01       		.byte	0x1
 4424 08d4 790B     		.2byte	0xb79
 4425 08d6 83000000 		.4byte	0x83
 4426 08da 02       		.uleb128 0x2
 4427 08db 91       		.byte	0x91
 4428 08dc 74       		.sleb128 -12
 4429 08dd 00       		.byte	0
 4430 08de 14       		.uleb128 0x14
 4431 08df 1A080000 		.4byte	.LASF122
 4432 08e3 01       		.byte	0x1
 4433 08e4 860B     		.2byte	0xb86
 4434 08e6 00000000 		.4byte	.LFB51
 4435 08ea 44000000 		.4byte	.LFE51-.LFB51
 4436 08ee 01       		.uleb128 0x1
 4437 08ef 9C       		.byte	0x9c
 4438 08f0 02090000 		.4byte	0x902
 4439 08f4 13       		.uleb128 0x13
 4440 08f5 6900     		.ascii	"i\000"
 4441 08f7 01       		.byte	0x1
 4442 08f8 880B     		.2byte	0xb88
 4443 08fa 83000000 		.4byte	0x83
 4444 08fe 02       		.uleb128 0x2
 4445 08ff 91       		.byte	0x91
 4446 0900 74       		.sleb128 -12
 4447 0901 00       		.byte	0
 4448 0902 0D       		.uleb128 0xd
 4449 0903 30020000 		.4byte	.LASF102
 4450 0907 01       		.byte	0x1
 4451 0908 A60B     		.2byte	0xba6
 4452 090a 00000000 		.4byte	.LFB52
 4453 090e C0000000 		.4byte	.LFE52-.LFB52
 4454 0912 01       		.uleb128 0x1
 4455 0913 9C       		.byte	0x9c
 4456 0914 28090000 		.4byte	0x928
 4457 0918 0B       		.uleb128 0xb
 4458 0919 E5060000 		.4byte	.LASF103
 4459 091d 01       		.byte	0x1
 4460 091e A60B     		.2byte	0xba6
 4461 0920 28090000 		.4byte	0x928
 4462 0924 02       		.uleb128 0x2
 4463 0925 91       		.byte	0x91
 4464 0926 74       		.sleb128 -12
 4465 0927 00       		.byte	0
 4466 0928 06       		.uleb128 0x6
 4467 0929 04       		.byte	0x4
 4468 092a 83000000 		.4byte	0x83
 4469 092e 0D       		.uleb128 0xd
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 135


 4470 092f F7050000 		.4byte	.LASF104
 4471 0933 01       		.byte	0x1
 4472 0934 D20B     		.2byte	0xbd2
 4473 0936 00000000 		.4byte	.LFB53
 4474 093a 38000000 		.4byte	.LFE53-.LFB53
 4475 093e 01       		.uleb128 0x1
 4476 093f 9C       		.byte	0x9c
 4477 0940 63090000 		.4byte	0x963
 4478 0944 0B       		.uleb128 0xb
 4479 0945 E4040000 		.4byte	.LASF105
 4480 0949 01       		.byte	0x1
 4481 094a D20B     		.2byte	0xbd2
 4482 094c 83000000 		.4byte	0x83
 4483 0950 02       		.uleb128 0x2
 4484 0951 91       		.byte	0x91
 4485 0952 6C       		.sleb128 -20
 4486 0953 0C       		.uleb128 0xc
 4487 0954 E4020000 		.4byte	.LASF106
 4488 0958 01       		.byte	0x1
 4489 0959 D40B     		.2byte	0xbd4
 4490 095b 83000000 		.4byte	0x83
 4491 095f 02       		.uleb128 0x2
 4492 0960 91       		.byte	0x91
 4493 0961 74       		.sleb128 -12
 4494 0962 00       		.byte	0
 4495 0963 0D       		.uleb128 0xd
 4496 0964 7C040000 		.4byte	.LASF107
 4497 0968 01       		.byte	0x1
 4498 0969 ED0B     		.2byte	0xbed
 4499 096b 00000000 		.4byte	.LFB54
 4500 096f 38000000 		.4byte	.LFE54-.LFB54
 4501 0973 01       		.uleb128 0x1
 4502 0974 9C       		.byte	0x9c
 4503 0975 98090000 		.4byte	0x998
 4504 0979 0B       		.uleb128 0xb
 4505 097a E4040000 		.4byte	.LASF105
 4506 097e 01       		.byte	0x1
 4507 097f ED0B     		.2byte	0xbed
 4508 0981 83000000 		.4byte	0x83
 4509 0985 02       		.uleb128 0x2
 4510 0986 91       		.byte	0x91
 4511 0987 6C       		.sleb128 -20
 4512 0988 0C       		.uleb128 0xc
 4513 0989 E4020000 		.4byte	.LASF106
 4514 098d 01       		.byte	0x1
 4515 098e EF0B     		.2byte	0xbef
 4516 0990 83000000 		.4byte	0x83
 4517 0994 02       		.uleb128 0x2
 4518 0995 91       		.byte	0x91
 4519 0996 74       		.sleb128 -12
 4520 0997 00       		.byte	0
 4521 0998 0D       		.uleb128 0xd
 4522 0999 57070000 		.4byte	.LASF108
 4523 099d 01       		.byte	0x1
 4524 099e 080C     		.2byte	0xc08
 4525 09a0 00000000 		.4byte	.LFB55
 4526 09a4 38000000 		.4byte	.LFE55-.LFB55
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 136


 4527 09a8 01       		.uleb128 0x1
 4528 09a9 9C       		.byte	0x9c
 4529 09aa CD090000 		.4byte	0x9cd
 4530 09ae 0B       		.uleb128 0xb
 4531 09af E4040000 		.4byte	.LASF105
 4532 09b3 01       		.byte	0x1
 4533 09b4 080C     		.2byte	0xc08
 4534 09b6 83000000 		.4byte	0x83
 4535 09ba 02       		.uleb128 0x2
 4536 09bb 91       		.byte	0x91
 4537 09bc 6C       		.sleb128 -20
 4538 09bd 0C       		.uleb128 0xc
 4539 09be E4020000 		.4byte	.LASF106
 4540 09c2 01       		.byte	0x1
 4541 09c3 0A0C     		.2byte	0xc0a
 4542 09c5 83000000 		.4byte	0x83
 4543 09c9 02       		.uleb128 0x2
 4544 09ca 91       		.byte	0x91
 4545 09cb 74       		.sleb128 -12
 4546 09cc 00       		.byte	0
 4547 09cd 0A       		.uleb128 0xa
 4548 09ce F4040000 		.4byte	.LASF109
 4549 09d2 01       		.byte	0x1
 4550 09d3 250C     		.2byte	0xc25
 4551 09d5 00000000 		.4byte	.LFB56
 4552 09d9 A0000000 		.4byte	.LFE56-.LFB56
 4553 09dd 01       		.uleb128 0x1
 4554 09de 9C       		.byte	0x9c
 4555 09df 110A0000 		.4byte	0xa11
 4556 09e3 0B       		.uleb128 0xb
 4557 09e4 B9000000 		.4byte	.LASF110
 4558 09e8 01       		.byte	0x1
 4559 09e9 250C     		.2byte	0xc25
 4560 09eb 83000000 		.4byte	0x83
 4561 09ef 02       		.uleb128 0x2
 4562 09f0 91       		.byte	0x91
 4563 09f1 6C       		.sleb128 -20
 4564 09f2 0B       		.uleb128 0xb
 4565 09f3 E4040000 		.4byte	.LASF105
 4566 09f7 01       		.byte	0x1
 4567 09f8 250C     		.2byte	0xc25
 4568 09fa 83000000 		.4byte	0x83
 4569 09fe 02       		.uleb128 0x2
 4570 09ff 91       		.byte	0x91
 4571 0a00 68       		.sleb128 -24
 4572 0a01 0C       		.uleb128 0xc
 4573 0a02 E4020000 		.4byte	.LASF106
 4574 0a06 01       		.byte	0x1
 4575 0a07 270C     		.2byte	0xc27
 4576 0a09 83000000 		.4byte	0x83
 4577 0a0d 02       		.uleb128 0x2
 4578 0a0e 91       		.byte	0x91
 4579 0a0f 74       		.sleb128 -12
 4580 0a10 00       		.byte	0
 4581 0a11 15       		.uleb128 0x15
 4582 0a12 F3000000 		.4byte	0xf3
 4583 0a16 210A0000 		.4byte	0xa21
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 137


 4584 0a1a 16       		.uleb128 0x16
 4585 0a1b EC000000 		.4byte	0xec
 4586 0a1f 04       		.byte	0x4
 4587 0a20 00       		.byte	0
 4588 0a21 17       		.uleb128 0x17
 4589 0a22 C4060000 		.4byte	.LASF111
 4590 0a26 01       		.byte	0x1
 4591 0a27 22       		.byte	0x22
 4592 0a28 110A0000 		.4byte	0xa11
 4593 0a2c 05       		.uleb128 0x5
 4594 0a2d 03       		.byte	0x3
 4595 0a2e 00000000 		.4byte	CySysTickCallbacks
 4596 0a32 18       		.uleb128 0x18
 4597 0a33 7F050000 		.4byte	.LASF112
 4598 0a37 01       		.byte	0x1
 4599 0a38 1B       		.byte	0x1b
 4600 0a39 83000000 		.4byte	0x83
 4601 0a3d 05       		.uleb128 0x5
 4602 0a3e 03       		.byte	0x3
 4603 0a3f 00000000 		.4byte	cydelayFreqHz
 4604 0a43 18       		.uleb128 0x18
 4605 0a44 7E010000 		.4byte	.LASF113
 4606 0a48 01       		.byte	0x1
 4607 0a49 1C       		.byte	0x1c
 4608 0a4a 83000000 		.4byte	0x83
 4609 0a4e 05       		.uleb128 0x5
 4610 0a4f 03       		.byte	0x3
 4611 0a50 00000000 		.4byte	cydelayFreqKhz
 4612 0a54 18       		.uleb128 0x18
 4613 0a55 38070000 		.4byte	.LASF114
 4614 0a59 01       		.byte	0x1
 4615 0a5a 1D       		.byte	0x1d
 4616 0a5b 6B000000 		.4byte	0x6b
 4617 0a5f 05       		.uleb128 0x5
 4618 0a60 03       		.byte	0x3
 4619 0a61 00000000 		.4byte	cydelayFreqMhz
 4620 0a65 18       		.uleb128 0x18
 4621 0a66 03020000 		.4byte	.LASF115
 4622 0a6a 01       		.byte	0x1
 4623 0a6b 1E       		.byte	0x1e
 4624 0a6c 83000000 		.4byte	0x83
 4625 0a70 05       		.uleb128 0x5
 4626 0a71 03       		.byte	0x3
 4627 0a72 00000000 		.4byte	cydelay32kMs
 4628 0a76 18       		.uleb128 0x18
 4629 0a77 9B000000 		.4byte	.LASF116
 4630 0a7b 01       		.byte	0x1
 4631 0a7c 36       		.byte	0x36
 4632 0a7d 83000000 		.4byte	0x83
 4633 0a81 05       		.uleb128 0x5
 4634 0a82 03       		.byte	0x3
 4635 0a83 00000000 		.4byte	CySysTickInitVar
 4636 0a87 15       		.uleb128 0x15
 4637 0a88 970A0000 		.4byte	0xa97
 4638 0a8c 970A0000 		.4byte	0xa97
 4639 0a90 16       		.uleb128 0x16
 4640 0a91 EC000000 		.4byte	0xec
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 138


 4641 0a95 2D       		.byte	0x2d
 4642 0a96 00       		.byte	0
 4643 0a97 19       		.uleb128 0x19
 4644 0a98 6B000000 		.4byte	0x6b
 4645 0a9c 18       		.uleb128 0x18
 4646 0a9d 5C050000 		.4byte	.LASF117
 4647 0aa1 01       		.byte	0x1
 4648 0aa2 3B       		.byte	0x3b
 4649 0aa3 AD0A0000 		.4byte	0xaad
 4650 0aa7 05       		.uleb128 0x5
 4651 0aa8 03       		.byte	0x3
 4652 0aa9 00000000 		.4byte	cyImoFreqMhz2Reg
 4653 0aad 19       		.uleb128 0x19
 4654 0aae 870A0000 		.4byte	0xa87
 4655 0ab2 18       		.uleb128 0x18
 4656 0ab3 40000000 		.4byte	.LASF118
 4657 0ab7 01       		.byte	0x1
 4658 0ab8 5B       		.byte	0x5b
 4659 0ab9 83000000 		.4byte	0x83
 4660 0abd 05       		.uleb128 0x5
 4661 0abe 03       		.byte	0x3
 4662 0abf 00000000 		.4byte	CySysClkPumpConfig
 4663 0ac3 00       		.byte	0
 4664              		.section	.debug_abbrev,"",%progbits
 4665              	.Ldebug_abbrev0:
 4666 0000 01       		.uleb128 0x1
 4667 0001 11       		.uleb128 0x11
 4668 0002 01       		.byte	0x1
 4669 0003 25       		.uleb128 0x25
 4670 0004 0E       		.uleb128 0xe
 4671 0005 13       		.uleb128 0x13
 4672 0006 0B       		.uleb128 0xb
 4673 0007 03       		.uleb128 0x3
 4674 0008 0E       		.uleb128 0xe
 4675 0009 1B       		.uleb128 0x1b
 4676 000a 0E       		.uleb128 0xe
 4677 000b 55       		.uleb128 0x55
 4678 000c 17       		.uleb128 0x17
 4679 000d 11       		.uleb128 0x11
 4680 000e 01       		.uleb128 0x1
 4681 000f 10       		.uleb128 0x10
 4682 0010 17       		.uleb128 0x17
 4683 0011 00       		.byte	0
 4684 0012 00       		.byte	0
 4685 0013 02       		.uleb128 0x2
 4686 0014 24       		.uleb128 0x24
 4687 0015 00       		.byte	0
 4688 0016 0B       		.uleb128 0xb
 4689 0017 0B       		.uleb128 0xb
 4690 0018 3E       		.uleb128 0x3e
 4691 0019 0B       		.uleb128 0xb
 4692 001a 03       		.uleb128 0x3
 4693 001b 0E       		.uleb128 0xe
 4694 001c 00       		.byte	0
 4695 001d 00       		.byte	0
 4696 001e 03       		.uleb128 0x3
 4697 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 139


 4698 0020 00       		.byte	0
 4699 0021 0B       		.uleb128 0xb
 4700 0022 0B       		.uleb128 0xb
 4701 0023 3E       		.uleb128 0x3e
 4702 0024 0B       		.uleb128 0xb
 4703 0025 03       		.uleb128 0x3
 4704 0026 08       		.uleb128 0x8
 4705 0027 00       		.byte	0
 4706 0028 00       		.byte	0
 4707 0029 04       		.uleb128 0x4
 4708 002a 16       		.uleb128 0x16
 4709 002b 00       		.byte	0
 4710 002c 03       		.uleb128 0x3
 4711 002d 0E       		.uleb128 0xe
 4712 002e 3A       		.uleb128 0x3a
 4713 002f 0B       		.uleb128 0xb
 4714 0030 3B       		.uleb128 0x3b
 4715 0031 05       		.uleb128 0x5
 4716 0032 49       		.uleb128 0x49
 4717 0033 13       		.uleb128 0x13
 4718 0034 00       		.byte	0
 4719 0035 00       		.byte	0
 4720 0036 05       		.uleb128 0x5
 4721 0037 35       		.uleb128 0x35
 4722 0038 00       		.byte	0
 4723 0039 49       		.uleb128 0x49
 4724 003a 13       		.uleb128 0x13
 4725 003b 00       		.byte	0
 4726 003c 00       		.byte	0
 4727 003d 06       		.uleb128 0x6
 4728 003e 0F       		.uleb128 0xf
 4729 003f 00       		.byte	0
 4730 0040 0B       		.uleb128 0xb
 4731 0041 0B       		.uleb128 0xb
 4732 0042 49       		.uleb128 0x49
 4733 0043 13       		.uleb128 0x13
 4734 0044 00       		.byte	0
 4735 0045 00       		.byte	0
 4736 0046 07       		.uleb128 0x7
 4737 0047 15       		.uleb128 0x15
 4738 0048 00       		.byte	0
 4739 0049 27       		.uleb128 0x27
 4740 004a 19       		.uleb128 0x19
 4741 004b 00       		.byte	0
 4742 004c 00       		.byte	0
 4743 004d 08       		.uleb128 0x8
 4744 004e 16       		.uleb128 0x16
 4745 004f 00       		.byte	0
 4746 0050 03       		.uleb128 0x3
 4747 0051 0E       		.uleb128 0xe
 4748 0052 3A       		.uleb128 0x3a
 4749 0053 0B       		.uleb128 0xb
 4750 0054 3B       		.uleb128 0x3b
 4751 0055 0B       		.uleb128 0xb
 4752 0056 49       		.uleb128 0x49
 4753 0057 13       		.uleb128 0x13
 4754 0058 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 140


 4755 0059 00       		.byte	0
 4756 005a 09       		.uleb128 0x9
 4757 005b 2E       		.uleb128 0x2e
 4758 005c 00       		.byte	0
 4759 005d 3F       		.uleb128 0x3f
 4760 005e 19       		.uleb128 0x19
 4761 005f 03       		.uleb128 0x3
 4762 0060 0E       		.uleb128 0xe
 4763 0061 3A       		.uleb128 0x3a
 4764 0062 0B       		.uleb128 0xb
 4765 0063 3B       		.uleb128 0x3b
 4766 0064 0B       		.uleb128 0xb
 4767 0065 27       		.uleb128 0x27
 4768 0066 19       		.uleb128 0x19
 4769 0067 11       		.uleb128 0x11
 4770 0068 01       		.uleb128 0x1
 4771 0069 12       		.uleb128 0x12
 4772 006a 06       		.uleb128 0x6
 4773 006b 40       		.uleb128 0x40
 4774 006c 18       		.uleb128 0x18
 4775 006d 9742     		.uleb128 0x2117
 4776 006f 19       		.uleb128 0x19
 4777 0070 00       		.byte	0
 4778 0071 00       		.byte	0
 4779 0072 0A       		.uleb128 0xa
 4780 0073 2E       		.uleb128 0x2e
 4781 0074 01       		.byte	0x1
 4782 0075 3F       		.uleb128 0x3f
 4783 0076 19       		.uleb128 0x19
 4784 0077 03       		.uleb128 0x3
 4785 0078 0E       		.uleb128 0xe
 4786 0079 3A       		.uleb128 0x3a
 4787 007a 0B       		.uleb128 0xb
 4788 007b 3B       		.uleb128 0x3b
 4789 007c 05       		.uleb128 0x5
 4790 007d 27       		.uleb128 0x27
 4791 007e 19       		.uleb128 0x19
 4792 007f 11       		.uleb128 0x11
 4793 0080 01       		.uleb128 0x1
 4794 0081 12       		.uleb128 0x12
 4795 0082 06       		.uleb128 0x6
 4796 0083 40       		.uleb128 0x40
 4797 0084 18       		.uleb128 0x18
 4798 0085 9642     		.uleb128 0x2116
 4799 0087 19       		.uleb128 0x19
 4800 0088 01       		.uleb128 0x1
 4801 0089 13       		.uleb128 0x13
 4802 008a 00       		.byte	0
 4803 008b 00       		.byte	0
 4804 008c 0B       		.uleb128 0xb
 4805 008d 05       		.uleb128 0x5
 4806 008e 00       		.byte	0
 4807 008f 03       		.uleb128 0x3
 4808 0090 0E       		.uleb128 0xe
 4809 0091 3A       		.uleb128 0x3a
 4810 0092 0B       		.uleb128 0xb
 4811 0093 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 141


 4812 0094 05       		.uleb128 0x5
 4813 0095 49       		.uleb128 0x49
 4814 0096 13       		.uleb128 0x13
 4815 0097 02       		.uleb128 0x2
 4816 0098 18       		.uleb128 0x18
 4817 0099 00       		.byte	0
 4818 009a 00       		.byte	0
 4819 009b 0C       		.uleb128 0xc
 4820 009c 34       		.uleb128 0x34
 4821 009d 00       		.byte	0
 4822 009e 03       		.uleb128 0x3
 4823 009f 0E       		.uleb128 0xe
 4824 00a0 3A       		.uleb128 0x3a
 4825 00a1 0B       		.uleb128 0xb
 4826 00a2 3B       		.uleb128 0x3b
 4827 00a3 05       		.uleb128 0x5
 4828 00a4 49       		.uleb128 0x49
 4829 00a5 13       		.uleb128 0x13
 4830 00a6 02       		.uleb128 0x2
 4831 00a7 18       		.uleb128 0x18
 4832 00a8 00       		.byte	0
 4833 00a9 00       		.byte	0
 4834 00aa 0D       		.uleb128 0xd
 4835 00ab 2E       		.uleb128 0x2e
 4836 00ac 01       		.byte	0x1
 4837 00ad 3F       		.uleb128 0x3f
 4838 00ae 19       		.uleb128 0x19
 4839 00af 03       		.uleb128 0x3
 4840 00b0 0E       		.uleb128 0xe
 4841 00b1 3A       		.uleb128 0x3a
 4842 00b2 0B       		.uleb128 0xb
 4843 00b3 3B       		.uleb128 0x3b
 4844 00b4 05       		.uleb128 0x5
 4845 00b5 27       		.uleb128 0x27
 4846 00b6 19       		.uleb128 0x19
 4847 00b7 11       		.uleb128 0x11
 4848 00b8 01       		.uleb128 0x1
 4849 00b9 12       		.uleb128 0x12
 4850 00ba 06       		.uleb128 0x6
 4851 00bb 40       		.uleb128 0x40
 4852 00bc 18       		.uleb128 0x18
 4853 00bd 9742     		.uleb128 0x2117
 4854 00bf 19       		.uleb128 0x19
 4855 00c0 01       		.uleb128 0x1
 4856 00c1 13       		.uleb128 0x13
 4857 00c2 00       		.byte	0
 4858 00c3 00       		.byte	0
 4859 00c4 0E       		.uleb128 0xe
 4860 00c5 2E       		.uleb128 0x2e
 4861 00c6 01       		.byte	0x1
 4862 00c7 3F       		.uleb128 0x3f
 4863 00c8 19       		.uleb128 0x19
 4864 00c9 03       		.uleb128 0x3
 4865 00ca 0E       		.uleb128 0xe
 4866 00cb 3A       		.uleb128 0x3a
 4867 00cc 0B       		.uleb128 0xb
 4868 00cd 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 142


 4869 00ce 05       		.uleb128 0x5
 4870 00cf 27       		.uleb128 0x27
 4871 00d0 19       		.uleb128 0x19
 4872 00d1 49       		.uleb128 0x49
 4873 00d2 13       		.uleb128 0x13
 4874 00d3 11       		.uleb128 0x11
 4875 00d4 01       		.uleb128 0x1
 4876 00d5 12       		.uleb128 0x12
 4877 00d6 06       		.uleb128 0x6
 4878 00d7 40       		.uleb128 0x40
 4879 00d8 18       		.uleb128 0x18
 4880 00d9 9642     		.uleb128 0x2116
 4881 00db 19       		.uleb128 0x19
 4882 00dc 01       		.uleb128 0x1
 4883 00dd 13       		.uleb128 0x13
 4884 00de 00       		.byte	0
 4885 00df 00       		.byte	0
 4886 00e0 0F       		.uleb128 0xf
 4887 00e1 2E       		.uleb128 0x2e
 4888 00e2 00       		.byte	0
 4889 00e3 3F       		.uleb128 0x3f
 4890 00e4 19       		.uleb128 0x19
 4891 00e5 03       		.uleb128 0x3
 4892 00e6 0E       		.uleb128 0xe
 4893 00e7 3A       		.uleb128 0x3a
 4894 00e8 0B       		.uleb128 0xb
 4895 00e9 3B       		.uleb128 0x3b
 4896 00ea 05       		.uleb128 0x5
 4897 00eb 27       		.uleb128 0x27
 4898 00ec 19       		.uleb128 0x19
 4899 00ed 11       		.uleb128 0x11
 4900 00ee 01       		.uleb128 0x1
 4901 00ef 12       		.uleb128 0x12
 4902 00f0 06       		.uleb128 0x6
 4903 00f1 40       		.uleb128 0x40
 4904 00f2 18       		.uleb128 0x18
 4905 00f3 9742     		.uleb128 0x2117
 4906 00f5 19       		.uleb128 0x19
 4907 00f6 00       		.byte	0
 4908 00f7 00       		.byte	0
 4909 00f8 10       		.uleb128 0x10
 4910 00f9 2E       		.uleb128 0x2e
 4911 00fa 01       		.byte	0x1
 4912 00fb 3F       		.uleb128 0x3f
 4913 00fc 19       		.uleb128 0x19
 4914 00fd 03       		.uleb128 0x3
 4915 00fe 0E       		.uleb128 0xe
 4916 00ff 3A       		.uleb128 0x3a
 4917 0100 0B       		.uleb128 0xb
 4918 0101 3B       		.uleb128 0x3b
 4919 0102 05       		.uleb128 0x5
 4920 0103 27       		.uleb128 0x27
 4921 0104 19       		.uleb128 0x19
 4922 0105 49       		.uleb128 0x49
 4923 0106 13       		.uleb128 0x13
 4924 0107 11       		.uleb128 0x11
 4925 0108 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 143


 4926 0109 12       		.uleb128 0x12
 4927 010a 06       		.uleb128 0x6
 4928 010b 40       		.uleb128 0x40
 4929 010c 18       		.uleb128 0x18
 4930 010d 9742     		.uleb128 0x2117
 4931 010f 19       		.uleb128 0x19
 4932 0110 01       		.uleb128 0x1
 4933 0111 13       		.uleb128 0x13
 4934 0112 00       		.byte	0
 4935 0113 00       		.byte	0
 4936 0114 11       		.uleb128 0x11
 4937 0115 2E       		.uleb128 0x2e
 4938 0116 00       		.byte	0
 4939 0117 3F       		.uleb128 0x3f
 4940 0118 19       		.uleb128 0x19
 4941 0119 03       		.uleb128 0x3
 4942 011a 0E       		.uleb128 0xe
 4943 011b 3A       		.uleb128 0x3a
 4944 011c 0B       		.uleb128 0xb
 4945 011d 3B       		.uleb128 0x3b
 4946 011e 05       		.uleb128 0x5
 4947 011f 27       		.uleb128 0x27
 4948 0120 19       		.uleb128 0x19
 4949 0121 49       		.uleb128 0x49
 4950 0122 13       		.uleb128 0x13
 4951 0123 11       		.uleb128 0x11
 4952 0124 01       		.uleb128 0x1
 4953 0125 12       		.uleb128 0x12
 4954 0126 06       		.uleb128 0x6
 4955 0127 40       		.uleb128 0x40
 4956 0128 18       		.uleb128 0x18
 4957 0129 9742     		.uleb128 0x2117
 4958 012b 19       		.uleb128 0x19
 4959 012c 00       		.byte	0
 4960 012d 00       		.byte	0
 4961 012e 12       		.uleb128 0x12
 4962 012f 2E       		.uleb128 0x2e
 4963 0130 00       		.byte	0
 4964 0131 3F       		.uleb128 0x3f
 4965 0132 19       		.uleb128 0x19
 4966 0133 03       		.uleb128 0x3
 4967 0134 0E       		.uleb128 0xe
 4968 0135 3A       		.uleb128 0x3a
 4969 0136 0B       		.uleb128 0xb
 4970 0137 3B       		.uleb128 0x3b
 4971 0138 05       		.uleb128 0x5
 4972 0139 27       		.uleb128 0x27
 4973 013a 19       		.uleb128 0x19
 4974 013b 11       		.uleb128 0x11
 4975 013c 01       		.uleb128 0x1
 4976 013d 12       		.uleb128 0x12
 4977 013e 06       		.uleb128 0x6
 4978 013f 40       		.uleb128 0x40
 4979 0140 18       		.uleb128 0x18
 4980 0141 9642     		.uleb128 0x2116
 4981 0143 19       		.uleb128 0x19
 4982 0144 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 144


 4983 0145 00       		.byte	0
 4984 0146 13       		.uleb128 0x13
 4985 0147 34       		.uleb128 0x34
 4986 0148 00       		.byte	0
 4987 0149 03       		.uleb128 0x3
 4988 014a 08       		.uleb128 0x8
 4989 014b 3A       		.uleb128 0x3a
 4990 014c 0B       		.uleb128 0xb
 4991 014d 3B       		.uleb128 0x3b
 4992 014e 05       		.uleb128 0x5
 4993 014f 49       		.uleb128 0x49
 4994 0150 13       		.uleb128 0x13
 4995 0151 02       		.uleb128 0x2
 4996 0152 18       		.uleb128 0x18
 4997 0153 00       		.byte	0
 4998 0154 00       		.byte	0
 4999 0155 14       		.uleb128 0x14
 5000 0156 2E       		.uleb128 0x2e
 5001 0157 01       		.byte	0x1
 5002 0158 03       		.uleb128 0x3
 5003 0159 0E       		.uleb128 0xe
 5004 015a 3A       		.uleb128 0x3a
 5005 015b 0B       		.uleb128 0xb
 5006 015c 3B       		.uleb128 0x3b
 5007 015d 05       		.uleb128 0x5
 5008 015e 27       		.uleb128 0x27
 5009 015f 19       		.uleb128 0x19
 5010 0160 11       		.uleb128 0x11
 5011 0161 01       		.uleb128 0x1
 5012 0162 12       		.uleb128 0x12
 5013 0163 06       		.uleb128 0x6
 5014 0164 40       		.uleb128 0x40
 5015 0165 18       		.uleb128 0x18
 5016 0166 9642     		.uleb128 0x2116
 5017 0168 19       		.uleb128 0x19
 5018 0169 01       		.uleb128 0x1
 5019 016a 13       		.uleb128 0x13
 5020 016b 00       		.byte	0
 5021 016c 00       		.byte	0
 5022 016d 15       		.uleb128 0x15
 5023 016e 01       		.uleb128 0x1
 5024 016f 01       		.byte	0x1
 5025 0170 49       		.uleb128 0x49
 5026 0171 13       		.uleb128 0x13
 5027 0172 01       		.uleb128 0x1
 5028 0173 13       		.uleb128 0x13
 5029 0174 00       		.byte	0
 5030 0175 00       		.byte	0
 5031 0176 16       		.uleb128 0x16
 5032 0177 21       		.uleb128 0x21
 5033 0178 00       		.byte	0
 5034 0179 49       		.uleb128 0x49
 5035 017a 13       		.uleb128 0x13
 5036 017b 2F       		.uleb128 0x2f
 5037 017c 0B       		.uleb128 0xb
 5038 017d 00       		.byte	0
 5039 017e 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 145


 5040 017f 17       		.uleb128 0x17
 5041 0180 34       		.uleb128 0x34
 5042 0181 00       		.byte	0
 5043 0182 03       		.uleb128 0x3
 5044 0183 0E       		.uleb128 0xe
 5045 0184 3A       		.uleb128 0x3a
 5046 0185 0B       		.uleb128 0xb
 5047 0186 3B       		.uleb128 0x3b
 5048 0187 0B       		.uleb128 0xb
 5049 0188 49       		.uleb128 0x49
 5050 0189 13       		.uleb128 0x13
 5051 018a 02       		.uleb128 0x2
 5052 018b 18       		.uleb128 0x18
 5053 018c 00       		.byte	0
 5054 018d 00       		.byte	0
 5055 018e 18       		.uleb128 0x18
 5056 018f 34       		.uleb128 0x34
 5057 0190 00       		.byte	0
 5058 0191 03       		.uleb128 0x3
 5059 0192 0E       		.uleb128 0xe
 5060 0193 3A       		.uleb128 0x3a
 5061 0194 0B       		.uleb128 0xb
 5062 0195 3B       		.uleb128 0x3b
 5063 0196 0B       		.uleb128 0xb
 5064 0197 49       		.uleb128 0x49
 5065 0198 13       		.uleb128 0x13
 5066 0199 3F       		.uleb128 0x3f
 5067 019a 19       		.uleb128 0x19
 5068 019b 02       		.uleb128 0x2
 5069 019c 18       		.uleb128 0x18
 5070 019d 00       		.byte	0
 5071 019e 00       		.byte	0
 5072 019f 19       		.uleb128 0x19
 5073 01a0 26       		.uleb128 0x26
 5074 01a1 00       		.byte	0
 5075 01a2 49       		.uleb128 0x49
 5076 01a3 13       		.uleb128 0x13
 5077 01a4 00       		.byte	0
 5078 01a5 00       		.byte	0
 5079 01a6 00       		.byte	0
 5080              		.section	.debug_aranges,"",%progbits
 5081 0000 CC010000 		.4byte	0x1cc
 5082 0004 0200     		.2byte	0x2
 5083 0006 00000000 		.4byte	.Ldebug_info0
 5084 000a 04       		.byte	0x4
 5085 000b 00       		.byte	0
 5086 000c 0000     		.2byte	0
 5087 000e 0000     		.2byte	0
 5088 0010 00000000 		.4byte	.LFB2
 5089 0014 1C000000 		.4byte	.LFE2-.LFB2
 5090 0018 00000000 		.4byte	.LFB3
 5091 001c 1C000000 		.4byte	.LFE3-.LFB3
 5092 0020 00000000 		.4byte	.LFB4
 5093 0024 48000000 		.4byte	.LFE4-.LFB4
 5094 0028 00000000 		.4byte	.LFB5
 5095 002c 50000000 		.4byte	.LFE5-.LFB5
 5096 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 146


 5097 0034 34000000 		.4byte	.LFE6-.LFB6
 5098 0038 00000000 		.4byte	.LFB7
 5099 003c 48000000 		.4byte	.LFE7-.LFB7
 5100 0040 00000000 		.4byte	.LFB8
 5101 0044 EC010000 		.4byte	.LFE8-.LFB8
 5102 0048 00000000 		.4byte	.LFB9
 5103 004c 74000000 		.4byte	.LFE9-.LFB9
 5104 0050 00000000 		.4byte	.LFB10
 5105 0054 30000000 		.4byte	.LFE10-.LFB10
 5106 0058 00000000 		.4byte	.LFB11
 5107 005c 20000000 		.4byte	.LFE11-.LFB11
 5108 0060 00000000 		.4byte	.LFB12
 5109 0064 58000000 		.4byte	.LFE12-.LFB12
 5110 0068 00000000 		.4byte	.LFB13
 5111 006c 64000000 		.4byte	.LFE13-.LFB13
 5112 0070 00000000 		.4byte	.LFB14
 5113 0074 2C000000 		.4byte	.LFE14-.LFB14
 5114 0078 00000000 		.4byte	.LFB15
 5115 007c 18000000 		.4byte	.LFE15-.LFB15
 5116 0080 00000000 		.4byte	.LFB16
 5117 0084 14000000 		.4byte	.LFE16-.LFB16
 5118 0088 00000000 		.4byte	.LFB17
 5119 008c 30000000 		.4byte	.LFE17-.LFB17
 5120 0090 00000000 		.4byte	.LFB18
 5121 0094 24000000 		.4byte	.LFE18-.LFB18
 5122 0098 00000000 		.4byte	.LFB19
 5123 009c 1C000000 		.4byte	.LFE19-.LFB19
 5124 00a0 00000000 		.4byte	.LFB20
 5125 00a4 48000000 		.4byte	.LFE20-.LFB20
 5126 00a8 00000000 		.4byte	.LFB21
 5127 00ac 34000000 		.4byte	.LFE21-.LFB21
 5128 00b0 00000000 		.4byte	.LFB22
 5129 00b4 4C000000 		.4byte	.LFE22-.LFB22
 5130 00b8 00000000 		.4byte	.LFB23
 5131 00bc 36000000 		.4byte	.LFE23-.LFB23
 5132 00c0 00000000 		.4byte	.LFB24
 5133 00c4 A8000000 		.4byte	.LFE24-.LFB24
 5134 00c8 00000000 		.4byte	.LFB25
 5135 00cc 58000000 		.4byte	.LFE25-.LFB25
 5136 00d0 00000000 		.4byte	.LFB26
 5137 00d4 2C000000 		.4byte	.LFE26-.LFB26
 5138 00d8 00000000 		.4byte	.LFB27
 5139 00dc 30000000 		.4byte	.LFE27-.LFB27
 5140 00e0 00000000 		.4byte	.LFB28
 5141 00e4 2C000000 		.4byte	.LFE28-.LFB28
 5142 00e8 00000000 		.4byte	.LFB29
 5143 00ec 2C000000 		.4byte	.LFE29-.LFB29
 5144 00f0 00000000 		.4byte	.LFB30
 5145 00f4 2C000000 		.4byte	.LFE30-.LFB30
 5146 00f8 00000000 		.4byte	.LFB31
 5147 00fc 16000000 		.4byte	.LFE31-.LFB31
 5148 0100 00000000 		.4byte	.LFB32
 5149 0104 24000000 		.4byte	.LFE32-.LFB32
 5150 0108 00000000 		.4byte	.LFB33
 5151 010c 4C000000 		.4byte	.LFE33-.LFB33
 5152 0110 00000000 		.4byte	.LFB34
 5153 0114 28000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 147


 5154 0118 00000000 		.4byte	.LFB35
 5155 011c 84000000 		.4byte	.LFE35-.LFB35
 5156 0120 00000000 		.4byte	.LFB36
 5157 0124 24000000 		.4byte	.LFE36-.LFB36
 5158 0128 00000000 		.4byte	.LFB37
 5159 012c 60000000 		.4byte	.LFE37-.LFB37
 5160 0130 00000000 		.4byte	.LFB38
 5161 0134 20000000 		.4byte	.LFE38-.LFB38
 5162 0138 00000000 		.4byte	.LFB39
 5163 013c 1C000000 		.4byte	.LFE39-.LFB39
 5164 0140 00000000 		.4byte	.LFB40
 5165 0144 1C000000 		.4byte	.LFE40-.LFB40
 5166 0148 00000000 		.4byte	.LFB41
 5167 014c 1C000000 		.4byte	.LFE41-.LFB41
 5168 0150 00000000 		.4byte	.LFB42
 5169 0154 20000000 		.4byte	.LFE42-.LFB42
 5170 0158 00000000 		.4byte	.LFB43
 5171 015c 18000000 		.4byte	.LFE43-.LFB43
 5172 0160 00000000 		.4byte	.LFB44
 5173 0164 18000000 		.4byte	.LFE44-.LFB44
 5174 0168 00000000 		.4byte	.LFB45
 5175 016c 34000000 		.4byte	.LFE45-.LFB45
 5176 0170 00000000 		.4byte	.LFB46
 5177 0174 18000000 		.4byte	.LFE46-.LFB46
 5178 0178 00000000 		.4byte	.LFB47
 5179 017c 18000000 		.4byte	.LFE47-.LFB47
 5180 0180 00000000 		.4byte	.LFB48
 5181 0184 14000000 		.4byte	.LFE48-.LFB48
 5182 0188 00000000 		.4byte	.LFB49
 5183 018c 2C000000 		.4byte	.LFE49-.LFB49
 5184 0190 00000000 		.4byte	.LFB50
 5185 0194 1C000000 		.4byte	.LFE50-.LFB50
 5186 0198 00000000 		.4byte	.LFB51
 5187 019c 44000000 		.4byte	.LFE51-.LFB51
 5188 01a0 00000000 		.4byte	.LFB52
 5189 01a4 C0000000 		.4byte	.LFE52-.LFB52
 5190 01a8 00000000 		.4byte	.LFB53
 5191 01ac 38000000 		.4byte	.LFE53-.LFB53
 5192 01b0 00000000 		.4byte	.LFB54
 5193 01b4 38000000 		.4byte	.LFE54-.LFB54
 5194 01b8 00000000 		.4byte	.LFB55
 5195 01bc 38000000 		.4byte	.LFE55-.LFB55
 5196 01c0 00000000 		.4byte	.LFB56
 5197 01c4 A0000000 		.4byte	.LFE56-.LFB56
 5198 01c8 00000000 		.4byte	0
 5199 01cc 00000000 		.4byte	0
 5200              		.section	.debug_ranges,"",%progbits
 5201              	.Ldebug_ranges0:
 5202 0000 00000000 		.4byte	.LFB2
 5203 0004 1C000000 		.4byte	.LFE2
 5204 0008 00000000 		.4byte	.LFB3
 5205 000c 1C000000 		.4byte	.LFE3
 5206 0010 00000000 		.4byte	.LFB4
 5207 0014 48000000 		.4byte	.LFE4
 5208 0018 00000000 		.4byte	.LFB5
 5209 001c 50000000 		.4byte	.LFE5
 5210 0020 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 148


 5211 0024 34000000 		.4byte	.LFE6
 5212 0028 00000000 		.4byte	.LFB7
 5213 002c 48000000 		.4byte	.LFE7
 5214 0030 00000000 		.4byte	.LFB8
 5215 0034 EC010000 		.4byte	.LFE8
 5216 0038 00000000 		.4byte	.LFB9
 5217 003c 74000000 		.4byte	.LFE9
 5218 0040 00000000 		.4byte	.LFB10
 5219 0044 30000000 		.4byte	.LFE10
 5220 0048 00000000 		.4byte	.LFB11
 5221 004c 20000000 		.4byte	.LFE11
 5222 0050 00000000 		.4byte	.LFB12
 5223 0054 58000000 		.4byte	.LFE12
 5224 0058 00000000 		.4byte	.LFB13
 5225 005c 64000000 		.4byte	.LFE13
 5226 0060 00000000 		.4byte	.LFB14
 5227 0064 2C000000 		.4byte	.LFE14
 5228 0068 00000000 		.4byte	.LFB15
 5229 006c 18000000 		.4byte	.LFE15
 5230 0070 00000000 		.4byte	.LFB16
 5231 0074 14000000 		.4byte	.LFE16
 5232 0078 00000000 		.4byte	.LFB17
 5233 007c 30000000 		.4byte	.LFE17
 5234 0080 00000000 		.4byte	.LFB18
 5235 0084 24000000 		.4byte	.LFE18
 5236 0088 00000000 		.4byte	.LFB19
 5237 008c 1C000000 		.4byte	.LFE19
 5238 0090 00000000 		.4byte	.LFB20
 5239 0094 48000000 		.4byte	.LFE20
 5240 0098 00000000 		.4byte	.LFB21
 5241 009c 34000000 		.4byte	.LFE21
 5242 00a0 00000000 		.4byte	.LFB22
 5243 00a4 4C000000 		.4byte	.LFE22
 5244 00a8 00000000 		.4byte	.LFB23
 5245 00ac 36000000 		.4byte	.LFE23
 5246 00b0 00000000 		.4byte	.LFB24
 5247 00b4 A8000000 		.4byte	.LFE24
 5248 00b8 00000000 		.4byte	.LFB25
 5249 00bc 58000000 		.4byte	.LFE25
 5250 00c0 00000000 		.4byte	.LFB26
 5251 00c4 2C000000 		.4byte	.LFE26
 5252 00c8 00000000 		.4byte	.LFB27
 5253 00cc 30000000 		.4byte	.LFE27
 5254 00d0 00000000 		.4byte	.LFB28
 5255 00d4 2C000000 		.4byte	.LFE28
 5256 00d8 00000000 		.4byte	.LFB29
 5257 00dc 2C000000 		.4byte	.LFE29
 5258 00e0 00000000 		.4byte	.LFB30
 5259 00e4 2C000000 		.4byte	.LFE30
 5260 00e8 00000000 		.4byte	.LFB31
 5261 00ec 16000000 		.4byte	.LFE31
 5262 00f0 00000000 		.4byte	.LFB32
 5263 00f4 24000000 		.4byte	.LFE32
 5264 00f8 00000000 		.4byte	.LFB33
 5265 00fc 4C000000 		.4byte	.LFE33
 5266 0100 00000000 		.4byte	.LFB34
 5267 0104 28000000 		.4byte	.LFE34
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 149


 5268 0108 00000000 		.4byte	.LFB35
 5269 010c 84000000 		.4byte	.LFE35
 5270 0110 00000000 		.4byte	.LFB36
 5271 0114 24000000 		.4byte	.LFE36
 5272 0118 00000000 		.4byte	.LFB37
 5273 011c 60000000 		.4byte	.LFE37
 5274 0120 00000000 		.4byte	.LFB38
 5275 0124 20000000 		.4byte	.LFE38
 5276 0128 00000000 		.4byte	.LFB39
 5277 012c 1C000000 		.4byte	.LFE39
 5278 0130 00000000 		.4byte	.LFB40
 5279 0134 1C000000 		.4byte	.LFE40
 5280 0138 00000000 		.4byte	.LFB41
 5281 013c 1C000000 		.4byte	.LFE41
 5282 0140 00000000 		.4byte	.LFB42
 5283 0144 20000000 		.4byte	.LFE42
 5284 0148 00000000 		.4byte	.LFB43
 5285 014c 18000000 		.4byte	.LFE43
 5286 0150 00000000 		.4byte	.LFB44
 5287 0154 18000000 		.4byte	.LFE44
 5288 0158 00000000 		.4byte	.LFB45
 5289 015c 34000000 		.4byte	.LFE45
 5290 0160 00000000 		.4byte	.LFB46
 5291 0164 18000000 		.4byte	.LFE46
 5292 0168 00000000 		.4byte	.LFB47
 5293 016c 18000000 		.4byte	.LFE47
 5294 0170 00000000 		.4byte	.LFB48
 5295 0174 14000000 		.4byte	.LFE48
 5296 0178 00000000 		.4byte	.LFB49
 5297 017c 2C000000 		.4byte	.LFE49
 5298 0180 00000000 		.4byte	.LFB50
 5299 0184 1C000000 		.4byte	.LFE50
 5300 0188 00000000 		.4byte	.LFB51
 5301 018c 44000000 		.4byte	.LFE51
 5302 0190 00000000 		.4byte	.LFB52
 5303 0194 C0000000 		.4byte	.LFE52
 5304 0198 00000000 		.4byte	.LFB53
 5305 019c 38000000 		.4byte	.LFE53
 5306 01a0 00000000 		.4byte	.LFB54
 5307 01a4 38000000 		.4byte	.LFE54
 5308 01a8 00000000 		.4byte	.LFB55
 5309 01ac 38000000 		.4byte	.LFE55
 5310 01b0 00000000 		.4byte	.LFB56
 5311 01b4 A0000000 		.4byte	.LFE56
 5312 01b8 00000000 		.4byte	0
 5313 01bc 00000000 		.4byte	0
 5314              		.section	.debug_line,"",%progbits
 5315              	.Ldebug_line0:
 5316 0000 78050000 		.section	.debug_str,"MS",%progbits,1
 5316      02004D00 
 5316      00000201 
 5316      FB0E0D00 
 5316      01010101 
 5317              	.LASF62:
 5318 0000 72616D56 		.ascii	"ramVectorTable\000"
 5318      6563746F 
 5318      72546162 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 150


 5318      6C6500
 5319              	.LASF35:
 5320 000f 62675472 		.ascii	"bgTrim4\000"
 5320      696D3400 
 5321              	.LASF10:
 5322 0017 75696E74 		.ascii	"uint16\000"
 5322      313600
 5323              	.LASF55:
 5324 001e 696E7453 		.ascii	"intState\000"
 5324      74617465 
 5324      00
 5325              	.LASF26:
 5326 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5326      73436C6B 
 5326      57726974 
 5326      65486663 
 5326      6C6B4469 
 5327              	.LASF118:
 5328 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5328      73436C6B 
 5328      50756D70 
 5328      436F6E66 
 5328      696700
 5329              	.LASF61:
 5330 0053 6F6C6449 		.ascii	"oldIsr\000"
 5330      737200
 5331              	.LASF100:
 5332 005a 72657456 		.ascii	"retVal\000"
 5332      616C00
 5333              	.LASF54:
 5334 0061 43794469 		.ascii	"CyDisableInts\000"
 5334      7361626C 
 5334      65496E74 
 5334      7300
 5335              	.LASF38:
 5336 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5336      656E7449 
 5336      6D6F5472 
 5336      696D3256 
 5336      616C7565 
 5337              	.LASF7:
 5338 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 5338      206C6F6E 
 5338      6720756E 
 5338      7369676E 
 5338      65642069 
 5339              	.LASF116:
 5340 009b 43795379 		.ascii	"CySysTickInitVar\000"
 5340      73546963 
 5340      6B496E69 
 5340      74566172 
 5340      00
 5341              	.LASF56:
 5342 00ac 4379456E 		.ascii	"CyEnableInts\000"
 5342      61626C65 
 5342      496E7473 
 5342      00
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 151


 5343              	.LASF110:
 5344 00b9 696E7465 		.ascii	"interfaceNumber\000"
 5344      72666163 
 5344      654E756D 
 5344      62657200 
 5345              	.LASF77:
 5346 00c9 4379536F 		.ascii	"CySoftwareReset\000"
 5346      66747761 
 5346      72655265 
 5346      73657400 
 5347              	.LASF87:
 5348 00d9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5348      73546963 
 5348      6B456E61 
 5348      626C6549 
 5348      6E746572 
 5349              	.LASF72:
 5350 00f2 4379496E 		.ascii	"CyIntGetState\000"
 5350      74476574 
 5350      53746174 
 5350      6500
 5351              	.LASF6:
 5352 0100 6C6F6E67 		.ascii	"long long int\000"
 5352      206C6F6E 
 5352      6720696E 
 5352      7400
 5353              	.LASF0:
 5354 010e 7369676E 		.ascii	"signed char\000"
 5354      65642063 
 5354      68617200 
 5355              	.LASF34:
 5356 011a 66726571 		.ascii	"freq\000"
 5356      00
 5357              	.LASF82:
 5358 011f 43794465 		.ascii	"CyDelayFreq\000"
 5358      6C617946 
 5358      72657100 
 5359              	.LASF24:
 5360 012b 696E7465 		.ascii	"interruptState\000"
 5360      72727570 
 5360      74537461 
 5360      746500
 5361              	.LASF91:
 5362 013a 43795379 		.ascii	"CySysTickGetReload\000"
 5362      73546963 
 5362      6B476574 
 5362      52656C6F 
 5362      616400
 5363              	.LASF4:
 5364 014d 6C6F6E67 		.ascii	"long int\000"
 5364      20696E74 
 5364      00
 5365              	.LASF73:
 5366 0156 4379496E 		.ascii	"CyIntDisable\000"
 5366      74446973 
 5366      61626C65 
 5366      00
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 152


 5367              	.LASF101:
 5368 0163 43795379 		.ascii	"CySysTickGetCallback\000"
 5368      73546963 
 5368      6B476574 
 5368      43616C6C 
 5368      6261636B 
 5369              	.LASF9:
 5370 0178 75696E74 		.ascii	"uint8\000"
 5370      3800
 5371              	.LASF113:
 5372 017e 63796465 		.ascii	"cydelayFreqKhz\000"
 5372      6C617946 
 5372      7265714B 
 5372      687A00
 5373              	.LASF29:
 5374 018d 656E6162 		.ascii	"enable\000"
 5374      6C6500
 5375              	.LASF13:
 5376 0194 646F7562 		.ascii	"double\000"
 5376      6C6500
 5377              	.LASF68:
 5378 019b 73686966 		.ascii	"shift\000"
 5378      7400
 5379              	.LASF51:
 5380 01a1 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5380      734C7664 
 5380      436C6561 
 5380      72496E74 
 5380      65727275 
 5381              	.LASF11:
 5382 01b8 75696E74 		.ascii	"uint32\000"
 5382      333200
 5383              	.LASF45:
 5384 01bf 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5384      73436C6B 
 5384      45636F52 
 5384      65616453 
 5384      74617475 
 5385              	.LASF57:
 5386 01d5 6D61736B 		.ascii	"mask\000"
 5386      00
 5387              	.LASF40:
 5388 01da 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5388      73436C6B 
 5388      47657453 
 5388      7973636C 
 5388      6B536F75 
 5389              	.LASF70:
 5390 01f2 4379496E 		.ascii	"CyIntGetPriority\000"
 5390      74476574 
 5390      5072696F 
 5390      72697479 
 5390      00
 5391              	.LASF115:
 5392 0203 63796465 		.ascii	"cydelay32kMs\000"
 5392      6C617933 
 5392      326B4D73 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 153


 5392      00
 5393              	.LASF84:
 5394 0210 43795379 		.ascii	"CySysTickInit\000"
 5394      73546963 
 5394      6B496E69 
 5394      7400
 5395              	.LASF69:
 5396 021e 76616C75 		.ascii	"value\000"
 5396      6500
 5397              	.LASF94:
 5398 0224 636C6F63 		.ascii	"clockSource\000"
 5398      6B536F75 
 5398      72636500 
 5399              	.LASF102:
 5400 0230 43794765 		.ascii	"CyGetUniqueId\000"
 5400      74556E69 
 5400      71756549 
 5400      6400
 5401              	.LASF96:
 5402 023e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5402      73546963 
 5402      6B476574 
 5402      436F756E 
 5402      74466C61 
 5403              	.LASF8:
 5404 0254 756E7369 		.ascii	"unsigned int\000"
 5404      676E6564 
 5404      20696E74 
 5404      00
 5405              	.LASF97:
 5406 0261 43795379 		.ascii	"CySysTickClear\000"
 5406      73546963 
 5406      6B436C65 
 5406      617200
 5407              	.LASF5:
 5408 0270 6C6F6E67 		.ascii	"long unsigned int\000"
 5408      20756E73 
 5408      69676E65 
 5408      6420696E 
 5408      7400
 5409              	.LASF90:
 5410 0282 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5410      734C7664 
 5410      47657449 
 5410      6E746572 
 5410      72757074 
 5411              	.LASF23:
 5412 029d 43795379 		.ascii	"CySysClkImoStop\000"
 5412      73436C6B 
 5412      496D6F53 
 5412      746F7000 
 5413              	.LASF74:
 5414 02ad 4379496E 		.ascii	"CyIntSetPending\000"
 5414      74536574 
 5414      50656E64 
 5414      696E6700 
 5415              	.LASF52:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 154


 5416 02bd 43795379 		.ascii	"CySysGetResetReason\000"
 5416      73476574 
 5416      52657365 
 5416      74526561 
 5416      736F6E00 
 5417              	.LASF3:
 5418 02d1 73686F72 		.ascii	"short unsigned int\000"
 5418      7420756E 
 5418      7369676E 
 5418      65642069 
 5418      6E7400
 5419              	.LASF106:
 5420 02e4 72656754 		.ascii	"regTmp\000"
 5420      6D7000
 5421              	.LASF93:
 5422 02eb 43795379 		.ascii	"CySysTickSetClockSource\000"
 5422      73546963 
 5422      6B536574 
 5422      436C6F63 
 5422      6B536F75 
 5423              	.LASF64:
 5424 0303 4379496E 		.ascii	"CyIntSetVector\000"
 5424      74536574 
 5424      56656374 
 5424      6F7200
 5425              	.LASF59:
 5426 0312 6E756D62 		.ascii	"number\000"
 5426      657200
 5427              	.LASF67:
 5428 0319 7072696F 		.ascii	"priority\000"
 5428      72697479 
 5428      00
 5429              	.LASF121:
 5430 0322 433A5C55 		.ascii	"C:\\Users\\User\\Documents\\PSoC Creator\\PSoC4-MCU"
 5430      73657273 
 5430      5C557365 
 5430      725C446F 
 5430      63756D65 
 5431 0350 2D424C45 		.ascii	"-BLE-Connectivity-Designs-master\\PSoC4-MCU-BLE-Con"
 5431      2D436F6E 
 5431      6E656374 
 5431      69766974 
 5431      792D4465 
 5432 0382 6E656374 		.ascii	"nectivity-Designs-master\\BLE_Temperature_Measureme"
 5432      69766974 
 5432      792D4465 
 5432      7369676E 
 5432      732D6D61 
 5433 03b4 6E745C42 		.ascii	"nt\\BLE_Temperature_Measurement.cydsn\000"
 5433      4C455F54 
 5433      656D7065 
 5433      72617475 
 5433      72655F4D 
 5434              	.LASF33:
 5435 03d9 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5435      73436C6B 
 5435      57726974 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 155


 5435      65496D6F 
 5435      46726571 
 5436              	.LASF119:
 5437 03ee 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5437      43313120 
 5437      352E342E 
 5437      31203230 
 5437      31363036 
 5438 0421 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5438      20726576 
 5438      6973696F 
 5438      6E203233 
 5438      37373135 
 5439 0454 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5439      66756E63 
 5439      74696F6E 
 5439      2D736563 
 5439      74696F6E 
 5440              	.LASF107:
 5441 047c 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5441      73536574 
 5441      466C6173 
 5441      68416363 
 5441      65737341 
 5442              	.LASF58:
 5443 049b 4379496E 		.ascii	"CyIntSetSysVector\000"
 5443      74536574 
 5443      53797356 
 5443      6563746F 
 5443      7200
 5444              	.LASF27:
 5445 04ad 43795379 		.ascii	"CySysEnablePumpClock\000"
 5445      73456E61 
 5445      626C6550 
 5445      756D7043 
 5445      6C6F636B 
 5446              	.LASF17:
 5447 04c2 72656733 		.ascii	"reg32\000"
 5447      3200
 5448              	.LASF83:
 5449 04c8 43795379 		.ascii	"CySysTickStart\000"
 5449      73546963 
 5449      6B537461 
 5449      727400
 5450              	.LASF43:
 5451 04d7 72657475 		.ascii	"returnStatus\000"
 5451      726E5374 
 5451      61747573 
 5451      00
 5452              	.LASF105:
 5453 04e4 736F7572 		.ascii	"source\000"
 5453      636500
 5454              	.LASF20:
 5455 04eb 73697A65 		.ascii	"sizetype\000"
 5455      74797065 
 5455      00
 5456              	.LASF109:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 156


 5457 04f4 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5457      73536574 
 5457      50657269 
 5457      70686572 
 5457      616C4163 
 5458              	.LASF75:
 5459 0518 4379496E 		.ascii	"CyIntClearPending\000"
 5459      74436C65 
 5459      61725065 
 5459      6E64696E 
 5459      6700
 5460              	.LASF19:
 5461 052a 6C6F6E67 		.ascii	"long double\000"
 5461      20646F75 
 5461      626C6500 
 5462              	.LASF60:
 5463 0536 61646472 		.ascii	"address\000"
 5463      65737300 
 5464              	.LASF36:
 5465 053e 62675472 		.ascii	"bgTrim5\000"
 5465      696D3500 
 5466              	.LASF30:
 5467 0546 73797363 		.ascii	"sysclkSource\000"
 5467      6C6B536F 
 5467      75726365 
 5467      00
 5468              	.LASF99:
 5469 0553 66756E63 		.ascii	"function\000"
 5469      74696F6E 
 5469      00
 5470              	.LASF117:
 5471 055c 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5471      6F467265 
 5471      714D687A 
 5471      32526567 
 5471      00
 5472              	.LASF92:
 5473 056d 43795379 		.ascii	"CySysTickGetValue\000"
 5473      73546963 
 5473      6B476574 
 5473      56616C75 
 5473      6500
 5474              	.LASF112:
 5475 057f 63796465 		.ascii	"cydelayFreqHz\000"
 5475      6C617946 
 5475      72657148 
 5475      7A00
 5476              	.LASF66:
 5477 058d 4379496E 		.ascii	"CyIntSetPriority\000"
 5477      74536574 
 5477      5072696F 
 5477      72697479 
 5477      00
 5478              	.LASF12:
 5479 059e 666C6F61 		.ascii	"float\000"
 5479      7400
 5480              	.LASF48:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 157


 5481 05a4 43795379 		.ascii	"CySysLvdEnable\000"
 5481      734C7664 
 5481      456E6162 
 5481      6C6500
 5482              	.LASF21:
 5483 05b3 63795379 		.ascii	"cySysTickCallback\000"
 5483      73546963 
 5483      6B43616C 
 5483      6C626163 
 5483      6B00
 5484              	.LASF65:
 5485 05c5 4379496E 		.ascii	"CyIntGetVector\000"
 5485      74476574 
 5485      56656374 
 5485      6F7200
 5486              	.LASF79:
 5487 05d4 6D696C6C 		.ascii	"milliseconds\000"
 5487      69736563 
 5487      6F6E6473 
 5487      00
 5488              	.LASF16:
 5489 05e1 72656738 		.ascii	"reg8\000"
 5489      00
 5490              	.LASF49:
 5491 05e6 74687265 		.ascii	"threshold\000"
 5491      73686F6C 
 5491      6400
 5492              	.LASF76:
 5493 05f0 43794861 		.ascii	"CyHalt\000"
 5493      6C7400
 5494              	.LASF104:
 5495 05f7 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5495      73536574 
 5495      52616D41 
 5495      63636573 
 5495      73417262 
 5496              	.LASF1:
 5497 0614 756E7369 		.ascii	"unsigned char\000"
 5497      676E6564 
 5497      20636861 
 5497      7200
 5498              	.LASF2:
 5499 0622 73686F72 		.ascii	"short int\000"
 5499      7420696E 
 5499      7400
 5500              	.LASF71:
 5501 062c 4379496E 		.ascii	"CyIntEnable\000"
 5501      74456E61 
 5501      626C6500 
 5502              	.LASF63:
 5503 0638 4379496E 		.ascii	"CyIntGetSysVector\000"
 5503      74476574 
 5503      53797356 
 5503      6563746F 
 5503      7200
 5504              	.LASF28:
 5505 064a 636C6B53 		.ascii	"clkSelect\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 158


 5505      656C6563 
 5505      7400
 5506              	.LASF41:
 5507 0654 43795379 		.ascii	"CySysClkEcoStart\000"
 5507      73436C6B 
 5507      45636F53 
 5507      74617274 
 5507      00
 5508              	.LASF80:
 5509 0665 43794465 		.ascii	"CyDelayUs\000"
 5509      6C617955 
 5509      7300
 5510              	.LASF53:
 5511 066f 72656173 		.ascii	"reason\000"
 5511      6F6E00
 5512              	.LASF14:
 5513 0676 63686172 		.ascii	"char\000"
 5513      00
 5514              	.LASF18:
 5515 067b 63796973 		.ascii	"cyisraddress\000"
 5515      72616464 
 5515      72657373 
 5515      00
 5516              	.LASF85:
 5517 0688 43795379 		.ascii	"CySysTickEnable\000"
 5517      73546963 
 5517      6B456E61 
 5517      626C6500 
 5518              	.LASF31:
 5519 0698 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5519      73436C6B 
 5519      57726974 
 5519      65537973 
 5519      636C6B44 
 5520              	.LASF98:
 5521 06af 43795379 		.ascii	"CySysTickSetCallback\000"
 5521      73546963 
 5521      6B536574 
 5521      43616C6C 
 5521      6261636B 
 5522              	.LASF111:
 5523 06c4 43795379 		.ascii	"CySysTickCallbacks\000"
 5523      73546963 
 5523      6B43616C 
 5523      6C626163 
 5523      6B7300
 5524              	.LASF39:
 5525 06d7 696D6F54 		.ascii	"imoTrim1Value\000"
 5525      72696D31 
 5525      56616C75 
 5525      6500
 5526              	.LASF103:
 5527 06e5 756E6971 		.ascii	"uniqueId\000"
 5527      75654964 
 5527      00
 5528              	.LASF78:
 5529 06ee 43794465 		.ascii	"CyDelay\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 159


 5529      6C617900 
 5530              	.LASF95:
 5531 06f6 43795379 		.ascii	"CySysTickGetClockSource\000"
 5531      73546963 
 5531      6B476574 
 5531      436C6F63 
 5531      6B536F75 
 5532              	.LASF88:
 5533 070e 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5533      73546963 
 5533      6B446973 
 5533      61626C65 
 5533      496E7465 
 5534              	.LASF50:
 5535 0728 43795379 		.ascii	"CySysLvdDisable\000"
 5535      734C7664 
 5535      44697361 
 5535      626C6500 
 5536              	.LASF114:
 5537 0738 63796465 		.ascii	"cydelayFreqMhz\000"
 5537      6C617946 
 5537      7265714D 
 5537      687A00
 5538              	.LASF44:
 5539 0747 43795379 		.ascii	"CySysClkEcoStop\000"
 5539      73436C6B 
 5539      45636F53 
 5539      746F7000 
 5540              	.LASF108:
 5541 0757 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5541      73536574 
 5541      446D6163 
 5541      41636365 
 5541      73734172 
 5542              	.LASF86:
 5543 0775 43795379 		.ascii	"CySysTickStop\000"
 5543      73546963 
 5543      6B53746F 
 5543      7000
 5544              	.LASF42:
 5545 0783 74696D65 		.ascii	"timeoutUs\000"
 5545      6F757455 
 5545      7300
 5546              	.LASF32:
 5547 078d 64697669 		.ascii	"divider\000"
 5547      64657200 
 5548              	.LASF47:
 5549 0795 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5549      73436C6B 
 5549      57726974 
 5549      6545636F 
 5549      44697600 
 5550              	.LASF15:
 5551 07a9 63797374 		.ascii	"cystatus\000"
 5551      61747573 
 5551      00
 5552              	.LASF22:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccthknyi.s 			page 160


 5553 07b2 43795379 		.ascii	"CySysClkImoStart\000"
 5553      73436C6B 
 5553      496D6F53 
 5553      74617274 
 5553      00
 5554              	.LASF37:
 5555 07c3 6E657749 		.ascii	"newImoTrim2Value\000"
 5555      6D6F5472 
 5555      696D3256 
 5555      616C7565 
 5555      00
 5556              	.LASF120:
 5557 07d4 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5557      72617465 
 5557      645F536F 
 5557      75726365 
 5557      5C50536F 
 5558              	.LASF81:
 5559 07f3 6D696372 		.ascii	"microseconds\000"
 5559      6F736563 
 5559      6F6E6473 
 5559      00
 5560              	.LASF25:
 5561 0800 746D7052 		.ascii	"tmpReg\000"
 5561      656700
 5562              	.LASF89:
 5563 0807 43795379 		.ascii	"CySysTickSetReload\000"
 5563      73546963 
 5563      6B536574 
 5563      52656C6F 
 5563      616400
 5564              	.LASF122:
 5565 081a 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5565      73546963 
 5565      6B536572 
 5565      76696365 
 5565      43616C6C 
 5566              	.LASF46:
 5567 0834 72657475 		.ascii	"returnValue\000"
 5567      726E5661 
 5567      6C756500 
 5568              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
