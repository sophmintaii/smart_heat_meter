ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,4,4
  26              		.comm	ADC_countsPer10Volt,8,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 8
  31              	ADC_channelsConfig:
  32 0000 00040000 		.word	1024
  33 0004 00040000 		.word	1024
  34              		.section	.text.ADC_Start,"ax",%progbits
  35              		.align	2
  36              		.global	ADC_Start
  37              		.code	16
  38              		.thumb_func
  39              		.type	ADC_Start, %function
  40              	ADC_Start:
  41              	.LFB2:
  42              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 2


  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u, 0x00000400u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  43              		.loc 1 64 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 3


  51 0002 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  53              		.loc 1 66 0
  54 0004 064B     		ldr	r3, .L3
  55 0006 1B78     		ldrb	r3, [r3]
  56 0008 002B     		cmp	r3, #0
  57 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  58              		.loc 1 68 0
  59 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  60              		.loc 1 69 0
  61 0010 034B     		ldr	r3, .L3
  62 0012 0122     		movs	r2, #1
  63 0014 1A70     		strb	r2, [r3]
  64              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  65              		.loc 1 71 0
  66 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  67              		.loc 1 72 0
  68 001a C046     		nop
  69 001c BD46     		mov	sp, r7
  70              		@ sp needed
  71 001e 80BD     		pop	{r7, pc}
  72              	.L4:
  73              		.align	2
  74              	.L3:
  75 0020 00000000 		.word	ADC_initVar
  76              		.cfi_endproc
  77              	.LFE2:
  78              		.size	ADC_Start, .-ADC_Start
  79              		.section	.text.ADC_Init,"ax",%progbits
  80              		.align	2
  81              		.global	ADC_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	ADC_Init, %function
  85              	ADC_Init:
  86              	.LFB3:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 4


  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  87              		.loc 1 95 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 5


 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  99              		.loc 1 172 0
 100 0006 0321     		movs	r1, #3
 101 0008 0F20     		movs	r0, #15
 102 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 103              		.loc 1 173 0
 104 000e 7A4B     		ldr	r3, .L21
 105 0010 1900     		movs	r1, r3
 106 0012 0F20     		movs	r0, #15
 107 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 108              		.loc 1 177 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 6


 109 0018 784B     		ldr	r3, .L21+4
 110 001a 0122     		movs	r2, #1
 111 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 112              		.loc 1 180 0
 113 001e 784B     		ldr	r3, .L21+8
 114 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0
 116 0022 002B     		cmp	r3, #0
 117 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 is_stmt 0 discriminator 1
 119 0026 7749     		ldr	r1, .L21+12
 120 0028 00E0     		b	.L7
 121              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 178 0 discriminator 2
 123 002a 7749     		ldr	r1, .L21+16
 124              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 125              		.loc 1 178 0 discriminator 4
 126 002c 774B     		ldr	r3, .L21+20
 127 002e 774A     		ldr	r2, .L21+20
 128 0030 1268     		ldr	r2, [r2]
 129 0032 0A43     		orrs	r2, r1
 130 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 131              		.loc 1 182 0 is_stmt 1 discriminator 4
 132 0036 764B     		ldr	r3, .L21+24
 133 0038 764A     		ldr	r2, .L21+28
 134 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 135              		.loc 1 183 0 discriminator 4
 136 003c 764B     		ldr	r3, .L21+32
 137 003e 774A     		ldr	r2, .L21+36
 138 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 139              		.loc 1 184 0 discriminator 4
 140 0042 774B     		ldr	r3, .L21+40
 141 0044 0022     		movs	r2, #0
 142 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 143              		.loc 1 185 0 discriminator 4
 144 0048 764B     		ldr	r3, .L21+44
 145 004a 774A     		ldr	r2, .L21+48
 146 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 147              		.loc 1 186 0 discriminator 4
 148 004e 774B     		ldr	r3, .L21+52
 149 0050 754A     		ldr	r2, .L21+48
 150 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 7


 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 151              		.loc 1 190 0 discriminator 4
 152 0054 764B     		ldr	r3, .L21+56
 153 0056 764A     		ldr	r2, .L21+56
 154 0058 1268     		ldr	r2, [r2]
 155 005a 8021     		movs	r1, #128
 156 005c 4902     		lsls	r1, r1, #9
 157 005e 0A43     		orrs	r2, r1
 158 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 159              		.loc 1 193 0 discriminator 4
 160 0062 744B     		ldr	r3, .L21+60
 161 0064 734A     		ldr	r2, .L21+60
 162 0066 1268     		ldr	r2, [r2]
 163 0068 8021     		movs	r1, #128
 164 006a 4902     		lsls	r1, r1, #9
 165 006c 0A43     		orrs	r2, r1
 166 006e 1A60     		str	r2, [r3]
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 167              		.loc 1 197 0 discriminator 4
 168 0070 714B     		ldr	r3, .L21+64
 169 0072 0022     		movs	r2, #0
 170 0074 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 171              		.loc 1 198 0 discriminator 4
 172 0076 714B     		ldr	r3, .L21+68
 173 0078 0022     		movs	r2, #0
 174 007a 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 175              		.loc 1 199 0 discriminator 4
 176 007c 704B     		ldr	r3, .L21+72
 177 007e 1122     		movs	r2, #17
 178 0080 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 179              		.loc 1 206 0 discriminator 4
 180 0082 704B     		ldr	r3, .L21+76
 181 0084 1B68     		ldr	r3, [r3]
 182 0086 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 183              		.loc 1 207 0 discriminator 4
 184 0088 7B68     		ldr	r3, [r7, #4]
 185 008a 6F4A     		ldr	r2, .L21+80
 186 008c 1340     		ands	r3, r2
 187 008e 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 8


 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 188              		.loc 1 220 0 discriminator 4
 189 0090 7B68     		ldr	r3, [r7, #4]
 190 0092 8022     		movs	r2, #128
 191 0094 9205     		lsls	r2, r2, #22
 192 0096 1343     		orrs	r3, r2
 193 0098 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 194              		.loc 1 221 0 discriminator 4
 195 009a 7B68     		ldr	r3, [r7, #4]
 196 009c 0122     		movs	r2, #1
 197 009e 9343     		bics	r3, r2
 198 00a0 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 199              		.loc 1 226 0 discriminator 4
 200 00a2 684B     		ldr	r3, .L21+76
 201 00a4 7A68     		ldr	r2, [r7, #4]
 202 00a6 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 203              		.loc 1 232 0 discriminator 4
 204 00a8 0023     		movs	r3, #0
 205 00aa FB60     		str	r3, [r7, #12]
 206 00ac 9BE0     		b	.L8
 207              	.L20:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 208              		.loc 1 234 0
 209 00ae 674B     		ldr	r3, .L21+84
 210 00b0 FA68     		ldr	r2, [r7, #12]
 211 00b2 9200     		lsls	r2, r2, #2
 212 00b4 D258     		ldr	r2, [r2, r3]
 213 00b6 DC23     		movs	r3, #220
 214 00b8 9B01     		lsls	r3, r3, #6
 215 00ba 1340     		ands	r3, r2
 216 00bc 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 9


 217              		.loc 1 236 0
 218 00be 644A     		ldr	r2, .L21+88
 219 00c0 FB68     		ldr	r3, [r7, #12]
 220 00c2 D318     		adds	r3, r2, r3
 221 00c4 1B78     		ldrb	r3, [r3]
 222 00c6 1A00     		movs	r2, r3
 223 00c8 7B68     		ldr	r3, [r7, #4]
 224 00ca 1343     		orrs	r3, r2
 225 00cc 7B60     		str	r3, [r7, #4]
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 226              		.loc 1 250 0
 227 00ce FB68     		ldr	r3, [r7, #12]
 228 00d0 002B     		cmp	r3, #0
 229 00d2 2BD1     		bne	.L9
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 230              		.loc 1 253 0
 231 00d4 FB68     		ldr	r3, [r7, #12]
 232 00d6 9B00     		lsls	r3, r3, #2
 233 00d8 5E4A     		ldr	r2, .L21+92
 234 00da 9446     		mov	ip, r2
 235 00dc 6344     		add	r3, r3, ip
 236 00de 7A68     		ldr	r2, [r7, #4]
 237 00e0 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 238              		.loc 1 255 0
 239 00e2 5A4B     		ldr	r3, .L21+84
 240 00e4 FA68     		ldr	r2, [r7, #12]
 241 00e6 9200     		lsls	r2, r2, #2
 242 00e8 D358     		ldr	r3, [r2, r3]
 243 00ea 0122     		movs	r2, #1
 244 00ec 1340     		ands	r3, r2
 245 00ee 0AD0     		beq	.L10
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 246              		.loc 1 257 0
 247 00f0 514B     		ldr	r3, .L21+64
 248 00f2 514A     		ldr	r2, .L21+64
 249 00f4 1168     		ldr	r1, [r2]
 250 00f6 0120     		movs	r0, #1
 251 00f8 FA68     		ldr	r2, [r7, #12]
 252 00fa 9040     		lsls	r0, r0, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 10


 253 00fc 0200     		movs	r2, r0
 254 00fe 1204     		lsls	r2, r2, #16
 255 0100 120C     		lsrs	r2, r2, #16
 256 0102 0A43     		orrs	r2, r1
 257 0104 1A60     		str	r2, [r3]
 258              	.L10:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 259              		.loc 1 260 0
 260 0106 514B     		ldr	r3, .L21+84
 261 0108 FA68     		ldr	r2, [r7, #12]
 262 010a 9200     		lsls	r2, r2, #2
 263 010c D358     		ldr	r3, [r2, r3]
 264 010e 0222     		movs	r2, #2
 265 0110 1340     		ands	r3, r2
 266 0112 2BD0     		beq	.L12
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 267              		.loc 1 262 0
 268 0114 494B     		ldr	r3, .L21+68
 269 0116 494A     		ldr	r2, .L21+68
 270 0118 1168     		ldr	r1, [r2]
 271 011a 0120     		movs	r0, #1
 272 011c FA68     		ldr	r2, [r7, #12]
 273 011e 9040     		lsls	r0, r0, r2
 274 0120 0200     		movs	r2, r0
 275 0122 1204     		lsls	r2, r2, #16
 276 0124 120C     		lsrs	r2, r2, #16
 277 0126 0A43     		orrs	r2, r1
 278 0128 1A60     		str	r2, [r3]
 279 012a 1FE0     		b	.L12
 280              	.L9:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 281              		.loc 1 268 0
 282 012c 4A4B     		ldr	r3, .L21+96
 283 012e 7A68     		ldr	r2, [r7, #4]
 284 0130 8021     		movs	r1, #128
 285 0132 C905     		lsls	r1, r1, #23
 286 0134 0A43     		orrs	r2, r1
 287 0136 1A60     		str	r2, [r3]
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 288              		.loc 1 270 0
 289 0138 444B     		ldr	r3, .L21+84
 290 013a FA68     		ldr	r2, [r7, #12]
 291 013c 9200     		lsls	r2, r2, #2
 292 013e D358     		ldr	r3, [r2, r3]
 293 0140 0122     		movs	r2, #1
 294 0142 1340     		ands	r3, r2
 295 0144 05D0     		beq	.L13
 271:Generated_Source\PSoC4/ADC.c ****                 {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 11


 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 296              		.loc 1 272 0
 297 0146 3E4B     		ldr	r3, .L21+72
 298 0148 3D4A     		ldr	r2, .L21+72
 299 014a 1268     		ldr	r2, [r2]
 300 014c 2021     		movs	r1, #32
 301 014e 0A43     		orrs	r2, r1
 302 0150 1A60     		str	r2, [r3]
 303              	.L13:
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 304              		.loc 1 275 0
 305 0152 3E4B     		ldr	r3, .L21+84
 306 0154 FA68     		ldr	r2, [r7, #12]
 307 0156 9200     		lsls	r2, r2, #2
 308 0158 D358     		ldr	r3, [r2, r3]
 309 015a 0222     		movs	r2, #2
 310 015c 1340     		ands	r3, r2
 311 015e 05D0     		beq	.L12
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 312              		.loc 1 277 0
 313 0160 374B     		ldr	r3, .L21+72
 314 0162 374A     		ldr	r2, .L21+72
 315 0164 1268     		ldr	r2, [r2]
 316 0166 4021     		movs	r1, #64
 317 0168 0A43     		orrs	r2, r1
 318 016a 1A60     		str	r2, [r3]
 319              	.L12:
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 320              		.loc 1 282 0
 321 016c 374B     		ldr	r3, .L21+84
 322 016e FA68     		ldr	r2, [r7, #12]
 323 0170 9200     		lsls	r2, r2, #2
 324 0172 D258     		ldr	r2, [r2, r3]
 325 0174 8023     		movs	r3, #128
 326 0176 9B00     		lsls	r3, r3, #2
 327 0178 1340     		ands	r3, r2
 328 017a 03D0     		beq	.L14
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 329              		.loc 1 284 0
 330 017c 8023     		movs	r3, #128
 331 017e 5B00     		lsls	r3, r3, #1
 332 0180 BB60     		str	r3, [r7, #8]
 333 0182 02E0     		b	.L15
 334              	.L14:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 335              		.loc 1 288 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 12


 336 0184 8023     		movs	r3, #128
 337 0186 5B01     		lsls	r3, r3, #5
 338 0188 BB60     		str	r3, [r7, #8]
 339              	.L15:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 340              		.loc 1 291 0
 341 018a 304B     		ldr	r3, .L21+84
 342 018c FA68     		ldr	r2, [r7, #12]
 343 018e 9200     		lsls	r2, r2, #2
 344 0190 D258     		ldr	r2, [r2, r3]
 345 0192 8023     		movs	r3, #128
 346 0194 5B00     		lsls	r3, r3, #1
 347 0196 1340     		ands	r3, r2
 348 0198 05D1     		bne	.L16
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 349              		.loc 1 298 0
 350 019a 304B     		ldr	r3, .L21+100
 351 019c FA68     		ldr	r2, [r7, #12]
 352 019e 5200     		lsls	r2, r2, #1
 353 01a0 0021     		movs	r1, #0
 354 01a2 D152     		strh	r1, [r2, r3]
 355 01a4 09E0     		b	.L17
 356              	.L16:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 357              		.loc 1 305 0
 358 01a6 BB68     		ldr	r3, [r7, #8]
 359 01a8 002B     		cmp	r3, #0
 360 01aa 00DA     		bge	.L18
 361 01ac 0133     		adds	r3, r3, #1
 362              	.L18:
 363 01ae 5B10     		asrs	r3, r3, #1
 364 01b0 19B2     		sxth	r1, r3
 365 01b2 2A4B     		ldr	r3, .L21+100
 366 01b4 FA68     		ldr	r2, [r7, #12]
 367 01b6 5200     		lsls	r2, r2, #1
 368 01b8 D152     		strh	r1, [r2, r3]
 369              	.L17:
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 13


 370              		.loc 1 311 0 discriminator 2
 371 01ba BB68     		ldr	r3, [r7, #8]
 372 01bc 284A     		ldr	r2, .L21+104
 373 01be 5343     		muls	r3, r2
 374 01c0 8022     		movs	r2, #128
 375 01c2 D200     		lsls	r2, r2, #3
 376 01c4 9446     		mov	ip, r2
 377 01c6 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 378              		.loc 1 312 0 discriminator 2
 379 01c8 002B     		cmp	r3, #0
 380 01ca 02DA     		bge	.L19
 381 01cc 254A     		ldr	r2, .L21+108
 382 01ce 9446     		mov	ip, r2
 383 01d0 6344     		add	r3, r3, ip
 384              	.L19:
 385 01d2 DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 386              		.loc 1 311 0 discriminator 2
 387 01d4 1BB2     		sxth	r3, r3
 388 01d6 1900     		movs	r1, r3
 389 01d8 234B     		ldr	r3, .L21+112
 390 01da FA68     		ldr	r2, [r7, #12]
 391 01dc 9200     		lsls	r2, r2, #2
 392 01de D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 393              		.loc 1 232 0 discriminator 2
 394 01e0 FB68     		ldr	r3, [r7, #12]
 395 01e2 0133     		adds	r3, r3, #1
 396 01e4 FB60     		str	r3, [r7, #12]
 397              	.L8:
 232:Generated_Source\PSoC4/ADC.c ****     {
 398              		.loc 1 232 0 is_stmt 0 discriminator 1
 399 01e6 FB68     		ldr	r3, [r7, #12]
 400 01e8 012B     		cmp	r3, #1
 401 01ea 00D8     		bhi	.LCB326
 402 01ec 5FE7     		b	.L20	@long jump
 403              	.LCB326:
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 404              		.loc 1 314 0 is_stmt 1
 405 01ee C046     		nop
 406 01f0 BD46     		mov	sp, r7
 407 01f2 04B0     		add	sp, sp, #16
 408              		@ sp needed
 409 01f4 80BD     		pop	{r7, pc}
 410              	.L22:
 411 01f6 C046     		.align	2
 412              	.L21:
 413 01f8 00000000 		.word	ADC_ISR
 414 01fc 20003A40 		.word	1077542944
 415 0200 80033A40 		.word	1077543808
 416 0204 C0201013 		.word	319824064
 417 0208 C0200013 		.word	318775488
 418 020c 00003A40 		.word	1077542912
 419 0210 04003A40 		.word	1077542916
 420 0214 C4000A80 		.word	-2146828092
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 14


 421 0218 18003A40 		.word	1077542936
 422 021c 0000FF07 		.word	134152192
 423 0220 1C003A40 		.word	1077542940
 424 0224 10003A40 		.word	1077542928
 425 0228 02000200 		.word	131074
 426 022c 14003A40 		.word	1077542932
 427 0230 00033A40 		.word	1077543680
 428 0234 40033A40 		.word	1077543744
 429 0238 28023A40 		.word	1077543464
 430 023c 38023A40 		.word	1077543480
 431 0240 18023A40 		.word	1077543448
 432 0244 30003A40 		.word	1077542960
 433 0248 FFFFFFDF 		.word	-536870913
 434 024c 00000000 		.word	ADC_channelsConfig
 435 0250 08000000 		.word	ADC_InputsPlacement.4922
 436 0254 80003A40 		.word	1077543040
 437 0258 80023A40 		.word	1077543552
 438 025c 00000000 		.word	ADC_offset
 439 0260 10270000 		.word	10000
 440 0264 FF070000 		.word	2047
 441 0268 00000000 		.word	ADC_countsPer10Volt
 442              		.cfi_endproc
 443              	.LFE3:
 444              		.size	ADC_Init, .-ADC_Init
 445              		.section	.text.ADC_Enable,"ax",%progbits
 446              		.align	2
 447              		.global	ADC_Enable
 448              		.code	16
 449              		.thumb_func
 450              		.type	ADC_Enable, %function
 451              	ADC_Enable:
 452              	.LFB4:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 453              		.loc 1 331 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457 0000 80B5     		push	{r7, lr}
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 15


 461 0002 00AF     		add	r7, sp, #0
 462              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 463              		.loc 1 332 0
 464 0004 0A4B     		ldr	r3, .L27
 465 0006 1B68     		ldr	r3, [r3]
 466 0008 002B     		cmp	r3, #0
 467 000a 0EDB     		blt	.L26
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 468              		.loc 1 336 0
 469 000c C046     		nop
 470              	.L25:
 471              		.loc 1 336 0 is_stmt 0 discriminator 1
 472 000e 094B     		ldr	r3, .L27+4
 473 0010 1B68     		ldr	r3, [r3]
 474 0012 002B     		cmp	r3, #0
 475 0014 FBDB     		blt	.L25
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 476              		.loc 1 342 0 is_stmt 1
 477 0016 064B     		ldr	r3, .L27
 478 0018 054A     		ldr	r2, .L27
 479 001a 1268     		ldr	r2, [r2]
 480 001c 8021     		movs	r1, #128
 481 001e 0906     		lsls	r1, r1, #24
 482 0020 0A43     		orrs	r2, r1
 483 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 484              		.loc 1 345 0
 485 0024 0A20     		movs	r0, #10
 486 0026 FFF7FEFF 		bl	CyDelayUs
 487              	.L26:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 488              		.loc 1 347 0
 489 002a C046     		nop
 490 002c BD46     		mov	sp, r7
 491              		@ sp needed
 492 002e 80BD     		pop	{r7, pc}
 493              	.L28:
 494              		.align	2
 495              	.L27:
 496 0030 00003A40 		.word	1077542912
 497 0034 08023A40 		.word	1077543432
 498              		.cfi_endproc
 499              	.LFE4:
 500              		.size	ADC_Enable, .-ADC_Enable
 501              		.section	.text.ADC_Stop,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 16


 502              		.align	2
 503              		.global	ADC_Stop
 504              		.code	16
 505              		.thumb_func
 506              		.type	ADC_Stop, %function
 507              	ADC_Stop:
 508              	.LFB5:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 509              		.loc 1 366 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 80B5     		push	{r7, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 519              		.loc 1 367 0
 520 0004 044B     		ldr	r3, .L30
 521 0006 044A     		ldr	r2, .L30
 522 0008 1268     		ldr	r2, [r2]
 523 000a 5200     		lsls	r2, r2, #1
 524 000c 5208     		lsrs	r2, r2, #1
 525 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
 526              		.loc 1 368 0
 527 0010 C046     		nop
 528 0012 BD46     		mov	sp, r7
 529              		@ sp needed
 530 0014 80BD     		pop	{r7, pc}
 531              	.L31:
 532 0016 C046     		.align	2
 533              	.L30:
 534 0018 00003A40 		.word	1077542912
 535              		.cfi_endproc
 536              	.LFE5:
 537              		.size	ADC_Stop, .-ADC_Stop
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 17


 538              		.section	.text.ADC_StartConvert,"ax",%progbits
 539              		.align	2
 540              		.global	ADC_StartConvert
 541              		.code	16
 542              		.thumb_func
 543              		.type	ADC_StartConvert, %function
 544              	ADC_StartConvert:
 545              	.LFB6:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 546              		.loc 1 392 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550 0000 80B5     		push	{r7, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 7, -8
 553              		.cfi_offset 14, -4
 554 0002 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 556              		.loc 1 396 0
 557 0004 024B     		ldr	r3, .L33
 558 0006 0122     		movs	r2, #1
 559 0008 1A60     		str	r2, [r3]
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 560              		.loc 1 399 0
 561 000a C046     		nop
 562 000c BD46     		mov	sp, r7
 563              		@ sp needed
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 18


 564 000e 80BD     		pop	{r7, pc}
 565              	.L34:
 566              		.align	2
 567              	.L33:
 568 0010 24003A40 		.word	1077542948
 569              		.cfi_endproc
 570              	.LFE6:
 571              		.size	ADC_StartConvert, .-ADC_StartConvert
 572              		.section	.text.ADC_StopConvert,"ax",%progbits
 573              		.align	2
 574              		.global	ADC_StopConvert
 575              		.code	16
 576              		.thumb_func
 577              		.type	ADC_StopConvert, %function
 578              	ADC_StopConvert:
 579              	.LFB7:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 580              		.loc 1 417 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584 0000 80B5     		push	{r7, lr}
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 7, -8
 587              		.cfi_offset 14, -4
 588 0002 00AF     		add	r7, sp, #0
 589              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 590              		.loc 1 421 0
 591 0004 C046     		nop
 592 0006 BD46     		mov	sp, r7
 593              		@ sp needed
 594 0008 80BD     		pop	{r7, pc}
 595              		.cfi_endproc
 596              	.LFE7:
 597              		.size	ADC_StopConvert, .-ADC_StopConvert
 598              		.section	.text.ADC_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 19


 599              		.align	2
 600              		.global	ADC_IsEndConversion
 601              		.code	16
 602              		.thumb_func
 603              		.type	ADC_IsEndConversion, %function
 604              	ADC_IsEndConversion:
 605              	.LFB8:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 606              		.loc 1 451 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 16
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610 0000 80B5     		push	{r7, lr}
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 84B0     		sub	sp, sp, #16
 615              		.cfi_def_cfa_offset 24
 616 0004 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 619              		.loc 1 452 0
 620 0008 0023     		movs	r3, #0
 621 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 622              		.loc 1 454 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 20


 623 000c 7B68     		ldr	r3, [r7, #4]
 624 000e 0322     		movs	r2, #3
 625 0010 1340     		ands	r3, r2
 626 0012 11D0     		beq	.L37
 627              	.L39:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 628              		.loc 1 458 0 discriminator 2
 629 0014 184B     		ldr	r3, .L44
 630 0016 1B68     		ldr	r3, [r3]
 631 0018 0122     		movs	r2, #1
 632 001a 1340     		ands	r3, r2
 633 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 634              		.loc 1 459 0 discriminator 2
 635 001e FB68     		ldr	r3, [r7, #12]
 636 0020 002B     		cmp	r3, #0
 637 0022 03D1     		bne	.L38
 638              		.loc 1 459 0 is_stmt 0 discriminator 1
 639 0024 7B68     		ldr	r3, [r7, #4]
 640 0026 0222     		movs	r2, #2
 641 0028 1340     		ands	r3, r2
 642 002a F3D1     		bne	.L39
 643              	.L38:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 644              		.loc 1 461 0 is_stmt 1
 645 002c FB68     		ldr	r3, [r7, #12]
 646 002e 002B     		cmp	r3, #0
 647 0030 02D0     		beq	.L37
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 648              		.loc 1 464 0
 649 0032 114B     		ldr	r3, .L44
 650 0034 0122     		movs	r2, #1
 651 0036 1A60     		str	r2, [r3]
 652              	.L37:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 653              		.loc 1 469 0
 654 0038 7B68     		ldr	r3, [r7, #4]
 655 003a 0C22     		movs	r2, #12
 656 003c 1340     		ands	r3, r2
 657 003e 15D0     		beq	.L40
 658              	.L42:
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 659              		.loc 1 473 0
 660 0040 0D4B     		ldr	r3, .L44
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 21


 661 0042 1B68     		ldr	r3, [r3]
 662 0044 1022     		movs	r2, #16
 663 0046 1340     		ands	r3, r2
 664 0048 FA68     		ldr	r2, [r7, #12]
 665 004a 1343     		orrs	r3, r2
 666 004c FB60     		str	r3, [r7, #12]
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 667              		.loc 1 474 0
 668 004e FB68     		ldr	r3, [r7, #12]
 669 0050 1022     		movs	r2, #16
 670 0052 1340     		ands	r3, r2
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 671              		.loc 1 475 0
 672 0054 03D1     		bne	.L41
 673              		.loc 1 475 0 is_stmt 0 discriminator 1
 674 0056 7B68     		ldr	r3, [r7, #4]
 675 0058 0822     		movs	r2, #8
 676 005a 1340     		ands	r3, r2
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 677              		.loc 1 474 0 is_stmt 1 discriminator 1
 678 005c F0D1     		bne	.L42
 679              	.L41:
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 680              		.loc 1 477 0
 681 005e FB68     		ldr	r3, [r7, #12]
 682 0060 1022     		movs	r2, #16
 683 0062 1340     		ands	r3, r2
 684 0064 02D0     		beq	.L40
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 685              		.loc 1 480 0
 686 0066 044B     		ldr	r3, .L44
 687 0068 1022     		movs	r2, #16
 688 006a 1A60     		str	r2, [r3]
 689              	.L40:
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 690              		.loc 1 485 0
 691 006c FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 692              		.loc 1 486 0
 693 006e 1800     		movs	r0, r3
 694 0070 BD46     		mov	sp, r7
 695 0072 04B0     		add	sp, sp, #16
 696              		@ sp needed
 697 0074 80BD     		pop	{r7, pc}
 698              	.L45:
 699 0076 C046     		.align	2
 700              	.L44:
 701 0078 10023A40 		.word	1077543440
 702              		.cfi_endproc
 703              	.LFE8:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 22


 704              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 705              		.section	.text.ADC_GetResult16,"ax",%progbits
 706              		.align	2
 707              		.global	ADC_GetResult16
 708              		.code	16
 709              		.thumb_func
 710              		.type	ADC_GetResult16, %function
 711              	ADC_GetResult16:
 712              	.LFB9:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 713              		.loc 1 505 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 16
 716              		@ frame_needed = 1, uses_anonymous_args = 0
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 84B0     		sub	sp, sp, #16
 722              		.cfi_def_cfa_offset 24
 723 0004 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 725 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 726              		.loc 1 509 0
 727 0008 7B68     		ldr	r3, [r7, #4]
 728 000a 012B     		cmp	r3, #1
 729 000c 02D9     		bls	.L47
 730              		.loc 1 509 0 is_stmt 0 discriminator 1
 731 000e 0020     		movs	r0, #0
 732 0010 FFF7FEFF 		bl	CyHalt
 733              	.L47:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 734              		.loc 1 511 0 is_stmt 1
 735 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 23


 736 0016 002B     		cmp	r3, #0
 737 0018 09D1     		bne	.L48
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 738              		.loc 1 513 0
 739 001a 7B68     		ldr	r3, [r7, #4]
 740 001c 9B00     		lsls	r3, r3, #2
 741 001e 094A     		ldr	r2, .L51
 742 0020 9446     		mov	ip, r2
 743 0022 6344     		add	r3, r3, ip
 744 0024 1B68     		ldr	r3, [r3]
 745 0026 1B04     		lsls	r3, r3, #16
 746 0028 1B0C     		lsrs	r3, r3, #16
 747 002a FB60     		str	r3, [r7, #12]
 748 002c 04E0     		b	.L49
 749              	.L48:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 750              		.loc 1 519 0
 751 002e 064B     		ldr	r3, .L51+4
 752 0030 1B68     		ldr	r3, [r3]
 753 0032 1B04     		lsls	r3, r3, #16
 754 0034 1B0C     		lsrs	r3, r3, #16
 755 0036 FB60     		str	r3, [r7, #12]
 756              	.L49:
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 757              		.loc 1 525 0
 758 0038 FB68     		ldr	r3, [r7, #12]
 759 003a 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 760              		.loc 1 526 0
 761 003c 1800     		movs	r0, r3
 762 003e BD46     		mov	sp, r7
 763 0040 04B0     		add	sp, sp, #16
 764              		@ sp needed
 765 0042 80BD     		pop	{r7, pc}
 766              	.L52:
 767              		.align	2
 768              	.L51:
 769 0044 80013A40 		.word	1077543296
 770 0048 90023A40 		.word	1077543568
 771              		.cfi_endproc
 772              	.LFE9:
 773              		.size	ADC_GetResult16, .-ADC_GetResult16
 774              		.section	.text.ADC_SetChanMask,"ax",%progbits
 775              		.align	2
 776              		.global	ADC_SetChanMask
 777              		.code	16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 24


 778              		.thumb_func
 779              		.type	ADC_SetChanMask, %function
 780              	ADC_SetChanMask:
 781              	.LFB10:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 782              		.loc 1 550 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 8
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              		.cfi_def_cfa_offset 16
 792 0004 00AF     		add	r7, sp, #0
 793              		.cfi_def_cfa_register 7
 794 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 795              		.loc 1 551 0
 796 0008 044B     		ldr	r3, .L54
 797 000a 7A68     		ldr	r2, [r7, #4]
 798 000c 0121     		movs	r1, #1
 799 000e 0A40     		ands	r2, r1
 800 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 801              		.loc 1 552 0
 802 0012 C046     		nop
 803 0014 BD46     		mov	sp, r7
 804 0016 02B0     		add	sp, sp, #8
 805              		@ sp needed
 806 0018 80BD     		pop	{r7, pc}
 807              	.L55:
 808 001a C046     		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 25


 809              	.L54:
 810 001c 20003A40 		.word	1077542944
 811              		.cfi_endproc
 812              	.LFE10:
 813              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 814              		.section	.text.ADC_EnableInjection,"ax",%progbits
 815              		.align	2
 816              		.global	ADC_EnableInjection
 817              		.code	16
 818              		.thumb_func
 819              		.type	ADC_EnableInjection, %function
 820              	ADC_EnableInjection:
 821              	.LFB11:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 822              		.loc 1 572 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 1, uses_anonymous_args = 0
 826 0000 80B5     		push	{r7, lr}
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 7, -8
 829              		.cfi_offset 14, -4
 830 0002 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 832              		.loc 1 573 0
 833 0004 044B     		ldr	r3, .L57
 834 0006 044A     		ldr	r2, .L57
 835 0008 1268     		ldr	r2, [r2]
 836 000a 8021     		movs	r1, #128
 837 000c 0906     		lsls	r1, r1, #24
 838 000e 0A43     		orrs	r2, r1
 839 0010 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/ADC.c ****     }
 840              		.loc 1 574 0
 841 0012 C046     		nop
 842 0014 BD46     		mov	sp, r7
 843              		@ sp needed
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 26


 844 0016 80BD     		pop	{r7, pc}
 845              	.L58:
 846              		.align	2
 847              	.L57:
 848 0018 80023A40 		.word	1077543552
 849              		.cfi_endproc
 850              	.LFE11:
 851              		.size	ADC_EnableInjection, .-ADC_EnableInjection
 852              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 853              		.align	2
 854              		.global	ADC_SetLowLimit
 855              		.code	16
 856              		.thumb_func
 857              		.type	ADC_SetLowLimit, %function
 858              	ADC_SetLowLimit:
 859              	.LFB12:
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 860              		.loc 1 594 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864 0000 80B5     		push	{r7, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 7, -8
 867              		.cfi_offset 14, -4
 868 0002 82B0     		sub	sp, sp, #8
 869              		.cfi_def_cfa_offset 16
 870 0004 00AF     		add	r7, sp, #0
 871              		.cfi_def_cfa_register 7
 872 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 873              		.loc 1 595 0
 874 0008 084B     		ldr	r3, .L60
 875 000a 084A     		ldr	r2, .L60
 876 000c 1268     		ldr	r2, [r2]
 877 000e 120C     		lsrs	r2, r2, #16
 878 0010 1204     		lsls	r2, r2, #16
 879 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 27


 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 880              		.loc 1 596 0
 881 0014 054B     		ldr	r3, .L60
 882 0016 054A     		ldr	r2, .L60
 883 0018 1168     		ldr	r1, [r2]
 884 001a 7A68     		ldr	r2, [r7, #4]
 885 001c 1204     		lsls	r2, r2, #16
 886 001e 120C     		lsrs	r2, r2, #16
 887 0020 0A43     		orrs	r2, r1
 888 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 889              		.loc 1 597 0
 890 0024 C046     		nop
 891 0026 BD46     		mov	sp, r7
 892 0028 02B0     		add	sp, sp, #8
 893              		@ sp needed
 894 002a 80BD     		pop	{r7, pc}
 895              	.L61:
 896              		.align	2
 897              	.L60:
 898 002c 18003A40 		.word	1077542936
 899              		.cfi_endproc
 900              	.LFE12:
 901              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 902              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 903              		.align	2
 904              		.global	ADC_SetHighLimit
 905              		.code	16
 906              		.thumb_func
 907              		.type	ADC_SetHighLimit, %function
 908              	ADC_SetHighLimit:
 909              	.LFB13:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 910              		.loc 1 615 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 8
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914 0000 80B5     		push	{r7, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 7, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 28


 917              		.cfi_offset 14, -4
 918 0002 82B0     		sub	sp, sp, #8
 919              		.cfi_def_cfa_offset 16
 920 0004 00AF     		add	r7, sp, #0
 921              		.cfi_def_cfa_register 7
 922 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 923              		.loc 1 616 0
 924 0008 084B     		ldr	r3, .L63
 925 000a 084A     		ldr	r2, .L63
 926 000c 1268     		ldr	r2, [r2]
 927 000e 1204     		lsls	r2, r2, #16
 928 0010 120C     		lsrs	r2, r2, #16
 929 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 930              		.loc 1 617 0
 931 0014 054B     		ldr	r3, .L63
 932 0016 054A     		ldr	r2, .L63
 933 0018 1168     		ldr	r1, [r2]
 934 001a 7A68     		ldr	r2, [r7, #4]
 935 001c 1204     		lsls	r2, r2, #16
 936 001e 0A43     		orrs	r2, r1
 937 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 938              		.loc 1 618 0
 939 0022 C046     		nop
 940 0024 BD46     		mov	sp, r7
 941 0026 02B0     		add	sp, sp, #8
 942              		@ sp needed
 943 0028 80BD     		pop	{r7, pc}
 944              	.L64:
 945 002a C046     		.align	2
 946              	.L63:
 947 002c 18003A40 		.word	1077542936
 948              		.cfi_endproc
 949              	.LFE13:
 950              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 951              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 952              		.align	2
 953              		.global	ADC_SetLimitMask
 954              		.code	16
 955              		.thumb_func
 956              		.type	ADC_SetLimitMask, %function
 957              	ADC_SetLimitMask:
 958              	.LFB14:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 29


 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 959              		.loc 1 639 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 8
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963 0000 80B5     		push	{r7, lr}
 964              		.cfi_def_cfa_offset 8
 965              		.cfi_offset 7, -8
 966              		.cfi_offset 14, -4
 967 0002 82B0     		sub	sp, sp, #8
 968              		.cfi_def_cfa_offset 16
 969 0004 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 972              		.loc 1 640 0
 973 0008 044B     		ldr	r3, .L66
 974 000a 7A68     		ldr	r2, [r7, #4]
 975 000c 0121     		movs	r1, #1
 976 000e 0A40     		ands	r2, r1
 977 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 978              		.loc 1 641 0
 979 0012 C046     		nop
 980 0014 BD46     		mov	sp, r7
 981 0016 02B0     		add	sp, sp, #8
 982              		@ sp needed
 983 0018 80BD     		pop	{r7, pc}
 984              	.L67:
 985 001a C046     		.align	2
 986              	.L66:
 987 001c 38023A40 		.word	1077543480
 988              		.cfi_endproc
 989              	.LFE14:
 990              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 991              		.section	.text.ADC_SetSatMask,"ax",%progbits
 992              		.align	2
 993              		.global	ADC_SetSatMask
 994              		.code	16
 995              		.thumb_func
 996              		.type	ADC_SetSatMask, %function
 997              	ADC_SetSatMask:
 998              	.LFB15:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 30


 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 999              		.loc 1 662 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003 0000 80B5     		push	{r7, lr}
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 7, -8
 1006              		.cfi_offset 14, -4
 1007 0002 82B0     		sub	sp, sp, #8
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 1012              		.loc 1 663 0
 1013 0008 044B     		ldr	r3, .L69
 1014 000a 7A68     		ldr	r2, [r7, #4]
 1015 000c 0121     		movs	r1, #1
 1016 000e 0A40     		ands	r2, r1
 1017 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 1018              		.loc 1 664 0
 1019 0012 C046     		nop
 1020 0014 BD46     		mov	sp, r7
 1021 0016 02B0     		add	sp, sp, #8
 1022              		@ sp needed
 1023 0018 80BD     		pop	{r7, pc}
 1024              	.L70:
 1025 001a C046     		.align	2
 1026              	.L69:
 1027 001c 28023A40 		.word	1077543464
 1028              		.cfi_endproc
 1029              	.LFE15:
 1030              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 1031              		.section	.text.ADC_SetOffset,"ax",%progbits
 1032              		.align	2
 1033              		.global	ADC_SetOffset
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	ADC_SetOffset, %function
 1037              	ADC_SetOffset:
 1038              	.LFB16:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 31


 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 1039              		.loc 1 690 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 8
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 82B0     		sub	sp, sp, #8
 1048              		.cfi_def_cfa_offset 16
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 1052 0008 0A00     		movs	r2, r1
 1053 000a BB1C     		adds	r3, r7, #2
 1054 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1055              		.loc 1 692 0
 1056 000e 7B68     		ldr	r3, [r7, #4]
 1057 0010 012B     		cmp	r3, #1
 1058 0012 02D9     		bls	.L72
 1059              		.loc 1 692 0 is_stmt 0 discriminator 1
 1060 0014 0020     		movs	r0, #0
 1061 0016 FFF7FEFF 		bl	CyHalt
 1062              	.L72:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 1063              		.loc 1 694 0 is_stmt 1
 1064 001a 054B     		ldr	r3, .L73
 1065 001c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 32


 1066 001e 5200     		lsls	r2, r2, #1
 1067 0020 B91C     		adds	r1, r7, #2
 1068 0022 0988     		ldrh	r1, [r1]
 1069 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 1070              		.loc 1 695 0
 1071 0026 C046     		nop
 1072 0028 BD46     		mov	sp, r7
 1073 002a 02B0     		add	sp, sp, #8
 1074              		@ sp needed
 1075 002c 80BD     		pop	{r7, pc}
 1076              	.L74:
 1077 002e C046     		.align	2
 1078              	.L73:
 1079 0030 00000000 		.word	ADC_offset
 1080              		.cfi_endproc
 1081              	.LFE16:
 1082              		.size	ADC_SetOffset, .-ADC_SetOffset
 1083              		.section	.text.ADC_SetGain,"ax",%progbits
 1084              		.align	2
 1085              		.global	ADC_SetGain
 1086              		.code	16
 1087              		.thumb_func
 1088              		.type	ADC_SetGain, %function
 1089              	ADC_SetGain:
 1090              	.LFB17:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 1091              		.loc 1 724 0
 1092              		.cfi_startproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 33


 1093              		@ args = 0, pretend = 0, frame = 8
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095 0000 80B5     		push	{r7, lr}
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 82B0     		sub	sp, sp, #8
 1100              		.cfi_def_cfa_offset 16
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 7860     		str	r0, [r7, #4]
 1104 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1105              		.loc 1 726 0
 1106 000a 7B68     		ldr	r3, [r7, #4]
 1107 000c 012B     		cmp	r3, #1
 1108 000e 02D9     		bls	.L76
 1109              		.loc 1 726 0 is_stmt 0 discriminator 1
 1110 0010 0020     		movs	r0, #0
 1111 0012 FFF7FEFF 		bl	CyHalt
 1112              	.L76:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 1113              		.loc 1 728 0 is_stmt 1
 1114 0016 044B     		ldr	r3, .L77
 1115 0018 7A68     		ldr	r2, [r7, #4]
 1116 001a 9200     		lsls	r2, r2, #2
 1117 001c 3968     		ldr	r1, [r7]
 1118 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 1119              		.loc 1 729 0
 1120 0020 C046     		nop
 1121 0022 BD46     		mov	sp, r7
 1122 0024 02B0     		add	sp, sp, #8
 1123              		@ sp needed
 1124 0026 80BD     		pop	{r7, pc}
 1125              	.L78:
 1126              		.align	2
 1127              	.L77:
 1128 0028 00000000 		.word	ADC_countsPer10Volt
 1129              		.cfi_endproc
 1130              	.LFE17:
 1131              		.size	ADC_SetGain, .-ADC_SetGain
 1132              		.global	__aeabi_idiv
 1133              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1134              		.align	2
 1135              		.global	ADC_CountsTo_mVolts
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	ADC_CountsTo_mVolts, %function
 1139              	ADC_CountsTo_mVolts:
 1140              	.LFB18:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 34


 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 1141              		.loc 1 757 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 16
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145 0000 80B5     		push	{r7, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 84B0     		sub	sp, sp, #16
 1150              		.cfi_def_cfa_offset 24
 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 1154 0008 0A00     		movs	r2, r1
 1155 000a BB1C     		adds	r3, r7, #2
 1156 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1157              		.loc 1 761 0
 1158 000e 7B68     		ldr	r3, [r7, #4]
 1159 0010 012B     		cmp	r3, #1
 1160 0012 02D9     		bls	.L80
 1161              		.loc 1 761 0 is_stmt 0 discriminator 1
 1162 0014 0020     		movs	r0, #0
 1163 0016 FFF7FEFF 		bl	CyHalt
 1164              	.L80:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 35


 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1165              		.loc 1 772 0 is_stmt 1
 1166 001a 1E4B     		ldr	r3, .L86
 1167 001c 7A68     		ldr	r2, [r7, #4]
 1168 001e 5200     		lsls	r2, r2, #1
 1169 0020 D35A     		ldrh	r3, [r2, r3]
 1170 0022 19B2     		sxth	r1, r3
 1171 0024 BB1C     		adds	r3, r7, #2
 1172 0026 1A88     		ldrh	r2, [r3]
 1173 0028 8BB2     		uxth	r3, r1
 1174 002a D31A     		subs	r3, r2, r3
 1175 002c 9AB2     		uxth	r2, r3
 1176 002e BB1C     		adds	r3, r7, #2
 1177 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1178              		.loc 1 774 0
 1179 0032 BB1C     		adds	r3, r7, #2
 1180 0034 0022     		movs	r2, #0
 1181 0036 9B5E     		ldrsh	r3, [r3, r2]
 1182 0038 174A     		ldr	r2, .L86+4
 1183 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1184              		.loc 1 775 0
 1185 003c BB1C     		adds	r3, r7, #2
 1186 003e 0021     		movs	r1, #0
 1187 0040 5B5E     		ldrsh	r3, [r3, r1]
 1188 0042 002B     		cmp	r3, #0
 1189 0044 08DD     		ble	.L81
 1190              		.loc 1 775 0 is_stmt 0 discriminator 1
 1191 0046 154B     		ldr	r3, .L86+8
 1192 0048 7968     		ldr	r1, [r7, #4]
 1193 004a 8900     		lsls	r1, r1, #2
 1194 004c CB58     		ldr	r3, [r1, r3]
 1195 004e 002B     		cmp	r3, #0
 1196 0050 00DA     		bge	.L82
 1197 0052 0133     		adds	r3, r3, #1
 1198              	.L82:
 1199 0054 5B10     		asrs	r3, r3, #1
 1200 0056 08E0     		b	.L83
 1201              	.L81:
 1202              		.loc 1 775 0 discriminator 2
 1203 0058 104B     		ldr	r3, .L86+8
 1204 005a 7968     		ldr	r1, [r7, #4]
 1205 005c 8900     		lsls	r1, r1, #2
 1206 005e CB58     		ldr	r3, [r1, r3]
 1207 0060 002B     		cmp	r3, #0
 1208 0062 00DA     		bge	.L84
 1209 0064 0133     		adds	r3, r3, #1
 1210              	.L84:
 1211 0066 5B10     		asrs	r3, r3, #1
 1212 0068 5B42     		rsbs	r3, r3, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 36


 1213              	.L83:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1214              		.loc 1 774 0 is_stmt 1
 1215 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1216              		.loc 1 776 0
 1217 006c 0B4B     		ldr	r3, .L86+8
 1218 006e 7A68     		ldr	r2, [r7, #4]
 1219 0070 9200     		lsls	r2, r2, #2
 1220 0072 D358     		ldr	r3, [r2, r3]
 1221 0074 1900     		movs	r1, r3
 1222 0076 FFF7FEFF 		bl	__aeabi_idiv
 1223 007a 0300     		movs	r3, r0
 1224 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1225              		.loc 1 774 0
 1226 007e 0E23     		movs	r3, #14
 1227 0080 FB18     		adds	r3, r7, r3
 1228 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1229              		.loc 1 778 0
 1230 0084 0E23     		movs	r3, #14
 1231 0086 FB18     		adds	r3, r7, r3
 1232 0088 0022     		movs	r2, #0
 1233 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC.c ****     }
 1234              		.loc 1 779 0
 1235 008c 1800     		movs	r0, r3
 1236 008e BD46     		mov	sp, r7
 1237 0090 04B0     		add	sp, sp, #16
 1238              		@ sp needed
 1239 0092 80BD     		pop	{r7, pc}
 1240              	.L87:
 1241              		.align	2
 1242              	.L86:
 1243 0094 00000000 		.word	ADC_offset
 1244 0098 10270000 		.word	10000
 1245 009c 00000000 		.word	ADC_countsPer10Volt
 1246              		.cfi_endproc
 1247              	.LFE18:
 1248              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1249              		.global	__aeabi_lmul
 1250              		.global	__aeabi_ldivmod
 1251              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1252              		.align	2
 1253              		.global	ADC_CountsTo_uVolts
 1254              		.code	16
 1255              		.thumb_func
 1256              		.type	ADC_CountsTo_uVolts, %function
 1257              	ADC_CountsTo_uVolts:
 1258              	.LFB19:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 37


 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1259              		.loc 1 811 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 24
 1262              		@ frame_needed = 1, uses_anonymous_args = 0
 1263 0000 B0B5     		push	{r4, r5, r7, lr}
 1264              		.cfi_def_cfa_offset 16
 1265              		.cfi_offset 4, -16
 1266              		.cfi_offset 5, -12
 1267              		.cfi_offset 7, -8
 1268              		.cfi_offset 14, -4
 1269 0002 86B0     		sub	sp, sp, #24
 1270              		.cfi_def_cfa_offset 40
 1271 0004 00AF     		add	r7, sp, #0
 1272              		.cfi_def_cfa_register 7
 1273 0006 F860     		str	r0, [r7, #12]
 1274 0008 0A00     		movs	r2, r1
 1275 000a 0A23     		movs	r3, #10
 1276 000c FB18     		adds	r3, r7, r3
 1277 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1278              		.loc 1 815 0
 1279 0010 FB68     		ldr	r3, [r7, #12]
 1280 0012 012B     		cmp	r3, #1
 1281 0014 02D9     		bls	.L89
 1282              		.loc 1 815 0 is_stmt 0 discriminator 1
 1283 0016 0020     		movs	r0, #0
 1284 0018 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 38


 1285              	.L89:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1286              		.loc 1 826 0 is_stmt 1
 1287 001c 194B     		ldr	r3, .L91
 1288 001e FA68     		ldr	r2, [r7, #12]
 1289 0020 5200     		lsls	r2, r2, #1
 1290 0022 D35A     		ldrh	r3, [r2, r3]
 1291 0024 19B2     		sxth	r1, r3
 1292 0026 0A23     		movs	r3, #10
 1293 0028 FB18     		adds	r3, r7, r3
 1294 002a 1A88     		ldrh	r2, [r3]
 1295 002c 8BB2     		uxth	r3, r1
 1296 002e D31A     		subs	r3, r2, r3
 1297 0030 9AB2     		uxth	r2, r3
 1298 0032 0A23     		movs	r3, #10
 1299 0034 FB18     		adds	r3, r7, r3
 1300 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1301              		.loc 1 828 0
 1302 0038 0A23     		movs	r3, #10
 1303 003a FB18     		adds	r3, r7, r3
 1304 003c 1B88     		ldrh	r3, [r3]
 1305 003e 1BB2     		sxth	r3, r3
 1306 0040 3B60     		str	r3, [r7]
 1307 0042 DB17     		asrs	r3, r3, #31
 1308 0044 7B60     		str	r3, [r7, #4]
 1309 0046 104A     		ldr	r2, .L91+4
 1310 0048 0023     		movs	r3, #0
 1311 004a 3868     		ldr	r0, [r7]
 1312 004c 7968     		ldr	r1, [r7, #4]
 1313 004e FFF7FEFF 		bl	__aeabi_lmul
 1314 0052 0200     		movs	r2, r0
 1315 0054 0B00     		movs	r3, r1
 1316 0056 1000     		movs	r0, r2
 1317 0058 1900     		movs	r1, r3
 1318 005a 0C4B     		ldr	r3, .L91+8
 1319 005c FA68     		ldr	r2, [r7, #12]
 1320 005e 9200     		lsls	r2, r2, #2
 1321 0060 D358     		ldr	r3, [r2, r3]
 1322 0062 1C00     		movs	r4, r3
 1323 0064 DB17     		asrs	r3, r3, #31
 1324 0066 1D00     		movs	r5, r3
 1325 0068 2200     		movs	r2, r4
 1326 006a 2B00     		movs	r3, r5
 1327 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1328 0070 0300     		movs	r3, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 39


 1329 0072 0C00     		movs	r4, r1
 1330 0074 3B61     		str	r3, [r7, #16]
 1331 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1332              		.loc 1 830 0
 1333 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1334              		.loc 1 831 0
 1335 007a 1800     		movs	r0, r3
 1336 007c BD46     		mov	sp, r7
 1337 007e 06B0     		add	sp, sp, #24
 1338              		@ sp needed
 1339 0080 B0BD     		pop	{r4, r5, r7, pc}
 1340              	.L92:
 1341 0082 C046     		.align	2
 1342              	.L91:
 1343 0084 00000000 		.word	ADC_offset
 1344 0088 80969800 		.word	10000000
 1345 008c 00000000 		.word	ADC_countsPer10Volt
 1346              		.cfi_endproc
 1347              	.LFE19:
 1348              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1349              		.global	__aeabi_i2f
 1350              		.global	__aeabi_fmul
 1351              		.global	__aeabi_fdiv
 1352              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1353              		.align	2
 1354              		.global	ADC_CountsTo_Volts
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	ADC_CountsTo_Volts, %function
 1358              	ADC_CountsTo_Volts:
 1359              	.LFB20:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 40


 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1360              		.loc 1 856 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 16
 1363              		@ frame_needed = 1, uses_anonymous_args = 0
 1364 0000 90B5     		push	{r4, r7, lr}
 1365              		.cfi_def_cfa_offset 12
 1366              		.cfi_offset 4, -12
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 85B0     		sub	sp, sp, #20
 1370              		.cfi_def_cfa_offset 32
 1371 0004 00AF     		add	r7, sp, #0
 1372              		.cfi_def_cfa_register 7
 1373 0006 7860     		str	r0, [r7, #4]
 1374 0008 0A00     		movs	r2, r1
 1375 000a BB1C     		adds	r3, r7, #2
 1376 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1377              		.loc 1 860 0
 1378 000e 7B68     		ldr	r3, [r7, #4]
 1379 0010 012B     		cmp	r3, #1
 1380 0012 02D9     		bls	.L94
 1381              		.loc 1 860 0 is_stmt 0 discriminator 1
 1382 0014 0020     		movs	r0, #0
 1383 0016 FFF7FEFF 		bl	CyHalt
 1384              	.L94:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1385              		.loc 1 871 0 is_stmt 1
 1386 001a 164B     		ldr	r3, .L96
 1387 001c 7A68     		ldr	r2, [r7, #4]
 1388 001e 5200     		lsls	r2, r2, #1
 1389 0020 D35A     		ldrh	r3, [r2, r3]
 1390 0022 19B2     		sxth	r1, r3
 1391 0024 BB1C     		adds	r3, r7, #2
 1392 0026 1A88     		ldrh	r2, [r3]
 1393 0028 8BB2     		uxth	r3, r1
 1394 002a D31A     		subs	r3, r2, r3
 1395 002c 9AB2     		uxth	r2, r3
 1396 002e BB1C     		adds	r3, r7, #2
 1397 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 41


 1398              		.loc 1 873 0
 1399 0032 BB1C     		adds	r3, r7, #2
 1400 0034 0022     		movs	r2, #0
 1401 0036 9B5E     		ldrsh	r3, [r3, r2]
 1402 0038 1800     		movs	r0, r3
 1403 003a FFF7FEFF 		bl	__aeabi_i2f
 1404 003e 031C     		adds	r3, r0, #0
 1405 0040 0D49     		ldr	r1, .L96+4
 1406 0042 181C     		adds	r0, r3, #0
 1407 0044 FFF7FEFF 		bl	__aeabi_fmul
 1408 0048 031C     		adds	r3, r0, #0
 1409 004a 1C1C     		adds	r4, r3, #0
 1410 004c 0B4B     		ldr	r3, .L96+8
 1411 004e 7A68     		ldr	r2, [r7, #4]
 1412 0050 9200     		lsls	r2, r2, #2
 1413 0052 D358     		ldr	r3, [r2, r3]
 1414 0054 1800     		movs	r0, r3
 1415 0056 FFF7FEFF 		bl	__aeabi_i2f
 1416 005a 031C     		adds	r3, r0, #0
 1417 005c 191C     		adds	r1, r3, #0
 1418 005e 201C     		adds	r0, r4, #0
 1419 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1420 0064 031C     		adds	r3, r0, #0
 1421 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1422              		.loc 1 875 0
 1423 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1424              		.loc 1 876 0
 1425 006a 181C     		adds	r0, r3, #0
 1426 006c BD46     		mov	sp, r7
 1427 006e 05B0     		add	sp, sp, #20
 1428              		@ sp needed
 1429 0070 90BD     		pop	{r4, r7, pc}
 1430              	.L97:
 1431 0072 C046     		.align	2
 1432              	.L96:
 1433 0074 00000000 		.word	ADC_offset
 1434 0078 00002041 		.word	1092616192
 1435 007c 00000000 		.word	ADC_countsPer10Volt
 1436              		.cfi_endproc
 1437              	.LFE20:
 1438              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1439              		.section	.rodata
 1440              		.align	2
 1441              		.type	ADC_InputsPlacement.4922, %object
 1442              		.size	ADC_InputsPlacement.4922, 2
 1443              	ADC_InputsPlacement.4922:
 1444 0008 00       		.byte	0
 1445 0009 70       		.byte	112
 1446              		.text
 1447              	.Letext0:
 1448              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1449              		.section	.debug_info,"",%progbits
 1450              	.Ldebug_info0:
 1451 0000 CA040000 		.4byte	0x4ca
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 42


 1452 0004 0400     		.2byte	0x4
 1453 0006 00000000 		.4byte	.Ldebug_abbrev0
 1454 000a 04       		.byte	0x4
 1455 000b 01       		.uleb128 0x1
 1456 000c 2D020000 		.4byte	.LASF62
 1457 0010 0C       		.byte	0xc
 1458 0011 3D030000 		.4byte	.LASF63
 1459 0015 76010000 		.4byte	.LASF64
 1460 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1461 001d 00000000 		.4byte	0
 1462 0021 00000000 		.4byte	.Ldebug_line0
 1463 0025 02       		.uleb128 0x2
 1464 0026 01       		.byte	0x1
 1465 0027 06       		.byte	0x6
 1466 0028 7C000000 		.4byte	.LASF0
 1467 002c 02       		.uleb128 0x2
 1468 002d 01       		.byte	0x1
 1469 002e 08       		.byte	0x8
 1470 002f 9A030000 		.4byte	.LASF1
 1471 0033 02       		.uleb128 0x2
 1472 0034 02       		.byte	0x2
 1473 0035 05       		.byte	0x5
 1474 0036 B3030000 		.4byte	.LASF2
 1475 003a 02       		.uleb128 0x2
 1476 003b 02       		.byte	0x2
 1477 003c 07       		.byte	0x7
 1478 003d 53010000 		.4byte	.LASF3
 1479 0041 02       		.uleb128 0x2
 1480 0042 04       		.byte	0x4
 1481 0043 05       		.byte	0x5
 1482 0044 9F000000 		.4byte	.LASF4
 1483 0048 02       		.uleb128 0x2
 1484 0049 04       		.byte	0x4
 1485 004a 07       		.byte	0x7
 1486 004b 22010000 		.4byte	.LASF5
 1487 004f 02       		.uleb128 0x2
 1488 0050 08       		.byte	0x8
 1489 0051 05       		.byte	0x5
 1490 0052 6E000000 		.4byte	.LASF6
 1491 0056 02       		.uleb128 0x2
 1492 0057 08       		.byte	0x8
 1493 0058 07       		.byte	0x7
 1494 0059 32000000 		.4byte	.LASF7
 1495 005d 03       		.uleb128 0x3
 1496 005e 04       		.byte	0x4
 1497 005f 05       		.byte	0x5
 1498 0060 696E7400 		.ascii	"int\000"
 1499 0064 02       		.uleb128 0x2
 1500 0065 04       		.byte	0x4
 1501 0066 07       		.byte	0x7
 1502 0067 0E010000 		.4byte	.LASF8
 1503 006b 04       		.uleb128 0x4
 1504 006c D0000000 		.4byte	.LASF9
 1505 0070 02       		.byte	0x2
 1506 0071 D201     		.2byte	0x1d2
 1507 0073 2C000000 		.4byte	0x2c
 1508 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 43


 1509 0078 00000000 		.4byte	.LASF10
 1510 007c 02       		.byte	0x2
 1511 007d D301     		.2byte	0x1d3
 1512 007f 3A000000 		.4byte	0x3a
 1513 0083 04       		.uleb128 0x4
 1514 0084 DD000000 		.4byte	.LASF11
 1515 0088 02       		.byte	0x2
 1516 0089 D401     		.2byte	0x1d4
 1517 008b 48000000 		.4byte	0x48
 1518 008f 04       		.uleb128 0x4
 1519 0090 05040000 		.4byte	.LASF12
 1520 0094 02       		.byte	0x2
 1521 0095 D601     		.2byte	0x1d6
 1522 0097 33000000 		.4byte	0x33
 1523 009b 04       		.uleb128 0x4
 1524 009c 8F000000 		.4byte	.LASF13
 1525 00a0 02       		.byte	0x2
 1526 00a1 D701     		.2byte	0x1d7
 1527 00a3 41000000 		.4byte	0x41
 1528 00a7 04       		.uleb128 0x4
 1529 00a8 C8020000 		.4byte	.LASF14
 1530 00ac 02       		.byte	0x2
 1531 00ad D801     		.2byte	0x1d8
 1532 00af B3000000 		.4byte	0xb3
 1533 00b3 02       		.uleb128 0x2
 1534 00b4 04       		.byte	0x4
 1535 00b5 04       		.byte	0x4
 1536 00b6 66030000 		.4byte	.LASF15
 1537 00ba 02       		.uleb128 0x2
 1538 00bb 08       		.byte	0x8
 1539 00bc 04       		.byte	0x4
 1540 00bd D6000000 		.4byte	.LASF16
 1541 00c1 04       		.uleb128 0x4
 1542 00c2 27030000 		.4byte	.LASF17
 1543 00c6 02       		.byte	0x2
 1544 00c7 DD01     		.2byte	0x1dd
 1545 00c9 4F000000 		.4byte	0x4f
 1546 00cd 02       		.uleb128 0x2
 1547 00ce 01       		.byte	0x1
 1548 00cf 08       		.byte	0x8
 1549 00d0 D1030000 		.4byte	.LASF18
 1550 00d4 04       		.uleb128 0x4
 1551 00d5 C2020000 		.4byte	.LASF19
 1552 00d9 02       		.byte	0x2
 1553 00da 7E02     		.2byte	0x27e
 1554 00dc E0000000 		.4byte	0xe0
 1555 00e0 05       		.uleb128 0x5
 1556 00e1 83000000 		.4byte	0x83
 1557 00e5 02       		.uleb128 0x2
 1558 00e6 08       		.byte	0x8
 1559 00e7 04       		.byte	0x4
 1560 00e8 E2020000 		.4byte	.LASF20
 1561 00ec 02       		.uleb128 0x2
 1562 00ed 04       		.byte	0x4
 1563 00ee 07       		.byte	0x7
 1564 00ef D0020000 		.4byte	.LASF21
 1565 00f3 06       		.uleb128 0x6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 44


 1566 00f4 95000000 		.4byte	.LASF26
 1567 00f8 01       		.byte	0x1
 1568 00f9 3F       		.byte	0x3f
 1569 00fa 00000000 		.4byte	.LFB2
 1570 00fe 24000000 		.4byte	.LFE2-.LFB2
 1571 0102 01       		.uleb128 0x1
 1572 0103 9C       		.byte	0x9c
 1573 0104 07       		.uleb128 0x7
 1574 0105 29000000 		.4byte	.LASF37
 1575 0109 01       		.byte	0x1
 1576 010a 5E       		.byte	0x5e
 1577 010b 00000000 		.4byte	.LFB3
 1578 010f 6C020000 		.4byte	.LFE3-.LFB3
 1579 0113 01       		.uleb128 0x1
 1580 0114 9C       		.byte	0x9c
 1581 0115 55010000 		.4byte	0x155
 1582 0119 08       		.uleb128 0x8
 1583 011a C6030000 		.4byte	.LASF22
 1584 011e 01       		.byte	0x1
 1585 011f 60       		.byte	0x60
 1586 0120 83000000 		.4byte	0x83
 1587 0124 02       		.uleb128 0x2
 1588 0125 91       		.byte	0x91
 1589 0126 74       		.sleb128 -12
 1590 0127 08       		.uleb128 0x8
 1591 0128 49010000 		.4byte	.LASF23
 1592 012c 01       		.byte	0x1
 1593 012d 61       		.byte	0x61
 1594 012e 83000000 		.4byte	0x83
 1595 0132 02       		.uleb128 0x2
 1596 0133 91       		.byte	0x91
 1597 0134 6C       		.sleb128 -20
 1598 0135 08       		.uleb128 0x8
 1599 0136 0F000000 		.4byte	.LASF24
 1600 013a 01       		.byte	0x1
 1601 013b 62       		.byte	0x62
 1602 013c 9B000000 		.4byte	0x9b
 1603 0140 02       		.uleb128 0x2
 1604 0141 91       		.byte	0x91
 1605 0142 70       		.sleb128 -16
 1606 0143 08       		.uleb128 0x8
 1607 0144 49000000 		.4byte	.LASF25
 1608 0148 01       		.byte	0x1
 1609 0149 65       		.byte	0x65
 1610 014a 6A010000 		.4byte	0x16a
 1611 014e 05       		.uleb128 0x5
 1612 014f 03       		.byte	0x3
 1613 0150 08000000 		.4byte	ADC_InputsPlacement.4922
 1614 0154 00       		.byte	0
 1615 0155 09       		.uleb128 0x9
 1616 0156 65010000 		.4byte	0x165
 1617 015a 65010000 		.4byte	0x165
 1618 015e 0A       		.uleb128 0xa
 1619 015f EC000000 		.4byte	0xec
 1620 0163 01       		.byte	0x1
 1621 0164 00       		.byte	0
 1622 0165 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 45


 1623 0166 6B000000 		.4byte	0x6b
 1624 016a 0B       		.uleb128 0xb
 1625 016b 55010000 		.4byte	0x155
 1626 016f 0C       		.uleb128 0xc
 1627 0170 FA030000 		.4byte	.LASF27
 1628 0174 01       		.byte	0x1
 1629 0175 4A01     		.2byte	0x14a
 1630 0177 00000000 		.4byte	.LFB4
 1631 017b 38000000 		.4byte	.LFE4-.LFB4
 1632 017f 01       		.uleb128 0x1
 1633 0180 9C       		.byte	0x9c
 1634 0181 0D       		.uleb128 0xd
 1635 0182 BD030000 		.4byte	.LASF28
 1636 0186 01       		.byte	0x1
 1637 0187 6D01     		.2byte	0x16d
 1638 0189 00000000 		.4byte	.LFB5
 1639 018d 1C000000 		.4byte	.LFE5-.LFB5
 1640 0191 01       		.uleb128 0x1
 1641 0192 9C       		.byte	0x9c
 1642 0193 0D       		.uleb128 0xd
 1643 0194 5D000000 		.4byte	.LASF29
 1644 0198 01       		.byte	0x1
 1645 0199 8701     		.2byte	0x187
 1646 019b 00000000 		.4byte	.LFB6
 1647 019f 14000000 		.4byte	.LFE6-.LFB6
 1648 01a3 01       		.uleb128 0x1
 1649 01a4 9C       		.byte	0x9c
 1650 01a5 0D       		.uleb128 0xd
 1651 01a6 66010000 		.4byte	.LASF30
 1652 01aa 01       		.byte	0x1
 1653 01ab A001     		.2byte	0x1a0
 1654 01ad 00000000 		.4byte	.LFB7
 1655 01b1 0A000000 		.4byte	.LFE7-.LFB7
 1656 01b5 01       		.uleb128 0x1
 1657 01b6 9C       		.byte	0x9c
 1658 01b7 0E       		.uleb128 0xe
 1659 01b8 13030000 		.4byte	.LASF32
 1660 01bc 01       		.byte	0x1
 1661 01bd C201     		.2byte	0x1c2
 1662 01bf 83000000 		.4byte	0x83
 1663 01c3 00000000 		.4byte	.LFB8
 1664 01c7 7C000000 		.4byte	.LFE8-.LFB8
 1665 01cb 01       		.uleb128 0x1
 1666 01cc 9C       		.byte	0x9c
 1667 01cd F0010000 		.4byte	0x1f0
 1668 01d1 0F       		.uleb128 0xf
 1669 01d2 F5000000 		.4byte	.LASF34
 1670 01d6 01       		.byte	0x1
 1671 01d7 C201     		.2byte	0x1c2
 1672 01d9 83000000 		.4byte	0x83
 1673 01dd 02       		.uleb128 0x2
 1674 01de 91       		.byte	0x91
 1675 01df 6C       		.sleb128 -20
 1676 01e0 10       		.uleb128 0x10
 1677 01e1 88000000 		.4byte	.LASF31
 1678 01e5 01       		.byte	0x1
 1679 01e6 C401     		.2byte	0x1c4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 46


 1680 01e8 83000000 		.4byte	0x83
 1681 01ec 02       		.uleb128 0x2
 1682 01ed 91       		.byte	0x91
 1683 01ee 74       		.sleb128 -12
 1684 01ef 00       		.byte	0
 1685 01f0 11       		.uleb128 0x11
 1686 01f1 20040000 		.4byte	.LASF33
 1687 01f5 01       		.byte	0x1
 1688 01f6 F801     		.2byte	0x1f8
 1689 01f8 8F000000 		.4byte	0x8f
 1690 01fc 00000000 		.4byte	.LFB9
 1691 0200 4C000000 		.4byte	.LFE9-.LFB9
 1692 0204 01       		.uleb128 0x1
 1693 0205 9C       		.byte	0x9c
 1694 0206 29020000 		.4byte	0x229
 1695 020a 0F       		.uleb128 0xf
 1696 020b CC030000 		.4byte	.LASF35
 1697 020f 01       		.byte	0x1
 1698 0210 F801     		.2byte	0x1f8
 1699 0212 83000000 		.4byte	0x83
 1700 0216 02       		.uleb128 0x2
 1701 0217 91       		.byte	0x91
 1702 0218 6C       		.sleb128 -20
 1703 0219 10       		.uleb128 0x10
 1704 021a 19040000 		.4byte	.LASF36
 1705 021e 01       		.byte	0x1
 1706 021f FA01     		.2byte	0x1fa
 1707 0221 83000000 		.4byte	0x83
 1708 0225 02       		.uleb128 0x2
 1709 0226 91       		.byte	0x91
 1710 0227 74       		.sleb128 -12
 1711 0228 00       		.byte	0
 1712 0229 12       		.uleb128 0x12
 1713 022a 2D030000 		.4byte	.LASF38
 1714 022e 01       		.byte	0x1
 1715 022f 2502     		.2byte	0x225
 1716 0231 00000000 		.4byte	.LFB10
 1717 0235 20000000 		.4byte	.LFE10-.LFB10
 1718 0239 01       		.uleb128 0x1
 1719 023a 9C       		.byte	0x9c
 1720 023b 4F020000 		.4byte	0x24f
 1721 023f 0F       		.uleb128 0xf
 1722 0240 E4000000 		.4byte	.LASF39
 1723 0244 01       		.byte	0x1
 1724 0245 2502     		.2byte	0x225
 1725 0247 83000000 		.4byte	0x83
 1726 024b 02       		.uleb128 0x2
 1727 024c 91       		.byte	0x91
 1728 024d 74       		.sleb128 -12
 1729 024e 00       		.byte	0
 1730 024f 0D       		.uleb128 0xd
 1731 0250 FF020000 		.4byte	.LASF40
 1732 0254 01       		.byte	0x1
 1733 0255 3B02     		.2byte	0x23b
 1734 0257 00000000 		.4byte	.LFB11
 1735 025b 1C000000 		.4byte	.LFE11-.LFB11
 1736 025f 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 47


 1737 0260 9C       		.byte	0x9c
 1738 0261 12       		.uleb128 0x12
 1739 0262 8A030000 		.4byte	.LASF41
 1740 0266 01       		.byte	0x1
 1741 0267 5102     		.2byte	0x251
 1742 0269 00000000 		.4byte	.LFB12
 1743 026d 30000000 		.4byte	.LFE12-.LFB12
 1744 0271 01       		.uleb128 0x1
 1745 0272 9C       		.byte	0x9c
 1746 0273 87020000 		.4byte	0x287
 1747 0277 0F       		.uleb128 0xf
 1748 0278 D9020000 		.4byte	.LASF42
 1749 027c 01       		.byte	0x1
 1750 027d 5102     		.2byte	0x251
 1751 027f 83000000 		.4byte	0x83
 1752 0283 02       		.uleb128 0x2
 1753 0284 91       		.byte	0x91
 1754 0285 74       		.sleb128 -12
 1755 0286 00       		.byte	0
 1756 0287 12       		.uleb128 0x12
 1757 0288 EE020000 		.4byte	.LASF43
 1758 028c 01       		.byte	0x1
 1759 028d 6602     		.2byte	0x266
 1760 028f 00000000 		.4byte	.LFB13
 1761 0293 30000000 		.4byte	.LFE13-.LFB13
 1762 0297 01       		.uleb128 0x1
 1763 0298 9C       		.byte	0x9c
 1764 0299 AD020000 		.4byte	0x2ad
 1765 029d 0F       		.uleb128 0xf
 1766 029e 6C030000 		.4byte	.LASF44
 1767 02a2 01       		.byte	0x1
 1768 02a3 6602     		.2byte	0x266
 1769 02a5 83000000 		.4byte	0x83
 1770 02a9 02       		.uleb128 0x2
 1771 02aa 91       		.byte	0x91
 1772 02ab 74       		.sleb128 -12
 1773 02ac 00       		.byte	0
 1774 02ad 12       		.uleb128 0x12
 1775 02ae FD000000 		.4byte	.LASF45
 1776 02b2 01       		.byte	0x1
 1777 02b3 7E02     		.2byte	0x27e
 1778 02b5 00000000 		.4byte	.LFB14
 1779 02b9 20000000 		.4byte	.LFE14-.LFB14
 1780 02bd 01       		.uleb128 0x1
 1781 02be 9C       		.byte	0x9c
 1782 02bf D3020000 		.4byte	0x2d3
 1783 02c3 0F       		.uleb128 0xf
 1784 02c4 E4000000 		.4byte	.LASF39
 1785 02c8 01       		.byte	0x1
 1786 02c9 7E02     		.2byte	0x27e
 1787 02cb 83000000 		.4byte	0x83
 1788 02cf 02       		.uleb128 0x2
 1789 02d0 91       		.byte	0x91
 1790 02d1 74       		.sleb128 -12
 1791 02d2 00       		.byte	0
 1792 02d3 12       		.uleb128 0x12
 1793 02d4 34010000 		.4byte	.LASF46
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 48


 1794 02d8 01       		.byte	0x1
 1795 02d9 9502     		.2byte	0x295
 1796 02db 00000000 		.4byte	.LFB15
 1797 02df 20000000 		.4byte	.LFE15-.LFB15
 1798 02e3 01       		.uleb128 0x1
 1799 02e4 9C       		.byte	0x9c
 1800 02e5 F9020000 		.4byte	0x2f9
 1801 02e9 0F       		.uleb128 0xf
 1802 02ea E4000000 		.4byte	.LASF39
 1803 02ee 01       		.byte	0x1
 1804 02ef 9502     		.2byte	0x295
 1805 02f1 83000000 		.4byte	0x83
 1806 02f5 02       		.uleb128 0x2
 1807 02f6 91       		.byte	0x91
 1808 02f7 74       		.sleb128 -12
 1809 02f8 00       		.byte	0
 1810 02f9 13       		.uleb128 0x13
 1811 02fa 0B040000 		.4byte	.LASF47
 1812 02fe 01       		.byte	0x1
 1813 02ff B102     		.2byte	0x2b1
 1814 0301 00000000 		.4byte	.LFB16
 1815 0305 34000000 		.4byte	.LFE16-.LFB16
 1816 0309 01       		.uleb128 0x1
 1817 030a 9C       		.byte	0x9c
 1818 030b 2E030000 		.4byte	0x32e
 1819 030f 0F       		.uleb128 0xf
 1820 0310 CC030000 		.4byte	.LASF35
 1821 0314 01       		.byte	0x1
 1822 0315 B102     		.2byte	0x2b1
 1823 0317 83000000 		.4byte	0x83
 1824 031b 02       		.uleb128 0x2
 1825 031c 91       		.byte	0x91
 1826 031d 74       		.sleb128 -12
 1827 031e 0F       		.uleb128 0xf
 1828 031f E9030000 		.4byte	.LASF48
 1829 0323 01       		.byte	0x1
 1830 0324 B102     		.2byte	0x2b1
 1831 0326 8F000000 		.4byte	0x8f
 1832 032a 02       		.uleb128 0x2
 1833 032b 91       		.byte	0x91
 1834 032c 72       		.sleb128 -14
 1835 032d 00       		.byte	0
 1836 032e 13       		.uleb128 0x13
 1837 032f 5A030000 		.4byte	.LASF49
 1838 0333 01       		.byte	0x1
 1839 0334 D302     		.2byte	0x2d3
 1840 0336 00000000 		.4byte	.LFB17
 1841 033a 2C000000 		.4byte	.LFE17-.LFB17
 1842 033e 01       		.uleb128 0x1
 1843 033f 9C       		.byte	0x9c
 1844 0340 63030000 		.4byte	0x363
 1845 0344 0F       		.uleb128 0xf
 1846 0345 CC030000 		.4byte	.LASF35
 1847 0349 01       		.byte	0x1
 1848 034a D302     		.2byte	0x2d3
 1849 034c 83000000 		.4byte	0x83
 1850 0350 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 49


 1851 0351 91       		.byte	0x91
 1852 0352 74       		.sleb128 -12
 1853 0353 0F       		.uleb128 0xf
 1854 0354 07000000 		.4byte	.LASF50
 1855 0358 01       		.byte	0x1
 1856 0359 D302     		.2byte	0x2d3
 1857 035b 9B000000 		.4byte	0x9b
 1858 035f 02       		.uleb128 0x2
 1859 0360 91       		.byte	0x91
 1860 0361 70       		.sleb128 -16
 1861 0362 00       		.byte	0
 1862 0363 11       		.uleb128 0x11
 1863 0364 76030000 		.4byte	.LASF51
 1864 0368 01       		.byte	0x1
 1865 0369 F402     		.2byte	0x2f4
 1866 036b 8F000000 		.4byte	0x8f
 1867 036f 00000000 		.4byte	.LFB18
 1868 0373 A0000000 		.4byte	.LFE18-.LFB18
 1869 0377 01       		.uleb128 0x1
 1870 0378 9C       		.byte	0x9c
 1871 0379 AB030000 		.4byte	0x3ab
 1872 037d 0F       		.uleb128 0xf
 1873 037e CC030000 		.4byte	.LASF35
 1874 0382 01       		.byte	0x1
 1875 0383 F402     		.2byte	0x2f4
 1876 0385 83000000 		.4byte	0x83
 1877 0389 02       		.uleb128 0x2
 1878 038a 91       		.byte	0x91
 1879 038b 6C       		.sleb128 -20
 1880 038c 0F       		.uleb128 0xf
 1881 038d F0030000 		.4byte	.LASF52
 1882 0391 01       		.byte	0x1
 1883 0392 F402     		.2byte	0x2f4
 1884 0394 8F000000 		.4byte	0x8f
 1885 0398 02       		.uleb128 0x2
 1886 0399 91       		.byte	0x91
 1887 039a 6A       		.sleb128 -22
 1888 039b 10       		.uleb128 0x10
 1889 039c BB020000 		.4byte	.LASF53
 1890 03a0 01       		.byte	0x1
 1891 03a1 F602     		.2byte	0x2f6
 1892 03a3 8F000000 		.4byte	0x8f
 1893 03a7 02       		.uleb128 0x2
 1894 03a8 91       		.byte	0x91
 1895 03a9 76       		.sleb128 -10
 1896 03aa 00       		.byte	0
 1897 03ab 11       		.uleb128 0x11
 1898 03ac A8000000 		.4byte	.LASF54
 1899 03b0 01       		.byte	0x1
 1900 03b1 2A03     		.2byte	0x32a
 1901 03b3 9B000000 		.4byte	0x9b
 1902 03b7 00000000 		.4byte	.LFB19
 1903 03bb 90000000 		.4byte	.LFE19-.LFB19
 1904 03bf 01       		.uleb128 0x1
 1905 03c0 9C       		.byte	0x9c
 1906 03c1 F3030000 		.4byte	0x3f3
 1907 03c5 0F       		.uleb128 0xf
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 50


 1908 03c6 CC030000 		.4byte	.LASF35
 1909 03ca 01       		.byte	0x1
 1910 03cb 2A03     		.2byte	0x32a
 1911 03cd 83000000 		.4byte	0x83
 1912 03d1 02       		.uleb128 0x2
 1913 03d2 91       		.byte	0x91
 1914 03d3 64       		.sleb128 -28
 1915 03d4 0F       		.uleb128 0xf
 1916 03d5 F0030000 		.4byte	.LASF52
 1917 03d9 01       		.byte	0x1
 1918 03da 2A03     		.2byte	0x32a
 1919 03dc 8F000000 		.4byte	0x8f
 1920 03e0 02       		.uleb128 0x2
 1921 03e1 91       		.byte	0x91
 1922 03e2 62       		.sleb128 -30
 1923 03e3 10       		.uleb128 0x10
 1924 03e4 1B010000 		.4byte	.LASF55
 1925 03e8 01       		.byte	0x1
 1926 03e9 2C03     		.2byte	0x32c
 1927 03eb C1000000 		.4byte	0xc1
 1928 03ef 02       		.uleb128 0x2
 1929 03f0 91       		.byte	0x91
 1930 03f1 68       		.sleb128 -24
 1931 03f2 00       		.byte	0
 1932 03f3 11       		.uleb128 0x11
 1933 03f4 16000000 		.4byte	.LASF56
 1934 03f8 01       		.byte	0x1
 1935 03f9 5703     		.2byte	0x357
 1936 03fb A7000000 		.4byte	0xa7
 1937 03ff 00000000 		.4byte	.LFB20
 1938 0403 80000000 		.4byte	.LFE20-.LFB20
 1939 0407 01       		.uleb128 0x1
 1940 0408 9C       		.byte	0x9c
 1941 0409 3B040000 		.4byte	0x43b
 1942 040d 0F       		.uleb128 0xf
 1943 040e CC030000 		.4byte	.LASF35
 1944 0412 01       		.byte	0x1
 1945 0413 5703     		.2byte	0x357
 1946 0415 83000000 		.4byte	0x83
 1947 0419 02       		.uleb128 0x2
 1948 041a 91       		.byte	0x91
 1949 041b 64       		.sleb128 -28
 1950 041c 0F       		.uleb128 0xf
 1951 041d F0030000 		.4byte	.LASF52
 1952 0421 01       		.byte	0x1
 1953 0422 5703     		.2byte	0x357
 1954 0424 8F000000 		.4byte	0x8f
 1955 0428 02       		.uleb128 0x2
 1956 0429 91       		.byte	0x91
 1957 042a 62       		.sleb128 -30
 1958 042b 10       		.uleb128 0x10
 1959 042c 43010000 		.4byte	.LASF57
 1960 0430 01       		.byte	0x1
 1961 0431 5903     		.2byte	0x359
 1962 0433 A7000000 		.4byte	0xa7
 1963 0437 02       		.uleb128 0x2
 1964 0438 91       		.byte	0x91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 51


 1965 0439 6C       		.sleb128 -20
 1966 043a 00       		.byte	0
 1967 043b 09       		.uleb128 0x9
 1968 043c 4B040000 		.4byte	0x44b
 1969 0440 4B040000 		.4byte	0x44b
 1970 0444 0A       		.uleb128 0xa
 1971 0445 EC000000 		.4byte	0xec
 1972 0449 01       		.byte	0x1
 1973 044a 00       		.byte	0
 1974 044b 0B       		.uleb128 0xb
 1975 044c 83000000 		.4byte	0x83
 1976 0450 08       		.uleb128 0x8
 1977 0451 D6030000 		.4byte	.LASF58
 1978 0455 01       		.byte	0x1
 1979 0456 21       		.byte	0x21
 1980 0457 61040000 		.4byte	0x461
 1981 045b 05       		.uleb128 0x5
 1982 045c 03       		.byte	0x3
 1983 045d 00000000 		.4byte	ADC_channelsConfig
 1984 0461 0B       		.uleb128 0xb
 1985 0462 3B040000 		.4byte	0x43b
 1986 0466 14       		.uleb128 0x14
 1987 0467 E9000000 		.4byte	.LASF59
 1988 046b 01       		.byte	0x1
 1989 046c 18       		.byte	0x18
 1990 046d 6B000000 		.4byte	0x6b
 1991 0471 05       		.uleb128 0x5
 1992 0472 03       		.byte	0x3
 1993 0473 00000000 		.4byte	ADC_initVar
 1994 0477 09       		.uleb128 0x9
 1995 0478 87040000 		.4byte	0x487
 1996 047c 87040000 		.4byte	0x487
 1997 0480 0A       		.uleb128 0xa
 1998 0481 EC000000 		.4byte	0xec
 1999 0485 01       		.byte	0x1
 2000 0486 00       		.byte	0
 2001 0487 05       		.uleb128 0x5
 2002 0488 8F000000 		.4byte	0x8f
 2003 048c 14       		.uleb128 0x14
 2004 048d A8030000 		.4byte	.LASF60
 2005 0491 01       		.byte	0x1
 2006 0492 19       		.byte	0x19
 2007 0493 9D040000 		.4byte	0x49d
 2008 0497 05       		.uleb128 0x5
 2009 0498 03       		.byte	0x3
 2010 0499 00000000 		.4byte	ADC_offset
 2011 049d 05       		.uleb128 0x5
 2012 049e 77040000 		.4byte	0x477
 2013 04a2 09       		.uleb128 0x9
 2014 04a3 B2040000 		.4byte	0x4b2
 2015 04a7 B2040000 		.4byte	0x4b2
 2016 04ab 0A       		.uleb128 0xa
 2017 04ac EC000000 		.4byte	0xec
 2018 04b0 01       		.byte	0x1
 2019 04b1 00       		.byte	0
 2020 04b2 05       		.uleb128 0x5
 2021 04b3 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 52


 2022 04b7 14       		.uleb128 0x14
 2023 04b8 BC000000 		.4byte	.LASF61
 2024 04bc 01       		.byte	0x1
 2025 04bd 1A       		.byte	0x1a
 2026 04be C8040000 		.4byte	0x4c8
 2027 04c2 05       		.uleb128 0x5
 2028 04c3 03       		.byte	0x3
 2029 04c4 00000000 		.4byte	ADC_countsPer10Volt
 2030 04c8 05       		.uleb128 0x5
 2031 04c9 A2040000 		.4byte	0x4a2
 2032 04cd 00       		.byte	0
 2033              		.section	.debug_abbrev,"",%progbits
 2034              	.Ldebug_abbrev0:
 2035 0000 01       		.uleb128 0x1
 2036 0001 11       		.uleb128 0x11
 2037 0002 01       		.byte	0x1
 2038 0003 25       		.uleb128 0x25
 2039 0004 0E       		.uleb128 0xe
 2040 0005 13       		.uleb128 0x13
 2041 0006 0B       		.uleb128 0xb
 2042 0007 03       		.uleb128 0x3
 2043 0008 0E       		.uleb128 0xe
 2044 0009 1B       		.uleb128 0x1b
 2045 000a 0E       		.uleb128 0xe
 2046 000b 55       		.uleb128 0x55
 2047 000c 17       		.uleb128 0x17
 2048 000d 11       		.uleb128 0x11
 2049 000e 01       		.uleb128 0x1
 2050 000f 10       		.uleb128 0x10
 2051 0010 17       		.uleb128 0x17
 2052 0011 00       		.byte	0
 2053 0012 00       		.byte	0
 2054 0013 02       		.uleb128 0x2
 2055 0014 24       		.uleb128 0x24
 2056 0015 00       		.byte	0
 2057 0016 0B       		.uleb128 0xb
 2058 0017 0B       		.uleb128 0xb
 2059 0018 3E       		.uleb128 0x3e
 2060 0019 0B       		.uleb128 0xb
 2061 001a 03       		.uleb128 0x3
 2062 001b 0E       		.uleb128 0xe
 2063 001c 00       		.byte	0
 2064 001d 00       		.byte	0
 2065 001e 03       		.uleb128 0x3
 2066 001f 24       		.uleb128 0x24
 2067 0020 00       		.byte	0
 2068 0021 0B       		.uleb128 0xb
 2069 0022 0B       		.uleb128 0xb
 2070 0023 3E       		.uleb128 0x3e
 2071 0024 0B       		.uleb128 0xb
 2072 0025 03       		.uleb128 0x3
 2073 0026 08       		.uleb128 0x8
 2074 0027 00       		.byte	0
 2075 0028 00       		.byte	0
 2076 0029 04       		.uleb128 0x4
 2077 002a 16       		.uleb128 0x16
 2078 002b 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 53


 2079 002c 03       		.uleb128 0x3
 2080 002d 0E       		.uleb128 0xe
 2081 002e 3A       		.uleb128 0x3a
 2082 002f 0B       		.uleb128 0xb
 2083 0030 3B       		.uleb128 0x3b
 2084 0031 05       		.uleb128 0x5
 2085 0032 49       		.uleb128 0x49
 2086 0033 13       		.uleb128 0x13
 2087 0034 00       		.byte	0
 2088 0035 00       		.byte	0
 2089 0036 05       		.uleb128 0x5
 2090 0037 35       		.uleb128 0x35
 2091 0038 00       		.byte	0
 2092 0039 49       		.uleb128 0x49
 2093 003a 13       		.uleb128 0x13
 2094 003b 00       		.byte	0
 2095 003c 00       		.byte	0
 2096 003d 06       		.uleb128 0x6
 2097 003e 2E       		.uleb128 0x2e
 2098 003f 00       		.byte	0
 2099 0040 3F       		.uleb128 0x3f
 2100 0041 19       		.uleb128 0x19
 2101 0042 03       		.uleb128 0x3
 2102 0043 0E       		.uleb128 0xe
 2103 0044 3A       		.uleb128 0x3a
 2104 0045 0B       		.uleb128 0xb
 2105 0046 3B       		.uleb128 0x3b
 2106 0047 0B       		.uleb128 0xb
 2107 0048 27       		.uleb128 0x27
 2108 0049 19       		.uleb128 0x19
 2109 004a 11       		.uleb128 0x11
 2110 004b 01       		.uleb128 0x1
 2111 004c 12       		.uleb128 0x12
 2112 004d 06       		.uleb128 0x6
 2113 004e 40       		.uleb128 0x40
 2114 004f 18       		.uleb128 0x18
 2115 0050 9642     		.uleb128 0x2116
 2116 0052 19       		.uleb128 0x19
 2117 0053 00       		.byte	0
 2118 0054 00       		.byte	0
 2119 0055 07       		.uleb128 0x7
 2120 0056 2E       		.uleb128 0x2e
 2121 0057 01       		.byte	0x1
 2122 0058 3F       		.uleb128 0x3f
 2123 0059 19       		.uleb128 0x19
 2124 005a 03       		.uleb128 0x3
 2125 005b 0E       		.uleb128 0xe
 2126 005c 3A       		.uleb128 0x3a
 2127 005d 0B       		.uleb128 0xb
 2128 005e 3B       		.uleb128 0x3b
 2129 005f 0B       		.uleb128 0xb
 2130 0060 27       		.uleb128 0x27
 2131 0061 19       		.uleb128 0x19
 2132 0062 11       		.uleb128 0x11
 2133 0063 01       		.uleb128 0x1
 2134 0064 12       		.uleb128 0x12
 2135 0065 06       		.uleb128 0x6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 54


 2136 0066 40       		.uleb128 0x40
 2137 0067 18       		.uleb128 0x18
 2138 0068 9642     		.uleb128 0x2116
 2139 006a 19       		.uleb128 0x19
 2140 006b 01       		.uleb128 0x1
 2141 006c 13       		.uleb128 0x13
 2142 006d 00       		.byte	0
 2143 006e 00       		.byte	0
 2144 006f 08       		.uleb128 0x8
 2145 0070 34       		.uleb128 0x34
 2146 0071 00       		.byte	0
 2147 0072 03       		.uleb128 0x3
 2148 0073 0E       		.uleb128 0xe
 2149 0074 3A       		.uleb128 0x3a
 2150 0075 0B       		.uleb128 0xb
 2151 0076 3B       		.uleb128 0x3b
 2152 0077 0B       		.uleb128 0xb
 2153 0078 49       		.uleb128 0x49
 2154 0079 13       		.uleb128 0x13
 2155 007a 02       		.uleb128 0x2
 2156 007b 18       		.uleb128 0x18
 2157 007c 00       		.byte	0
 2158 007d 00       		.byte	0
 2159 007e 09       		.uleb128 0x9
 2160 007f 01       		.uleb128 0x1
 2161 0080 01       		.byte	0x1
 2162 0081 49       		.uleb128 0x49
 2163 0082 13       		.uleb128 0x13
 2164 0083 01       		.uleb128 0x1
 2165 0084 13       		.uleb128 0x13
 2166 0085 00       		.byte	0
 2167 0086 00       		.byte	0
 2168 0087 0A       		.uleb128 0xa
 2169 0088 21       		.uleb128 0x21
 2170 0089 00       		.byte	0
 2171 008a 49       		.uleb128 0x49
 2172 008b 13       		.uleb128 0x13
 2173 008c 2F       		.uleb128 0x2f
 2174 008d 0B       		.uleb128 0xb
 2175 008e 00       		.byte	0
 2176 008f 00       		.byte	0
 2177 0090 0B       		.uleb128 0xb
 2178 0091 26       		.uleb128 0x26
 2179 0092 00       		.byte	0
 2180 0093 49       		.uleb128 0x49
 2181 0094 13       		.uleb128 0x13
 2182 0095 00       		.byte	0
 2183 0096 00       		.byte	0
 2184 0097 0C       		.uleb128 0xc
 2185 0098 2E       		.uleb128 0x2e
 2186 0099 00       		.byte	0
 2187 009a 3F       		.uleb128 0x3f
 2188 009b 19       		.uleb128 0x19
 2189 009c 03       		.uleb128 0x3
 2190 009d 0E       		.uleb128 0xe
 2191 009e 3A       		.uleb128 0x3a
 2192 009f 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 55


 2193 00a0 3B       		.uleb128 0x3b
 2194 00a1 05       		.uleb128 0x5
 2195 00a2 27       		.uleb128 0x27
 2196 00a3 19       		.uleb128 0x19
 2197 00a4 11       		.uleb128 0x11
 2198 00a5 01       		.uleb128 0x1
 2199 00a6 12       		.uleb128 0x12
 2200 00a7 06       		.uleb128 0x6
 2201 00a8 40       		.uleb128 0x40
 2202 00a9 18       		.uleb128 0x18
 2203 00aa 9642     		.uleb128 0x2116
 2204 00ac 19       		.uleb128 0x19
 2205 00ad 00       		.byte	0
 2206 00ae 00       		.byte	0
 2207 00af 0D       		.uleb128 0xd
 2208 00b0 2E       		.uleb128 0x2e
 2209 00b1 00       		.byte	0
 2210 00b2 3F       		.uleb128 0x3f
 2211 00b3 19       		.uleb128 0x19
 2212 00b4 03       		.uleb128 0x3
 2213 00b5 0E       		.uleb128 0xe
 2214 00b6 3A       		.uleb128 0x3a
 2215 00b7 0B       		.uleb128 0xb
 2216 00b8 3B       		.uleb128 0x3b
 2217 00b9 05       		.uleb128 0x5
 2218 00ba 27       		.uleb128 0x27
 2219 00bb 19       		.uleb128 0x19
 2220 00bc 11       		.uleb128 0x11
 2221 00bd 01       		.uleb128 0x1
 2222 00be 12       		.uleb128 0x12
 2223 00bf 06       		.uleb128 0x6
 2224 00c0 40       		.uleb128 0x40
 2225 00c1 18       		.uleb128 0x18
 2226 00c2 9742     		.uleb128 0x2117
 2227 00c4 19       		.uleb128 0x19
 2228 00c5 00       		.byte	0
 2229 00c6 00       		.byte	0
 2230 00c7 0E       		.uleb128 0xe
 2231 00c8 2E       		.uleb128 0x2e
 2232 00c9 01       		.byte	0x1
 2233 00ca 3F       		.uleb128 0x3f
 2234 00cb 19       		.uleb128 0x19
 2235 00cc 03       		.uleb128 0x3
 2236 00cd 0E       		.uleb128 0xe
 2237 00ce 3A       		.uleb128 0x3a
 2238 00cf 0B       		.uleb128 0xb
 2239 00d0 3B       		.uleb128 0x3b
 2240 00d1 05       		.uleb128 0x5
 2241 00d2 27       		.uleb128 0x27
 2242 00d3 19       		.uleb128 0x19
 2243 00d4 49       		.uleb128 0x49
 2244 00d5 13       		.uleb128 0x13
 2245 00d6 11       		.uleb128 0x11
 2246 00d7 01       		.uleb128 0x1
 2247 00d8 12       		.uleb128 0x12
 2248 00d9 06       		.uleb128 0x6
 2249 00da 40       		.uleb128 0x40
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 56


 2250 00db 18       		.uleb128 0x18
 2251 00dc 9742     		.uleb128 0x2117
 2252 00de 19       		.uleb128 0x19
 2253 00df 01       		.uleb128 0x1
 2254 00e0 13       		.uleb128 0x13
 2255 00e1 00       		.byte	0
 2256 00e2 00       		.byte	0
 2257 00e3 0F       		.uleb128 0xf
 2258 00e4 05       		.uleb128 0x5
 2259 00e5 00       		.byte	0
 2260 00e6 03       		.uleb128 0x3
 2261 00e7 0E       		.uleb128 0xe
 2262 00e8 3A       		.uleb128 0x3a
 2263 00e9 0B       		.uleb128 0xb
 2264 00ea 3B       		.uleb128 0x3b
 2265 00eb 05       		.uleb128 0x5
 2266 00ec 49       		.uleb128 0x49
 2267 00ed 13       		.uleb128 0x13
 2268 00ee 02       		.uleb128 0x2
 2269 00ef 18       		.uleb128 0x18
 2270 00f0 00       		.byte	0
 2271 00f1 00       		.byte	0
 2272 00f2 10       		.uleb128 0x10
 2273 00f3 34       		.uleb128 0x34
 2274 00f4 00       		.byte	0
 2275 00f5 03       		.uleb128 0x3
 2276 00f6 0E       		.uleb128 0xe
 2277 00f7 3A       		.uleb128 0x3a
 2278 00f8 0B       		.uleb128 0xb
 2279 00f9 3B       		.uleb128 0x3b
 2280 00fa 05       		.uleb128 0x5
 2281 00fb 49       		.uleb128 0x49
 2282 00fc 13       		.uleb128 0x13
 2283 00fd 02       		.uleb128 0x2
 2284 00fe 18       		.uleb128 0x18
 2285 00ff 00       		.byte	0
 2286 0100 00       		.byte	0
 2287 0101 11       		.uleb128 0x11
 2288 0102 2E       		.uleb128 0x2e
 2289 0103 01       		.byte	0x1
 2290 0104 3F       		.uleb128 0x3f
 2291 0105 19       		.uleb128 0x19
 2292 0106 03       		.uleb128 0x3
 2293 0107 0E       		.uleb128 0xe
 2294 0108 3A       		.uleb128 0x3a
 2295 0109 0B       		.uleb128 0xb
 2296 010a 3B       		.uleb128 0x3b
 2297 010b 05       		.uleb128 0x5
 2298 010c 27       		.uleb128 0x27
 2299 010d 19       		.uleb128 0x19
 2300 010e 49       		.uleb128 0x49
 2301 010f 13       		.uleb128 0x13
 2302 0110 11       		.uleb128 0x11
 2303 0111 01       		.uleb128 0x1
 2304 0112 12       		.uleb128 0x12
 2305 0113 06       		.uleb128 0x6
 2306 0114 40       		.uleb128 0x40
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 57


 2307 0115 18       		.uleb128 0x18
 2308 0116 9642     		.uleb128 0x2116
 2309 0118 19       		.uleb128 0x19
 2310 0119 01       		.uleb128 0x1
 2311 011a 13       		.uleb128 0x13
 2312 011b 00       		.byte	0
 2313 011c 00       		.byte	0
 2314 011d 12       		.uleb128 0x12
 2315 011e 2E       		.uleb128 0x2e
 2316 011f 01       		.byte	0x1
 2317 0120 3F       		.uleb128 0x3f
 2318 0121 19       		.uleb128 0x19
 2319 0122 03       		.uleb128 0x3
 2320 0123 0E       		.uleb128 0xe
 2321 0124 3A       		.uleb128 0x3a
 2322 0125 0B       		.uleb128 0xb
 2323 0126 3B       		.uleb128 0x3b
 2324 0127 05       		.uleb128 0x5
 2325 0128 27       		.uleb128 0x27
 2326 0129 19       		.uleb128 0x19
 2327 012a 11       		.uleb128 0x11
 2328 012b 01       		.uleb128 0x1
 2329 012c 12       		.uleb128 0x12
 2330 012d 06       		.uleb128 0x6
 2331 012e 40       		.uleb128 0x40
 2332 012f 18       		.uleb128 0x18
 2333 0130 9742     		.uleb128 0x2117
 2334 0132 19       		.uleb128 0x19
 2335 0133 01       		.uleb128 0x1
 2336 0134 13       		.uleb128 0x13
 2337 0135 00       		.byte	0
 2338 0136 00       		.byte	0
 2339 0137 13       		.uleb128 0x13
 2340 0138 2E       		.uleb128 0x2e
 2341 0139 01       		.byte	0x1
 2342 013a 3F       		.uleb128 0x3f
 2343 013b 19       		.uleb128 0x19
 2344 013c 03       		.uleb128 0x3
 2345 013d 0E       		.uleb128 0xe
 2346 013e 3A       		.uleb128 0x3a
 2347 013f 0B       		.uleb128 0xb
 2348 0140 3B       		.uleb128 0x3b
 2349 0141 05       		.uleb128 0x5
 2350 0142 27       		.uleb128 0x27
 2351 0143 19       		.uleb128 0x19
 2352 0144 11       		.uleb128 0x11
 2353 0145 01       		.uleb128 0x1
 2354 0146 12       		.uleb128 0x12
 2355 0147 06       		.uleb128 0x6
 2356 0148 40       		.uleb128 0x40
 2357 0149 18       		.uleb128 0x18
 2358 014a 9642     		.uleb128 0x2116
 2359 014c 19       		.uleb128 0x19
 2360 014d 01       		.uleb128 0x1
 2361 014e 13       		.uleb128 0x13
 2362 014f 00       		.byte	0
 2363 0150 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 58


 2364 0151 14       		.uleb128 0x14
 2365 0152 34       		.uleb128 0x34
 2366 0153 00       		.byte	0
 2367 0154 03       		.uleb128 0x3
 2368 0155 0E       		.uleb128 0xe
 2369 0156 3A       		.uleb128 0x3a
 2370 0157 0B       		.uleb128 0xb
 2371 0158 3B       		.uleb128 0x3b
 2372 0159 0B       		.uleb128 0xb
 2373 015a 49       		.uleb128 0x49
 2374 015b 13       		.uleb128 0x13
 2375 015c 3F       		.uleb128 0x3f
 2376 015d 19       		.uleb128 0x19
 2377 015e 02       		.uleb128 0x2
 2378 015f 18       		.uleb128 0x18
 2379 0160 00       		.byte	0
 2380 0161 00       		.byte	0
 2381 0162 00       		.byte	0
 2382              		.section	.debug_aranges,"",%progbits
 2383 0000 AC000000 		.4byte	0xac
 2384 0004 0200     		.2byte	0x2
 2385 0006 00000000 		.4byte	.Ldebug_info0
 2386 000a 04       		.byte	0x4
 2387 000b 00       		.byte	0
 2388 000c 0000     		.2byte	0
 2389 000e 0000     		.2byte	0
 2390 0010 00000000 		.4byte	.LFB2
 2391 0014 24000000 		.4byte	.LFE2-.LFB2
 2392 0018 00000000 		.4byte	.LFB3
 2393 001c 6C020000 		.4byte	.LFE3-.LFB3
 2394 0020 00000000 		.4byte	.LFB4
 2395 0024 38000000 		.4byte	.LFE4-.LFB4
 2396 0028 00000000 		.4byte	.LFB5
 2397 002c 1C000000 		.4byte	.LFE5-.LFB5
 2398 0030 00000000 		.4byte	.LFB6
 2399 0034 14000000 		.4byte	.LFE6-.LFB6
 2400 0038 00000000 		.4byte	.LFB7
 2401 003c 0A000000 		.4byte	.LFE7-.LFB7
 2402 0040 00000000 		.4byte	.LFB8
 2403 0044 7C000000 		.4byte	.LFE8-.LFB8
 2404 0048 00000000 		.4byte	.LFB9
 2405 004c 4C000000 		.4byte	.LFE9-.LFB9
 2406 0050 00000000 		.4byte	.LFB10
 2407 0054 20000000 		.4byte	.LFE10-.LFB10
 2408 0058 00000000 		.4byte	.LFB11
 2409 005c 1C000000 		.4byte	.LFE11-.LFB11
 2410 0060 00000000 		.4byte	.LFB12
 2411 0064 30000000 		.4byte	.LFE12-.LFB12
 2412 0068 00000000 		.4byte	.LFB13
 2413 006c 30000000 		.4byte	.LFE13-.LFB13
 2414 0070 00000000 		.4byte	.LFB14
 2415 0074 20000000 		.4byte	.LFE14-.LFB14
 2416 0078 00000000 		.4byte	.LFB15
 2417 007c 20000000 		.4byte	.LFE15-.LFB15
 2418 0080 00000000 		.4byte	.LFB16
 2419 0084 34000000 		.4byte	.LFE16-.LFB16
 2420 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 59


 2421 008c 2C000000 		.4byte	.LFE17-.LFB17
 2422 0090 00000000 		.4byte	.LFB18
 2423 0094 A0000000 		.4byte	.LFE18-.LFB18
 2424 0098 00000000 		.4byte	.LFB19
 2425 009c 90000000 		.4byte	.LFE19-.LFB19
 2426 00a0 00000000 		.4byte	.LFB20
 2427 00a4 80000000 		.4byte	.LFE20-.LFB20
 2428 00a8 00000000 		.4byte	0
 2429 00ac 00000000 		.4byte	0
 2430              		.section	.debug_ranges,"",%progbits
 2431              	.Ldebug_ranges0:
 2432 0000 00000000 		.4byte	.LFB2
 2433 0004 24000000 		.4byte	.LFE2
 2434 0008 00000000 		.4byte	.LFB3
 2435 000c 6C020000 		.4byte	.LFE3
 2436 0010 00000000 		.4byte	.LFB4
 2437 0014 38000000 		.4byte	.LFE4
 2438 0018 00000000 		.4byte	.LFB5
 2439 001c 1C000000 		.4byte	.LFE5
 2440 0020 00000000 		.4byte	.LFB6
 2441 0024 14000000 		.4byte	.LFE6
 2442 0028 00000000 		.4byte	.LFB7
 2443 002c 0A000000 		.4byte	.LFE7
 2444 0030 00000000 		.4byte	.LFB8
 2445 0034 7C000000 		.4byte	.LFE8
 2446 0038 00000000 		.4byte	.LFB9
 2447 003c 4C000000 		.4byte	.LFE9
 2448 0040 00000000 		.4byte	.LFB10
 2449 0044 20000000 		.4byte	.LFE10
 2450 0048 00000000 		.4byte	.LFB11
 2451 004c 1C000000 		.4byte	.LFE11
 2452 0050 00000000 		.4byte	.LFB12
 2453 0054 30000000 		.4byte	.LFE12
 2454 0058 00000000 		.4byte	.LFB13
 2455 005c 30000000 		.4byte	.LFE13
 2456 0060 00000000 		.4byte	.LFB14
 2457 0064 20000000 		.4byte	.LFE14
 2458 0068 00000000 		.4byte	.LFB15
 2459 006c 20000000 		.4byte	.LFE15
 2460 0070 00000000 		.4byte	.LFB16
 2461 0074 34000000 		.4byte	.LFE16
 2462 0078 00000000 		.4byte	.LFB17
 2463 007c 2C000000 		.4byte	.LFE17
 2464 0080 00000000 		.4byte	.LFB18
 2465 0084 A0000000 		.4byte	.LFE18
 2466 0088 00000000 		.4byte	.LFB19
 2467 008c 90000000 		.4byte	.LFE19
 2468 0090 00000000 		.4byte	.LFB20
 2469 0094 80000000 		.4byte	.LFE20
 2470 0098 00000000 		.4byte	0
 2471 009c 00000000 		.4byte	0
 2472              		.section	.debug_line,"",%progbits
 2473              	.Ldebug_line0:
 2474 0000 C1020000 		.section	.debug_str,"MS",%progbits,1
 2474      02004000 
 2474      00000201 
 2474      FB0E0D00 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 60


 2474      01010101 
 2475              	.LASF10:
 2476 0000 75696E74 		.ascii	"uint16\000"
 2476      313600
 2477              	.LASF50:
 2478 0007 61646347 		.ascii	"adcGain\000"
 2478      61696E00 
 2479              	.LASF24:
 2480 000f 636F756E 		.ascii	"counts\000"
 2480      747300
 2481              	.LASF56:
 2482 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2482      436F756E 
 2482      7473546F 
 2482      5F566F6C 
 2482      747300
 2483              	.LASF37:
 2484 0029 4144435F 		.ascii	"ADC_Init\000"
 2484      496E6974 
 2484      00
 2485              	.LASF7:
 2486 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2486      206C6F6E 
 2486      6720756E 
 2486      7369676E 
 2486      65642069 
 2487              	.LASF25:
 2488 0049 4144435F 		.ascii	"ADC_InputsPlacement\000"
 2488      496E7075 
 2488      7473506C 
 2488      6163656D 
 2488      656E7400 
 2489              	.LASF29:
 2490 005d 4144435F 		.ascii	"ADC_StartConvert\000"
 2490      53746172 
 2490      74436F6E 
 2490      76657274 
 2490      00
 2491              	.LASF6:
 2492 006e 6C6F6E67 		.ascii	"long long int\000"
 2492      206C6F6E 
 2492      6720696E 
 2492      7400
 2493              	.LASF0:
 2494 007c 7369676E 		.ascii	"signed char\000"
 2494      65642063 
 2494      68617200 
 2495              	.LASF31:
 2496 0088 73746174 		.ascii	"status\000"
 2496      757300
 2497              	.LASF13:
 2498 008f 696E7433 		.ascii	"int32\000"
 2498      3200
 2499              	.LASF26:
 2500 0095 4144435F 		.ascii	"ADC_Start\000"
 2500      53746172 
 2500      7400
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 61


 2501              	.LASF4:
 2502 009f 6C6F6E67 		.ascii	"long int\000"
 2502      20696E74 
 2502      00
 2503              	.LASF54:
 2504 00a8 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2504      436F756E 
 2504      7473546F 
 2504      5F75566F 
 2504      6C747300 
 2505              	.LASF61:
 2506 00bc 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2506      636F756E 
 2506      74735065 
 2506      72313056 
 2506      6F6C7400 
 2507              	.LASF9:
 2508 00d0 75696E74 		.ascii	"uint8\000"
 2508      3800
 2509              	.LASF16:
 2510 00d6 646F7562 		.ascii	"double\000"
 2510      6C6500
 2511              	.LASF11:
 2512 00dd 75696E74 		.ascii	"uint32\000"
 2512      333200
 2513              	.LASF39:
 2514 00e4 6D61736B 		.ascii	"mask\000"
 2514      00
 2515              	.LASF59:
 2516 00e9 4144435F 		.ascii	"ADC_initVar\000"
 2516      696E6974 
 2516      56617200 
 2517              	.LASF34:
 2518 00f5 7265744D 		.ascii	"retMode\000"
 2518      6F646500 
 2519              	.LASF45:
 2520 00fd 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2520      5365744C 
 2520      696D6974 
 2520      4D61736B 
 2520      00
 2521              	.LASF8:
 2522 010e 756E7369 		.ascii	"unsigned int\000"
 2522      676E6564 
 2522      20696E74 
 2522      00
 2523              	.LASF55:
 2524 011b 75566F6C 		.ascii	"uVolts\000"
 2524      747300
 2525              	.LASF5:
 2526 0122 6C6F6E67 		.ascii	"long unsigned int\000"
 2526      20756E73 
 2526      69676E65 
 2526      6420696E 
 2526      7400
 2527              	.LASF46:
 2528 0134 4144435F 		.ascii	"ADC_SetSatMask\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 62


 2528      53657453 
 2528      61744D61 
 2528      736B00
 2529              	.LASF57:
 2530 0143 766F6C74 		.ascii	"volts\000"
 2530      7300
 2531              	.LASF23:
 2532 0149 746D7052 		.ascii	"tmpRegVal\000"
 2532      65675661 
 2532      6C00
 2533              	.LASF3:
 2534 0153 73686F72 		.ascii	"short unsigned int\000"
 2534      7420756E 
 2534      7369676E 
 2534      65642069 
 2534      6E7400
 2535              	.LASF30:
 2536 0166 4144435F 		.ascii	"ADC_StopConvert\000"
 2536      53746F70 
 2536      436F6E76 
 2536      65727400 
 2537              	.LASF64:
 2538 0176 433A5C55 		.ascii	"C:\\Users\\User\\Documents\\PSoC Creator\\PSoC4-MCU"
 2538      73657273 
 2538      5C557365 
 2538      725C446F 
 2538      63756D65 
 2539 01a4 2D424C45 		.ascii	"-BLE-Connectivity-Designs-master\\PSoC4-MCU-BLE-Con"
 2539      2D436F6E 
 2539      6E656374 
 2539      69766974 
 2539      792D4465 
 2540 01d6 6E656374 		.ascii	"nectivity-Designs-master\\BLE_Temperature_Measureme"
 2540      69766974 
 2540      792D4465 
 2540      7369676E 
 2540      732D6D61 
 2541 0208 6E745C42 		.ascii	"nt\\BLE_Temperature_Measurement.cydsn\000"
 2541      4C455F54 
 2541      656D7065 
 2541      72617475 
 2541      72655F4D 
 2542              	.LASF62:
 2543 022d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2543      43313120 
 2543      352E342E 
 2543      31203230 
 2543      31363036 
 2544 0260 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2544      20726576 
 2544      6973696F 
 2544      6E203233 
 2544      37373135 
 2545 0293 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2545      66756E63 
 2545      74696F6E 
 2545      2D736563 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 63


 2545      74696F6E 
 2546              	.LASF53:
 2547 02bb 6D566F6C 		.ascii	"mVolts\000"
 2547      747300
 2548              	.LASF19:
 2549 02c2 72656733 		.ascii	"reg32\000"
 2549      3200
 2550              	.LASF14:
 2551 02c8 666C6F61 		.ascii	"float32\000"
 2551      74333200 
 2552              	.LASF21:
 2553 02d0 73697A65 		.ascii	"sizetype\000"
 2553      74797065 
 2553      00
 2554              	.LASF42:
 2555 02d9 6C6F774C 		.ascii	"lowLimit\000"
 2555      696D6974 
 2555      00
 2556              	.LASF20:
 2557 02e2 6C6F6E67 		.ascii	"long double\000"
 2557      20646F75 
 2557      626C6500 
 2558              	.LASF43:
 2559 02ee 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2559      53657448 
 2559      6967684C 
 2559      696D6974 
 2559      00
 2560              	.LASF40:
 2561 02ff 4144435F 		.ascii	"ADC_EnableInjection\000"
 2561      456E6162 
 2561      6C65496E 
 2561      6A656374 
 2561      696F6E00 
 2562              	.LASF32:
 2563 0313 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2563      4973456E 
 2563      64436F6E 
 2563      76657273 
 2563      696F6E00 
 2564              	.LASF17:
 2565 0327 696E7436 		.ascii	"int64\000"
 2565      3400
 2566              	.LASF38:
 2567 032d 4144435F 		.ascii	"ADC_SetChanMask\000"
 2567      53657443 
 2567      68616E4D 
 2567      61736B00 
 2568              	.LASF63:
 2569 033d 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2569      72617465 
 2569      645F536F 
 2569      75726365 
 2569      5C50536F 
 2570              	.LASF49:
 2571 035a 4144435F 		.ascii	"ADC_SetGain\000"
 2571      53657447 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 64


 2571      61696E00 
 2572              	.LASF15:
 2573 0366 666C6F61 		.ascii	"float\000"
 2573      7400
 2574              	.LASF44:
 2575 036c 68696768 		.ascii	"highLimit\000"
 2575      4C696D69 
 2575      7400
 2576              	.LASF51:
 2577 0376 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2577      436F756E 
 2577      7473546F 
 2577      5F6D566F 
 2577      6C747300 
 2578              	.LASF41:
 2579 038a 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2579      5365744C 
 2579      6F774C69 
 2579      6D697400 
 2580              	.LASF1:
 2581 039a 756E7369 		.ascii	"unsigned char\000"
 2581      676E6564 
 2581      20636861 
 2581      7200
 2582              	.LASF60:
 2583 03a8 4144435F 		.ascii	"ADC_offset\000"
 2583      6F666673 
 2583      657400
 2584              	.LASF2:
 2585 03b3 73686F72 		.ascii	"short int\000"
 2585      7420696E 
 2585      7400
 2586              	.LASF28:
 2587 03bd 4144435F 		.ascii	"ADC_Stop\000"
 2587      53746F70 
 2587      00
 2588              	.LASF22:
 2589 03c6 63684E75 		.ascii	"chNum\000"
 2589      6D00
 2590              	.LASF35:
 2591 03cc 6368616E 		.ascii	"chan\000"
 2591      00
 2592              	.LASF18:
 2593 03d1 63686172 		.ascii	"char\000"
 2593      00
 2594              	.LASF58:
 2595 03d6 4144435F 		.ascii	"ADC_channelsConfig\000"
 2595      6368616E 
 2595      6E656C73 
 2595      436F6E66 
 2595      696700
 2596              	.LASF48:
 2597 03e9 6F666673 		.ascii	"offset\000"
 2597      657400
 2598              	.LASF52:
 2599 03f0 61646343 		.ascii	"adcCounts\000"
 2599      6F756E74 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccuDfRLx.s 			page 65


 2599      7300
 2600              	.LASF27:
 2601 03fa 4144435F 		.ascii	"ADC_Enable\000"
 2601      456E6162 
 2601      6C6500
 2602              	.LASF12:
 2603 0405 696E7431 		.ascii	"int16\000"
 2603      3600
 2604              	.LASF47:
 2605 040b 4144435F 		.ascii	"ADC_SetOffset\000"
 2605      5365744F 
 2605      66667365 
 2605      7400
 2606              	.LASF36:
 2607 0419 72657375 		.ascii	"result\000"
 2607      6C7400
 2608              	.LASF33:
 2609 0420 4144435F 		.ascii	"ADC_GetResult16\000"
 2609      47657452 
 2609      6573756C 
 2609      74313600 
 2610              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
