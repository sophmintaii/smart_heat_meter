ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cy_em_eeprom.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Cy_Em_EEPROM_Init,"ax",%progbits
  20              		.align	2
  21              		.global	Cy_Em_EEPROM_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	Cy_Em_EEPROM_Init, %function
  25              	Cy_Em_EEPROM_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\cy_em_eeprom.c"
   1:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/cy_em_eeprom.c **** * \file cy_em_eeprom.c
   3:Generated_Source\PSoC4/cy_em_eeprom.c **** * \version 2.0
   4:Generated_Source\PSoC4/cy_em_eeprom.c **** *
   5:Generated_Source\PSoC4/cy_em_eeprom.c **** * \brief
   6:Generated_Source\PSoC4/cy_em_eeprom.c **** *  This file provides source code of the API for the Emulated EEPROM library.
   7:Generated_Source\PSoC4/cy_em_eeprom.c **** *  The Emulated EEPROM API allows creating of an emulated EEPROM in flash that
   8:Generated_Source\PSoC4/cy_em_eeprom.c **** *  has the ability to do wear leveling and restore corrupted data from a
   9:Generated_Source\PSoC4/cy_em_eeprom.c **** *  redundant copy.
  10:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  11:Generated_Source\PSoC4/cy_em_eeprom.c **** ********************************************************************************
  12:Generated_Source\PSoC4/cy_em_eeprom.c **** * \copyright
  13:Generated_Source\PSoC4/cy_em_eeprom.c **** * Copyright 2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/cy_em_eeprom.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/cy_em_eeprom.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/cy_em_eeprom.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  19:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  20:Generated_Source\PSoC4/cy_em_eeprom.c **** #include "cytypes.h"
  21:Generated_Source\PSoC4/cy_em_eeprom.c **** #include <string.h>
  22:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  23:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6)
  24:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "em_eeprom/cy_em_eeprom.h"
  25:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
  26:Generated_Source\PSoC4/cy_em_eeprom.c ****     #include "cy_em_eeprom.h"
  27:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC6) */
  28:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  29:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  30:Generated_Source\PSoC4/cy_em_eeprom.c **** #if defined(__cplusplus)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 2


  31:Generated_Source\PSoC4/cy_em_eeprom.c **** extern "C" {
  32:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif
  33:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  34:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  35:Generated_Source\PSoC4/cy_em_eeprom.c **** /***************************************
  36:Generated_Source\PSoC4/cy_em_eeprom.c **** * Private Function Prototypes
  37:Generated_Source\PSoC4/cy_em_eeprom.c **** ***************************************/
  38:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context);
  39:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context);
  40:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len);
  41:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
  42:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
  43:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
  44:Generated_Source\PSoC4/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context);
  45:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config);
  46:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr, uint32 *rowData, cy_stc_eeprom_context_t *
  47:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr, uint32 ramBuffAddr, cy_stc_eeprom_context_
  48:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
  49:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 dstAddr,
  50:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 rowOffset,
  51:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 numBytes,
  52:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context);
  53:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, uint32 *endAddr, uint32 *offset, uint32 rowNum, uint3
  54:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context);
  55:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  56:Generated_Source\PSoC4/cy_em_eeprom.c **** /**
  57:Generated_Source\PSoC4/cy_em_eeprom.c **** * \addtogroup group_em_eeprom_functions
  58:Generated_Source\PSoC4/cy_em_eeprom.c **** * \{
  59:Generated_Source\PSoC4/cy_em_eeprom.c **** */
  60:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  61:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
  62:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Init
  63:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
  64:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  65:Generated_Source\PSoC4/cy_em_eeprom.c **** * Initializes the Emulated EEPROM library by filling the context structure. 
  66:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  67:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
  68:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
  69:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  70:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
  71:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure to be filled by the function.
  72:Generated_Source\PSoC4/cy_em_eeprom.c **** * \ref cy_stc_eeprom_context_t.
  73:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  74:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
  75:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
  76:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  77:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
  78:Generated_Source\PSoC4/cy_em_eeprom.c **** * The context structure should not be modified by the user after it is filled
  79:Generated_Source\PSoC4/cy_em_eeprom.c **** * with this function. Modification of context structure may cause the 
  80:Generated_Source\PSoC4/cy_em_eeprom.c **** * unexpected behavior of the Cy_Em_EEPROM API functions which rely on it.
  81:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  82:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
  83:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
  84:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
  85:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
  86:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  87:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 3


  88:Generated_Source\PSoC4/cy_em_eeprom.c **** * If the "Redundant Copy" option is used, the function performs a number of 
  89:Generated_Source\PSoC4/cy_em_eeprom.c **** * write operations to the EEPROM to initialize flash rows checksums. Therefore,
  90:Generated_Source\PSoC4/cy_em_eeprom.c **** * Cy_Em_EEPROM_NumWrites(), when it is called right after Cy_Em_EEPROM_Init(), 
  91:Generated_Source\PSoC4/cy_em_eeprom.c **** * will return a non-zero value that identifies the number of writes performed 
  92:Generated_Source\PSoC4/cy_em_eeprom.c **** * by Cy_Em_EEPROM_Init().
  93:Generated_Source\PSoC4/cy_em_eeprom.c **** *
  94:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
  95:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Init(cy_stc_eeprom_config_t* config, cy_stc_eeprom_context_t 
  96:Generated_Source\PSoC4/cy_em_eeprom.c **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 90B5     		push	{r4, r7, lr}
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  42 0008 3960     		str	r1, [r7]
  97:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
  43              		.loc 1 97 0
  44 000a 0F23     		movs	r3, #15
  45 000c FB18     		adds	r3, r7, r3
  46 000e 0122     		movs	r2, #1
  47 0010 1A70     		strb	r2, [r3]
  98:Generated_Source\PSoC4/cy_em_eeprom.c **** 
  99:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((NULL != context) && (NULL != config) && (NULL != ((uint32 *)config->userFlashStartAddr)) &&
  48              		.loc 1 99 0
  49 0012 3B68     		ldr	r3, [r7]
  50 0014 002B     		cmp	r3, #0
  51 0016 67D0     		beq	.L2
  52              		.loc 1 99 0 is_stmt 0 discriminator 1
  53 0018 7B68     		ldr	r3, [r7, #4]
  54 001a 002B     		cmp	r3, #0
  55 001c 64D0     		beq	.L2
  56              		.loc 1 99 0 discriminator 2
  57 001e 7B68     		ldr	r3, [r7, #4]
  58 0020 DB68     		ldr	r3, [r3, #12]
  59 0022 002B     		cmp	r3, #0
  60 0024 60D0     		beq	.L2
 100:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  61              		.loc 1 100 0 is_stmt 1 discriminator 3
  62 0026 7B68     		ldr	r3, [r7, #4]
  63 0028 5B68     		ldr	r3, [r3, #4]
  99:Generated_Source\PSoC4/cy_em_eeprom.c ****         (config->wearLevelingFactor <= CY_EM_EEPROM_MAX_WEAR_LEVELING_FACTOR) && (config->eepromSiz
  64              		.loc 1 99 0 discriminator 3
  65 002a 0A2B     		cmp	r3, #10
  66 002c 5CD8     		bhi	.L2
  67              		.loc 1 100 0
  68 002e 7B68     		ldr	r3, [r7, #4]
  69 0030 1B68     		ldr	r3, [r3]
  70 0032 002B     		cmp	r3, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 4


  71 0034 58D0     		beq	.L2
 101:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 102:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CheckRanges(config);
  72              		.loc 1 102 0
  73 0036 0F23     		movs	r3, #15
  74 0038 FC18     		adds	r4, r7, r3
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 1800     		movs	r0, r3
  77 003e FFF7FEFF 		bl	CheckRanges
  78 0042 0300     		movs	r3, r0
  79 0044 2370     		strb	r3, [r4]
 103:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 104:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
  80              		.loc 1 104 0
  81 0046 0F23     		movs	r3, #15
  82 0048 FB18     		adds	r3, r7, r3
  83 004a 1B78     		ldrb	r3, [r3]
  84 004c 002B     		cmp	r3, #0
  85 004e 4BD1     		bne	.L2
 105:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 106:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Copy the user config structure fields into context */
 107:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->eepromSize = config->eepromSize;
  86              		.loc 1 107 0
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1A68     		ldr	r2, [r3]
  89 0054 3B68     		ldr	r3, [r7]
  90 0056 DA60     		str	r2, [r3, #12]
 108:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wearLevelingFactor = config->wearLevelingFactor;
  91              		.loc 1 108 0
  92 0058 7B68     		ldr	r3, [r7, #4]
  93 005a 5A68     		ldr	r2, [r3, #4]
  94 005c 3B68     		ldr	r3, [r7]
  95 005e 1A61     		str	r2, [r3, #16]
 109:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->redundantCopy = config->redundantCopy;
  96              		.loc 1 109 0
  97 0060 7B68     		ldr	r3, [r7, #4]
  98 0062 1A7A     		ldrb	r2, [r3, #8]
  99 0064 3B68     		ldr	r3, [r7]
 100 0066 1A75     		strb	r2, [r3, #20]
 110:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->blockingWrite = config->blockingWrite;
 101              		.loc 1 110 0
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 5A7A     		ldrb	r2, [r3, #9]
 104 006c 3B68     		ldr	r3, [r7]
 105 006e 5A75     		strb	r2, [r3, #21]
 111:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->userFlashStartAddr = config->userFlashStartAddr;
 106              		.loc 1 111 0
 107 0070 7B68     		ldr	r3, [r7, #4]
 108 0072 DA68     		ldr	r2, [r3, #12]
 109 0074 3B68     		ldr	r3, [r7]
 110 0076 9A61     		str	r2, [r3, #24]
 112:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Store frequently used data for internal use */
 113:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->numberOfRows = CY_EM_EEPROM_GET_NUM_ROWS_IN_EEPROM(config->eepromSize);
 111              		.loc 1 113 0
 112 0078 7B68     		ldr	r3, [r7, #4]
 113 007a 1B68     		ldr	r3, [r3]
 114 007c DA09     		lsrs	r2, r3, #7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 5


 115 007e 7B68     		ldr	r3, [r7, #4]
 116 0080 1B68     		ldr	r3, [r3]
 117 0082 7F21     		movs	r1, #127
 118 0084 0B40     		ands	r3, r1
 119 0086 01D0     		beq	.L3
 120              		.loc 1 113 0 is_stmt 0 discriminator 1
 121 0088 0123     		movs	r3, #1
 122 008a 00E0     		b	.L4
 123              	.L3:
 124              		.loc 1 113 0 discriminator 2
 125 008c 0023     		movs	r3, #0
 126              	.L4:
 127              		.loc 1 113 0 discriminator 4
 128 008e D218     		adds	r2, r2, r3
 129 0090 3B68     		ldr	r3, [r7]
 130 0092 5A60     		str	r2, [r3, #4]
 114:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 131              		.loc 1 114 0 is_stmt 1 discriminator 4
 132 0094 3B68     		ldr	r3, [r7]
 133 0096 5A68     		ldr	r2, [r3, #4]
 134 0098 7B68     		ldr	r3, [r7, #4]
 135 009a 5B68     		ldr	r3, [r3, #4]
 136 009c 5343     		muls	r3, r2
 137 009e 1A02     		lsls	r2, r3, #8
 115:Generated_Source\PSoC4/cy_em_eeprom.c ****                     config->userFlashStartAddr);
 138              		.loc 1 115 0 discriminator 4
 139 00a0 7B68     		ldr	r3, [r7, #4]
 140 00a2 DB68     		ldr	r3, [r3, #12]
 114:Generated_Source\PSoC4/cy_em_eeprom.c ****             context->wlEndAddr = ((CY_EM_EEPROM_GET_EEPROM_SIZE(context->numberOfRows) * config->we
 141              		.loc 1 114 0 discriminator 4
 142 00a4 D218     		adds	r2, r2, r3
 143 00a6 3B68     		ldr	r3, [r7]
 144 00a8 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Find last written EEPROM row and store it for quick access */
 117:Generated_Source\PSoC4/cy_em_eeprom.c ****             FindLastWrittenRow(&context->lastWrRowAddr, context);
 145              		.loc 1 117 0 discriminator 4
 146 00aa 3B68     		ldr	r3, [r7]
 147 00ac 0833     		adds	r3, r3, #8
 148 00ae 3A68     		ldr	r2, [r7]
 149 00b0 1100     		movs	r1, r2
 150 00b2 1800     		movs	r0, r3
 151 00b4 FFF7FEFF 		bl	FindLastWrittenRow
 118:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 119:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u == CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr)) && (0u != context->redundan
 152              		.loc 1 119 0 discriminator 4
 153 00b8 3B68     		ldr	r3, [r7]
 154 00ba 9B68     		ldr	r3, [r3, #8]
 155 00bc 1B68     		ldr	r3, [r3]
 156 00be 002B     		cmp	r3, #0
 157 00c0 12D1     		bne	.L2
 158              		.loc 1 119 0 is_stmt 0 discriminator 1
 159 00c2 3B68     		ldr	r3, [r7]
 160 00c4 1B7D     		ldrb	r3, [r3, #20]
 161 00c6 002B     		cmp	r3, #0
 162 00c8 0ED0     		beq	.L2
 120:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 121:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Call the function only after device reprogramming in case
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 6


 122:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * if redundant copy is enabled.
 123:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 124:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = FillChecksum(context);
 163              		.loc 1 124 0 is_stmt 1
 164 00ca 0F23     		movs	r3, #15
 165 00cc FC18     		adds	r4, r7, r3
 166 00ce 3B68     		ldr	r3, [r7]
 167 00d0 1800     		movs	r0, r3
 168 00d2 FFF7FEFF 		bl	FillChecksum
 169 00d6 0300     		movs	r3, r0
 170 00d8 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/cy_em_eeprom.c ****                 
 126:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update the last written EEPROM row for Cy_Em_EEPROM_NumWrites() */
 127:Generated_Source\PSoC4/cy_em_eeprom.c ****                 FindLastWrittenRow(&context->lastWrRowAddr, context);
 171              		.loc 1 127 0
 172 00da 3B68     		ldr	r3, [r7]
 173 00dc 0833     		adds	r3, r3, #8
 174 00de 3A68     		ldr	r2, [r7]
 175 00e0 1100     		movs	r1, r2
 176 00e2 1800     		movs	r0, r3
 177 00e4 FFF7FEFF 		bl	FindLastWrittenRow
 178              	.L2:
 128:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 129:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 130:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 131:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 132:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 179              		.loc 1 132 0
 180 00e8 0F23     		movs	r3, #15
 181 00ea FB18     		adds	r3, r7, r3
 182 00ec 1B78     		ldrb	r3, [r3]
 133:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 183              		.loc 1 133 0
 184 00ee 1800     		movs	r0, r3
 185 00f0 BD46     		mov	sp, r7
 186 00f2 05B0     		add	sp, sp, #20
 187              		@ sp needed
 188 00f4 90BD     		pop	{r4, r7, pc}
 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	Cy_Em_EEPROM_Init, .-Cy_Em_EEPROM_Init
 192              		.global	__aeabi_uidiv
 193 00f6 C046     		.section	.text.Cy_Em_EEPROM_Read,"ax",%progbits
 194              		.align	2
 195              		.global	Cy_Em_EEPROM_Read
 196              		.code	16
 197              		.thumb_func
 198              		.type	Cy_Em_EEPROM_Read, %function
 199              	Cy_Em_EEPROM_Read:
 200              	.LFB3:
 134:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 135:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 136:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 137:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Read
 138:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 139:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 140:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address, converts it to the actual
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 7


 141:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address where the data is stored and returns the data to the user.
 142:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 143:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 144:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start reading data from.
 145:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 146:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 147:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a user array to write data to.
 148:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 149:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 150:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to read.
 151:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 152:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 153:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 154:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 155:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 156:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 157:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 158:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 159:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
 160:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 161:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 162:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 163:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 164:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if redundant copy option is enabled the function may perform writes
 165:Generated_Source\PSoC4/cy_em_eeprom.c **** * to EEPROM. This is done in case if the data in the EEPPROM is corrupted and
 166:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data in redundant copy is valid based on CRC-8 data integrity check.
 167:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 168:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 169:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Read(uint32 addr, 
 170:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         void * eepromData, 
 171:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 size,
 172:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 173:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 201              		.loc 1 173 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 96
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205 0000 B0B5     		push	{r4, r5, r7, lr}
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 9AB0     		sub	sp, sp, #104
 212              		.cfi_def_cfa_offset 120
 213 0004 02AF     		add	r7, sp, #8
 214              		.cfi_def_cfa 7, 112
 215 0006 F860     		str	r0, [r7, #12]
 216 0008 B960     		str	r1, [r7, #8]
 217 000a 7A60     		str	r2, [r7, #4]
 218 000c 3B60     		str	r3, [r7]
 174:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 219              		.loc 1 174 0
 220 000e 5F23     		movs	r3, #95
 221 0010 FB18     		adds	r3, r7, r3
 222 0012 0122     		movs	r2, #1
 223 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 8


 175:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 176:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numBytesToRead;
 177:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curEepromBaseAddr;
 178:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRowOffset;
 179:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startRowAddr;
 180:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEepromRowNum;
 181:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 curRdEepromRowNum = 0u;
 224              		.loc 1 181 0
 225 0016 0023     		movs	r3, #0
 226 0018 FB64     		str	r3, [r7, #76]
 182:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 dataStartEepromRowNum = 0u;
 227              		.loc 1 182 0
 228 001a 0023     		movs	r3, #0
 229 001c BB64     		str	r3, [r7, #72]
 183:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 230              		.loc 1 183 0
 231 001e BB68     		ldr	r3, [r7, #8]
 232 0020 7B64     		str	r3, [r7, #68]
 184:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 185:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Validate input parameters */
 186:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
 233              		.loc 1 186 0
 234 0022 7B68     		ldr	r3, [r7, #4]
 235 0024 002B     		cmp	r3, #0
 236 0026 00D1     		bne	.LCB175
 237 0028 78E1     		b	.L7	@long jump
 238              	.LCB175:
 239              		.loc 1 186 0 is_stmt 0 discriminator 1
 240 002a FA68     		ldr	r2, [r7, #12]
 241 002c 7B68     		ldr	r3, [r7, #4]
 242 002e D218     		adds	r2, r2, r3
 243 0030 3B68     		ldr	r3, [r7]
 244 0032 DB68     		ldr	r3, [r3, #12]
 245 0034 9A42     		cmp	r2, r3
 246 0036 00D9     		bls	.LCB182
 247 0038 70E1     		b	.L7	@long jump
 248              	.LCB182:
 249              		.loc 1 186 0 discriminator 2
 250 003a BB68     		ldr	r3, [r7, #8]
 251 003c 002B     		cmp	r3, #0
 252 003e 00D1     		bne	.LCB185
 253 0040 6CE1     		b	.L7	@long jump
 254              	.LCB185:
 255              	.LBB2:
 187:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 188:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdAddr = addr;
 256              		.loc 1 188 0 is_stmt 1
 257 0042 FB68     		ldr	r3, [r7, #12]
 258 0044 3B64     		str	r3, [r7, #64]
 189:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 rdSize = size;
 259              		.loc 1 189 0
 260 0046 7B68     		ldr	r3, [r7, #4]
 261 0048 FB63     		str	r3, [r7, #60]
 190:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the sequence number of the last written row */
 191:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr);
 262              		.loc 1 191 0
 263 004a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 9


 264 004c 9B68     		ldr	r3, [r3, #8]
 265 004e 1B68     		ldr	r3, [r3]
 266 0050 7B63     		str	r3, [r7, #52]
 192:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 updateAddrFlag = 0u;
 267              		.loc 1 192 0
 268 0052 0023     		movs	r3, #0
 269 0054 BB63     		str	r3, [r7, #56]
 193:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 194:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate the number of the row read operations. Currently this only concerns
 195:Generated_Source\PSoC4/cy_em_eeprom.c ****         * the reads from the EEPROM data locations.
 196:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 197:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numRowReads = ((((rdAddr + rdSize) - 1u) / CY_EM_EEPROM_EEPROM_DATA_LEN) -
 270              		.loc 1 197 0
 271 0056 3A6C     		ldr	r2, [r7, #64]
 272 0058 FB6B     		ldr	r3, [r7, #60]
 273 005a D318     		adds	r3, r2, r3
 274 005c 013B     		subs	r3, r3, #1
 275 005e DA09     		lsrs	r2, r3, #7
 198:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 276              		.loc 1 198 0
 277 0060 3B6C     		ldr	r3, [r7, #64]
 278 0062 DB09     		lsrs	r3, r3, #7
 197:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (rdAddr / CY_EM_EEPROM_EEPROM_DATA_LEN)) + 1u;
 279              		.loc 1 197 0
 280 0064 D31A     		subs	r3, r2, r3
 281 0066 0133     		adds	r3, r3, #1
 282 0068 3B63     		str	r3, [r7, #48]
 199:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 200:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the address of the first row of the currently active EEPROM sector. If
 201:Generated_Source\PSoC4/cy_em_eeprom.c ****         * no wear leveling is used - the EEPROM has only one sector, so use the base
 202:Generated_Source\PSoC4/cy_em_eeprom.c ****         * addr stored in "context->userFlashStartAddr".
 203:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****         curEepromBaseAddr = (((context->lastWrRowAddr - context->userFlashStartAddr) /
 283              		.loc 1 204 0
 284 006a 3B68     		ldr	r3, [r7]
 285 006c 9A68     		ldr	r2, [r3, #8]
 286 006e 3B68     		ldr	r3, [r7]
 287 0070 9B69     		ldr	r3, [r3, #24]
 288 0072 D21A     		subs	r2, r2, r3
 205:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 289              		.loc 1 205 0
 290 0074 3B68     		ldr	r3, [r7]
 291 0076 5B68     		ldr	r3, [r3, #4]
 292 0078 1B02     		lsls	r3, r3, #8
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 293              		.loc 1 204 0
 294 007a 1900     		movs	r1, r3
 295 007c 1000     		movs	r0, r2
 296 007e FFF7FEFF 		bl	__aeabi_uidiv
 297 0082 0300     		movs	r3, r0
 298 0084 1A00     		movs	r2, r3
 206:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) +
 299              		.loc 1 206 0
 300 0086 3B68     		ldr	r3, [r7]
 301 0088 5B68     		ldr	r3, [r3, #4]
 205:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 302              		.loc 1 205 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 10


 303 008a 5343     		muls	r3, r2
 304 008c 1A02     		lsls	r2, r3, #8
 207:Generated_Source\PSoC4/cy_em_eeprom.c ****                                context->userFlashStartAddr;
 305              		.loc 1 207 0
 306 008e 3B68     		ldr	r3, [r7]
 307 0090 9B69     		ldr	r3, [r3, #24]
 204:Generated_Source\PSoC4/cy_em_eeprom.c ****                               (CY_EM_EEPROM_FLASH_SIZEOF_ROW * context->numberOfRows)) *
 308              		.loc 1 204 0
 309 0092 D318     		adds	r3, r2, r3
 310 0094 FB62     		str	r3, [r7, #44]
 208:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 209:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Find the number of the row that contains the start address of the data */
 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < context->numberOfRows; i++)
 311              		.loc 1 210 0
 312 0096 0023     		movs	r3, #0
 313 0098 BB65     		str	r3, [r7, #88]
 314 009a 18E0     		b	.L8
 315              	.L13:
 211:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 212:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(rdAddr, i))
 316              		.loc 1 212 0
 317 009c BB6D     		ldr	r3, [r7, #88]
 318 009e DA01     		lsls	r2, r3, #7
 319 00a0 3B6C     		ldr	r3, [r7, #64]
 320 00a2 9A42     		cmp	r2, r3
 321 00a4 08D8     		bhi	.L9
 322              		.loc 1 212 0 is_stmt 0 discriminator 1
 323 00a6 BB6D     		ldr	r3, [r7, #88]
 324 00a8 0133     		adds	r3, r3, #1
 325 00aa DB01     		lsls	r3, r3, #7
 326 00ac 5A1E     		subs	r2, r3, #1
 327 00ae 3B6C     		ldr	r3, [r7, #64]
 328 00b0 9A42     		cmp	r2, r3
 329 00b2 01D3     		bcc	.L9
 330              		.loc 1 212 0 discriminator 3
 331 00b4 0123     		movs	r3, #1
 332 00b6 00E0     		b	.L10
 333              	.L9:
 334              		.loc 1 212 0 discriminator 4
 335 00b8 0023     		movs	r3, #0
 336              	.L10:
 337              		.loc 1 212 0 discriminator 6
 338 00ba 002B     		cmp	r3, #0
 339 00bc 04D0     		beq	.L11
 213:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 214:Generated_Source\PSoC4/cy_em_eeprom.c ****                 dataStartEepromRowNum = i;
 340              		.loc 1 214 0 is_stmt 1
 341 00be BB6D     		ldr	r3, [r7, #88]
 342 00c0 BB64     		str	r3, [r7, #72]
 215:Generated_Source\PSoC4/cy_em_eeprom.c ****                 curRdEepromRowNum = dataStartEepromRowNum;
 343              		.loc 1 215 0
 344 00c2 BB6C     		ldr	r3, [r7, #72]
 345 00c4 FB64     		str	r3, [r7, #76]
 216:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 346              		.loc 1 216 0
 347 00c6 07E0     		b	.L12
 348              	.L11:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 11


 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 349              		.loc 1 210 0 discriminator 2
 350 00c8 BB6D     		ldr	r3, [r7, #88]
 351 00ca 0133     		adds	r3, r3, #1
 352 00cc BB65     		str	r3, [r7, #88]
 353              	.L8:
 210:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 354              		.loc 1 210 0 is_stmt 0 discriminator 1
 355 00ce 3B68     		ldr	r3, [r7]
 356 00d0 5A68     		ldr	r2, [r3, #4]
 357 00d2 BB6D     		ldr	r3, [r7, #88]
 358 00d4 9A42     		cmp	r2, r3
 359 00d6 E1D8     		bhi	.L13
 360              	.L12:
 217:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 218:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 219:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 220:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Find the row number of the last written row */
 221:Generated_Source\PSoC4/cy_em_eeprom.c ****         actEepromRowNum = (context->lastWrRowAddr - curEepromBaseAddr) / CY_EM_EEPROM_FLASH_SIZEOF_
 361              		.loc 1 221 0 is_stmt 1
 362 00d8 3B68     		ldr	r3, [r7]
 363 00da 9A68     		ldr	r2, [r3, #8]
 364 00dc FB6A     		ldr	r3, [r7, #44]
 365 00de D31A     		subs	r3, r2, r3
 366 00e0 1B0A     		lsrs	r3, r3, #8
 367 00e2 BB62     		str	r3, [r7, #40]
 222:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 223:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Check if wear leveling is used */
 224:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 368              		.loc 1 224 0
 369 00e4 3B68     		ldr	r3, [r7]
 370 00e6 1B69     		ldr	r3, [r3, #16]
 371 00e8 012B     		cmp	r3, #1
 372 00ea 12D9     		bls	.L14
 373              	.LBB3:
 225:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 226:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 dataEndEepromRowNum = dataStartEepromRowNum + (numRowReads - 1u);
 374              		.loc 1 226 0
 375 00ec 3A6B     		ldr	r2, [r7, #48]
 376 00ee BB6C     		ldr	r3, [r7, #72]
 377 00f0 D318     		adds	r3, r2, r3
 378 00f2 013B     		subs	r3, r3, #1
 379 00f4 7B62     		str	r3, [r7, #36]
 227:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 228:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if the future validation of the read address is required. */
 229:Generated_Source\PSoC4/cy_em_eeprom.c ****             updateAddrFlag = (dataStartEepromRowNum > actEepromRowNum) ? 1u :
 380              		.loc 1 229 0
 381 00f6 BA6C     		ldr	r2, [r7, #72]
 382 00f8 BB6A     		ldr	r3, [r7, #40]
 383 00fa 9A42     		cmp	r2, r3
 384 00fc 07D8     		bhi	.L15
 385              		.loc 1 229 0 is_stmt 0 discriminator 1
 386 00fe 7A6A     		ldr	r2, [r7, #36]
 387 0100 BB6A     		ldr	r3, [r7, #40]
 388 0102 9A42     		cmp	r2, r3
 389 0104 01D9     		bls	.L16
 390              		.loc 1 229 0 discriminator 3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 12


 391 0106 0123     		movs	r3, #1
 392 0108 02E0     		b	.L18
 393              	.L16:
 394              		.loc 1 229 0 discriminator 4
 395 010a 0023     		movs	r3, #0
 396 010c 00E0     		b	.L18
 397              	.L15:
 398              		.loc 1 229 0 discriminator 2
 399 010e 0123     		movs	r3, #1
 400              	.L18:
 401              		.loc 1 229 0 discriminator 8
 402 0110 BB63     		str	r3, [r7, #56]
 403              	.L14:
 404              	.LBE3:
 230:Generated_Source\PSoC4/cy_em_eeprom.c ****                               ((dataEndEepromRowNum > actEepromRowNum) ? 1u : 0u);
 231:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 232:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 233:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy data from the EEPROM data locations to the user buffer */
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < numRowReads; i++)
 405              		.loc 1 234 0 is_stmt 1
 406 0112 0023     		movs	r3, #0
 407 0114 BB65     		str	r3, [r7, #88]
 408 0116 68E0     		b	.L19
 409              	.L26:
 235:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 236:Generated_Source\PSoC4/cy_em_eeprom.c ****             startRowAddr = curEepromBaseAddr + (curRdEepromRowNum * CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 410              		.loc 1 236 0
 411 0118 FB6C     		ldr	r3, [r7, #76]
 412 011a 1A02     		lsls	r2, r3, #8
 413 011c FB6A     		ldr	r3, [r7, #44]
 414 011e D318     		adds	r3, r2, r3
 415 0120 3B65     		str	r3, [r7, #80]
 237:Generated_Source\PSoC4/cy_em_eeprom.c ****             curRowOffset = CY_EM_EEPROM_EEPROM_DATA_LEN + (rdAddr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 416              		.loc 1 237 0
 417 0122 3B6C     		ldr	r3, [r7, #64]
 418 0124 7F22     		movs	r2, #127
 419 0126 1340     		ands	r3, r2
 420 0128 8033     		adds	r3, r3, #128
 421 012a 3B62     		str	r3, [r7, #32]
 238:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 239:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if there are more reads pending and update the number of the
 240:Generated_Source\PSoC4/cy_em_eeprom.c ****             * remaining bytes to read respectively.
 241:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 242:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((i + 1u) < numRowReads)
 422              		.loc 1 242 0
 423 012c BB6D     		ldr	r3, [r7, #88]
 424 012e 5A1C     		adds	r2, r3, #1
 425 0130 3B6B     		ldr	r3, [r7, #48]
 426 0132 9A42     		cmp	r2, r3
 427 0134 06D2     		bcs	.L20
 243:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 244:Generated_Source\PSoC4/cy_em_eeprom.c ****                 numBytesToRead = CY_EM_EEPROM_EEPROM_DATA_LEN - (rdAddr % CY_EM_EEPROM_EEPROM_DATA_
 428              		.loc 1 244 0
 429 0136 3B6C     		ldr	r3, [r7, #64]
 430 0138 7F22     		movs	r2, #127
 431 013a 1340     		ands	r3, r2
 432 013c 8022     		movs	r2, #128
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 13


 433 013e D31A     		subs	r3, r2, r3
 434 0140 7B65     		str	r3, [r7, #84]
 435 0142 01E0     		b	.L21
 436              	.L20:
 245:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 246:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 247:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 248:Generated_Source\PSoC4/cy_em_eeprom.c ****                 numBytesToRead = rdSize;
 437              		.loc 1 248 0
 438 0144 FB6B     		ldr	r3, [r7, #60]
 439 0146 7B65     		str	r3, [r7, #84]
 440              	.L21:
 249:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 250:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 251:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if the read address needs to be updated to point to the correct
 252:Generated_Source\PSoC4/cy_em_eeprom.c ****             * EEPROM sector.
 253:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 254:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u != updateAddrFlag) && (curRdEepromRowNum > actEepromRowNum))
 441              		.loc 1 254 0
 442 0148 BB6B     		ldr	r3, [r7, #56]
 443 014a 002B     		cmp	r3, #0
 444 014c 17D0     		beq	.L22
 445              		.loc 1 254 0 is_stmt 0 discriminator 1
 446 014e FA6C     		ldr	r2, [r7, #76]
 447 0150 BB6A     		ldr	r3, [r7, #40]
 448 0152 9A42     		cmp	r2, r3
 449 0154 13D9     		bls	.L22
 255:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 256:Generated_Source\PSoC4/cy_em_eeprom.c ****                 startRowAddr -= context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 450              		.loc 1 256 0 is_stmt 1
 451 0156 3B68     		ldr	r3, [r7]
 452 0158 5B68     		ldr	r3, [r3, #4]
 453 015a 1B02     		lsls	r3, r3, #8
 454 015c 3A6D     		ldr	r2, [r7, #80]
 455 015e D31A     		subs	r3, r2, r3
 456 0160 3B65     		str	r3, [r7, #80]
 257:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 258:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(startRowAddr < context->userFlashStartAddr)
 457              		.loc 1 258 0
 458 0162 3B68     		ldr	r3, [r7]
 459 0164 9A69     		ldr	r2, [r3, #24]
 460 0166 3B6D     		ldr	r3, [r7, #80]
 461 0168 9A42     		cmp	r2, r3
 462 016a 08D9     		bls	.L22
 259:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 260:Generated_Source\PSoC4/cy_em_eeprom.c ****                     startRowAddr = context->wlEndAddr -
 463              		.loc 1 260 0
 464 016c 3B68     		ldr	r3, [r7]
 465 016e 1A68     		ldr	r2, [r3]
 261:Generated_Source\PSoC4/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
 466              		.loc 1 261 0
 467 0170 3B68     		ldr	r3, [r7]
 468 0172 5968     		ldr	r1, [r3, #4]
 469 0174 FB6C     		ldr	r3, [r7, #76]
 470 0176 CB1A     		subs	r3, r1, r3
 471 0178 1B02     		lsls	r3, r3, #8
 260:Generated_Source\PSoC4/cy_em_eeprom.c ****                         ((context->numberOfRows - curRdEepromRowNum) * CY_EM_EEPROM_FLASH_SIZEOF_RO
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 14


 472              		.loc 1 260 0
 473 017a D31A     		subs	r3, r2, r3
 474 017c 3B65     		str	r3, [r7, #80]
 475              	.L22:
 262:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 263:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 264:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 265:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != context->redundantCopy)
 476              		.loc 1 265 0
 477 017e 3B68     		ldr	r3, [r7]
 478 0180 1B7D     		ldrb	r3, [r3, #20]
 479 0182 002B     		cmp	r3, #0
 480 0184 12D0     		beq	.L23
 266:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 267:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 268:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * the corresponding row in redundant copy, otherwise return failure.
 269:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 270:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CheckCrcAndCopy(startRowAddr, eeData, curRowOffset, numBytesToRead, context);
 481              		.loc 1 270 0
 482 0186 5F23     		movs	r3, #95
 483 0188 FC18     		adds	r4, r7, r3
 484 018a 7D6D     		ldr	r5, [r7, #84]
 485 018c 3A6A     		ldr	r2, [r7, #32]
 486 018e 796C     		ldr	r1, [r7, #68]
 487 0190 386D     		ldr	r0, [r7, #80]
 488 0192 3B68     		ldr	r3, [r7]
 489 0194 0093     		str	r3, [sp]
 490 0196 2B00     		movs	r3, r5
 491 0198 FFF7FEFF 		bl	CheckCrcAndCopy
 492 019c 0300     		movs	r3, r0
 493 019e 2370     		strb	r3, [r4]
 271:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 272:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(CY_EM_EEPROM_SUCCESS != ret)
 494              		.loc 1 272 0
 495 01a0 5F23     		movs	r3, #95
 496 01a2 FB18     		adds	r3, r7, r3
 497 01a4 1B78     		ldrb	r3, [r3]
 498 01a6 002B     		cmp	r3, #0
 499 01a8 0DD0     		beq	.L24
 273:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 274:Generated_Source\PSoC4/cy_em_eeprom.c ****                     break;
 500              		.loc 1 274 0
 501 01aa 22E0     		b	.L25
 502              	.L23:
 275:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 276:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 277:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 278:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 279:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Copy the data to the user buffer */
 280:Generated_Source\PSoC4/cy_em_eeprom.c ****                 (void)memcpy((void *)(eeData),
 503              		.loc 1 280 0
 504 01ac 786C     		ldr	r0, [r7, #68]
 281:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 505              		.loc 1 281 0
 506 01ae 3A6D     		ldr	r2, [r7, #80]
 507 01b0 3B6A     		ldr	r3, [r7, #32]
 508 01b2 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 15


 280:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(startRowAddr + curRowOffset),
 509              		.loc 1 280 0
 510 01b4 1900     		movs	r1, r3
 511 01b6 7B6D     		ldr	r3, [r7, #84]
 512 01b8 1A00     		movs	r2, r3
 513 01ba FFF7FEFF 		bl	memcpy
 282:Generated_Source\PSoC4/cy_em_eeprom.c ****                              numBytesToRead);
 283:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 284:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Indicate success to be able to execute next code block */
 285:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
 514              		.loc 1 285 0
 515 01be 5F23     		movs	r3, #95
 516 01c0 FB18     		adds	r3, r7, r3
 517 01c2 0022     		movs	r2, #0
 518 01c4 1A70     		strb	r2, [r3]
 519              	.L24:
 286:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 287:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 288:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Update variables anticipated in the read operation */
 289:Generated_Source\PSoC4/cy_em_eeprom.c ****             rdAddr += numBytesToRead;
 520              		.loc 1 289 0 discriminator 2
 521 01c6 3A6C     		ldr	r2, [r7, #64]
 522 01c8 7B6D     		ldr	r3, [r7, #84]
 523 01ca D318     		adds	r3, r2, r3
 524 01cc 3B64     		str	r3, [r7, #64]
 290:Generated_Source\PSoC4/cy_em_eeprom.c ****             rdSize -= numBytesToRead;
 525              		.loc 1 290 0 discriminator 2
 526 01ce FA6B     		ldr	r2, [r7, #60]
 527 01d0 7B6D     		ldr	r3, [r7, #84]
 528 01d2 D31A     		subs	r3, r2, r3
 529 01d4 FB63     		str	r3, [r7, #60]
 291:Generated_Source\PSoC4/cy_em_eeprom.c ****             eeData += numBytesToRead;
 530              		.loc 1 291 0 discriminator 2
 531 01d6 7A6C     		ldr	r2, [r7, #68]
 532 01d8 7B6D     		ldr	r3, [r7, #84]
 533 01da D318     		adds	r3, r2, r3
 534 01dc 7B64     		str	r3, [r7, #68]
 292:Generated_Source\PSoC4/cy_em_eeprom.c ****             curRdEepromRowNum++;
 535              		.loc 1 292 0 discriminator 2
 536 01de FB6C     		ldr	r3, [r7, #76]
 537 01e0 0133     		adds	r3, r3, #1
 538 01e2 FB64     		str	r3, [r7, #76]
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 539              		.loc 1 234 0 discriminator 2
 540 01e4 BB6D     		ldr	r3, [r7, #88]
 541 01e6 0133     		adds	r3, r3, #1
 542 01e8 BB65     		str	r3, [r7, #88]
 543              	.L19:
 234:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 544              		.loc 1 234 0 is_stmt 0 discriminator 1
 545 01ea BA6D     		ldr	r2, [r7, #88]
 546 01ec 3B6B     		ldr	r3, [r7, #48]
 547 01ee 9A42     		cmp	r2, r3
 548 01f0 92D3     		bcc	.L26
 549              	.L25:
 293:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 294:Generated_Source\PSoC4/cy_em_eeprom.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 16


 295:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* This code block will copy the latest data from the EEPROM headers into the
 296:Generated_Source\PSoC4/cy_em_eeprom.c ****         * user buffer. The data previously copied into the user buffer may be updated
 297:Generated_Source\PSoC4/cy_em_eeprom.c ****         * as the EEPROM headers contain more recent data. 
 298:Generated_Source\PSoC4/cy_em_eeprom.c ****         * The code block is executed when two following conditions are true:
 299:Generated_Source\PSoC4/cy_em_eeprom.c ****         *  1) The reads from "historic" data locations were successful;
 300:Generated_Source\PSoC4/cy_em_eeprom.c ****         *  2) The user performed at least one write operation to Em_EEPROM (0u !=
 301:Generated_Source\PSoC4/cy_em_eeprom.c ****         *     seqNum).        
 302:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
 303:Generated_Source\PSoC4/cy_em_eeprom.c ****         if((CY_EM_EEPROM_SUCCESS == ret) && (0u != seqNum))
 550              		.loc 1 303 0 is_stmt 1
 551 01f2 5F23     		movs	r3, #95
 552 01f4 FB18     		adds	r3, r7, r3
 553 01f6 1B78     		ldrb	r3, [r3]
 554 01f8 002B     		cmp	r3, #0
 555 01fa 00D0     		beq	.LCB448
 556 01fc 8EE0     		b	.L7	@long jump
 557              	.LCB448:
 558              		.loc 1 303 0 is_stmt 0 discriminator 1
 559 01fe 7B6B     		ldr	r3, [r7, #52]
 560 0200 002B     		cmp	r3, #0
 561 0202 00D1     		bne	.LCB451
 562 0204 8AE0     		b	.L7	@long jump
 563              	.LCB451:
 304:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 305:Generated_Source\PSoC4/cy_em_eeprom.c ****             numRowReads = (context->numberOfRows <= seqNum) ? (context->numberOfRows) : (seqNum);
 564              		.loc 1 305 0 is_stmt 1
 565 0206 3B68     		ldr	r3, [r7]
 566 0208 5B68     		ldr	r3, [r3, #4]
 567 020a 7A6B     		ldr	r2, [r7, #52]
 568 020c 9342     		cmp	r3, r2
 569 020e 00D9     		bls	.L27
 570 0210 1300     		movs	r3, r2
 571              	.L27:
 572 0212 3B63     		str	r3, [r7, #48]
 306:Generated_Source\PSoC4/cy_em_eeprom.c ****             numRowReads--;
 573              		.loc 1 306 0
 574 0214 3B6B     		ldr	r3, [r7, #48]
 575 0216 013B     		subs	r3, r3, #1
 576 0218 3B63     		str	r3, [r7, #48]
 307:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(i = (seqNum - numRowReads); i <= seqNum; i++)
 577              		.loc 1 308 0
 578 021a 7A6B     		ldr	r2, [r7, #52]
 579 021c 3B6B     		ldr	r3, [r7, #48]
 580 021e D31A     		subs	r3, r2, r3
 581 0220 BB65     		str	r3, [r7, #88]
 582 0222 77E0     		b	.L28
 583              	.L39:
 309:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 310:Generated_Source\PSoC4/cy_em_eeprom.c ****                 startRowAddr = GetRowAddrBySeqNum(i, context);
 584              		.loc 1 310 0
 585 0224 3A68     		ldr	r2, [r7]
 586 0226 BB6D     		ldr	r3, [r7, #88]
 587 0228 1100     		movs	r1, r2
 588 022a 1800     		movs	r0, r3
 589 022c FFF7FEFF 		bl	GetRowAddrBySeqNum
 590 0230 0300     		movs	r3, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 17


 591 0232 3B65     		str	r3, [r7, #80]
 311:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 312:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if (0u != startRowAddr)
 592              		.loc 1 312 0
 593 0234 3B6D     		ldr	r3, [r7, #80]
 594 0236 002B     		cmp	r3, #0
 595 0238 69D0     		beq	.L29
 596              	.LBB4:
 313:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 314:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* The following variables are introduced to increase code readability. */
 315:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 startAddr  = *(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFFSET)
 597              		.loc 1 315 0
 598 023a 3B6D     		ldr	r3, [r7, #80]
 599 023c 0433     		adds	r3, r3, #4
 600 023e 1B68     		ldr	r3, [r3]
 601 0240 FB61     		str	r3, [r7, #28]
 316:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 endAddr    = startAddr + (*(uint32 *)(startRowAddr + CY_EM_EEPROM_HEADER
 602              		.loc 1 316 0
 603 0242 3B6D     		ldr	r3, [r7, #80]
 604 0244 0833     		adds	r3, r3, #8
 605 0246 1A68     		ldr	r2, [r3]
 606 0248 FB69     		ldr	r3, [r7, #28]
 607 024a D318     		adds	r3, r2, r3
 608 024c BB61     		str	r3, [r7, #24]
 317:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 318:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Check if the current row EEPROM header contains the data requested for read 
 319:Generated_Source\PSoC4/cy_em_eeprom.c ****                     if(0u != CY_EM_EEPROM_IS_ADDRESES_CROSSING(startAddr, endAddr, addr, addr + siz
 609              		.loc 1 319 0
 610 024e FA69     		ldr	r2, [r7, #28]
 611 0250 FB68     		ldr	r3, [r7, #12]
 612 0252 9A42     		cmp	r2, r3
 613 0254 08D9     		bls	.L30
 614              		.loc 1 319 0 is_stmt 0 discriminator 1
 615 0256 FA68     		ldr	r2, [r7, #12]
 616 0258 7B68     		ldr	r3, [r7, #4]
 617 025a D318     		adds	r3, r2, r3
 618 025c FA69     		ldr	r2, [r7, #28]
 619 025e 9A42     		cmp	r2, r3
 620 0260 9B41     		sbcs	r3, r3, r3
 621 0262 5B42     		rsbs	r3, r3, #0
 622 0264 DBB2     		uxtb	r3, r3
 623 0266 05E0     		b	.L31
 624              	.L30:
 625              		.loc 1 319 0 discriminator 2
 626 0268 FA68     		ldr	r2, [r7, #12]
 627 026a BB69     		ldr	r3, [r7, #24]
 628 026c 9A42     		cmp	r2, r3
 629 026e 9B41     		sbcs	r3, r3, r3
 630 0270 5B42     		rsbs	r3, r3, #0
 631 0272 DBB2     		uxtb	r3, r3
 632              	.L31:
 633              		.loc 1 319 0 discriminator 4
 634 0274 002B     		cmp	r3, #0
 635 0276 4AD0     		beq	.L29
 636              	.LBB5:
 320:Generated_Source\PSoC4/cy_em_eeprom.c ****                     {
 321:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 srcOffset = (startAddr > addr) ? (0u) : (addr - startAddr);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 18


 637              		.loc 1 321 0 is_stmt 1
 638 0278 FA69     		ldr	r2, [r7, #28]
 639 027a FB68     		ldr	r3, [r7, #12]
 640 027c 9A42     		cmp	r2, r3
 641 027e 03D8     		bhi	.L32
 642              		.loc 1 321 0 is_stmt 0 discriminator 1
 643 0280 FA68     		ldr	r2, [r7, #12]
 644 0282 FB69     		ldr	r3, [r7, #28]
 645 0284 D31A     		subs	r3, r2, r3
 646 0286 00E0     		b	.L33
 647              	.L32:
 648              		.loc 1 321 0 discriminator 2
 649 0288 0023     		movs	r3, #0
 650              	.L33:
 651              		.loc 1 321 0 discriminator 4
 652 028a 7B61     		str	r3, [r7, #20]
 322:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 dstOffset = (startAddr > addr) ? (startAddr - addr): (0u);
 653              		.loc 1 322 0 is_stmt 1 discriminator 4
 654 028c FA69     		ldr	r2, [r7, #28]
 655 028e FB68     		ldr	r3, [r7, #12]
 656 0290 9A42     		cmp	r2, r3
 657 0292 03D9     		bls	.L34
 658              		.loc 1 322 0 is_stmt 0 discriminator 1
 659 0294 FA69     		ldr	r2, [r7, #28]
 660 0296 FB68     		ldr	r3, [r7, #12]
 661 0298 D31A     		subs	r3, r2, r3
 662 029a 00E0     		b	.L35
 663              	.L34:
 664              		.loc 1 322 0 discriminator 2
 665 029c 0023     		movs	r3, #0
 666              	.L35:
 667              		.loc 1 322 0 discriminator 4
 668 029e 3B61     		str	r3, [r7, #16]
 323:Generated_Source\PSoC4/cy_em_eeprom.c ****                         rdAddr = (startAddr > addr) ? (startAddr) : (addr);
 669              		.loc 1 323 0 is_stmt 1 discriminator 4
 670 02a0 FA69     		ldr	r2, [r7, #28]
 671 02a2 FB68     		ldr	r3, [r7, #12]
 672 02a4 9342     		cmp	r3, r2
 673 02a6 00D2     		bcs	.L36
 674 02a8 1300     		movs	r3, r2
 675              	.L36:
 676 02aa 3B64     		str	r3, [r7, #64]
 324:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 325:Generated_Source\PSoC4/cy_em_eeprom.c ****                         srcOffset += CY_EM_EEPROM_HEADER_DATA_OFFSET;
 677              		.loc 1 325 0 discriminator 4
 678 02ac 7B69     		ldr	r3, [r7, #20]
 679 02ae 0C33     		adds	r3, r3, #12
 680 02b0 7B61     		str	r3, [r7, #20]
 326:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 327:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Calculate the number of bytes to be read from the current row's EEPROM h
 328:Generated_Source\PSoC4/cy_em_eeprom.c ****                         numBytesToRead = ((endAddr < (addr + size)) ? endAddr : (addr + size)) - rd
 681              		.loc 1 328 0 discriminator 4
 682 02b2 FA68     		ldr	r2, [r7, #12]
 683 02b4 7B68     		ldr	r3, [r7, #4]
 684 02b6 D318     		adds	r3, r2, r3
 685 02b8 BA69     		ldr	r2, [r7, #24]
 686 02ba 9342     		cmp	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 19


 687 02bc 00D9     		bls	.L37
 688 02be 1300     		movs	r3, r2
 689              	.L37:
 690 02c0 3A6C     		ldr	r2, [r7, #64]
 691 02c2 9B1A     		subs	r3, r3, r2
 692 02c4 7B65     		str	r3, [r7, #84]
 329:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 330:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Calculate the offset in the user buffer from which the data will be upda
 331:Generated_Source\PSoC4/cy_em_eeprom.c ****                         eeData = ((uint32)eepromData) + dstOffset;
 693              		.loc 1 331 0 discriminator 4
 694 02c6 BA68     		ldr	r2, [r7, #8]
 695 02c8 3B69     		ldr	r3, [r7, #16]
 696 02ca D318     		adds	r3, r2, r3
 697 02cc 7B64     		str	r3, [r7, #68]
 332:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 333:Generated_Source\PSoC4/cy_em_eeprom.c ****                         /* Check a checksum of the EEPROM row and if it is bad, check a checksum in
 334:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * corresponding row in redundant copy, otherwise return failure. Copy the d
 335:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * from the recent EEPROM headers to the user buffer. This will overwrite th
 336:Generated_Source\PSoC4/cy_em_eeprom.c ****                         * data copied form EEPROM data locations as the data in EEPROM headers is n
 337:Generated_Source\PSoC4/cy_em_eeprom.c ****                         */
 338:Generated_Source\PSoC4/cy_em_eeprom.c ****                         if(0u != context->redundantCopy)
 698              		.loc 1 338 0 discriminator 4
 699 02ce 3B68     		ldr	r3, [r7]
 700 02d0 1B7D     		ldrb	r3, [r3, #20]
 701 02d2 002B     		cmp	r3, #0
 702 02d4 12D0     		beq	.L38
 339:Generated_Source\PSoC4/cy_em_eeprom.c ****                         {
 340:Generated_Source\PSoC4/cy_em_eeprom.c ****                             ret = CheckCrcAndCopy(startRowAddr, eeData, srcOffset, numBytesToRead, 
 703              		.loc 1 340 0
 704 02d6 5F23     		movs	r3, #95
 705 02d8 FC18     		adds	r4, r7, r3
 706 02da 7D6D     		ldr	r5, [r7, #84]
 707 02dc 7A69     		ldr	r2, [r7, #20]
 708 02de 796C     		ldr	r1, [r7, #68]
 709 02e0 386D     		ldr	r0, [r7, #80]
 710 02e2 3B68     		ldr	r3, [r7]
 711 02e4 0093     		str	r3, [sp]
 712 02e6 2B00     		movs	r3, r5
 713 02e8 FFF7FEFF 		bl	CheckCrcAndCopy
 714 02ec 0300     		movs	r3, r0
 715 02ee 2370     		strb	r3, [r4]
 341:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 342:Generated_Source\PSoC4/cy_em_eeprom.c ****                             if(CY_EM_EEPROM_SUCCESS != ret)
 716              		.loc 1 342 0
 717 02f0 5F23     		movs	r3, #95
 718 02f2 FB18     		adds	r3, r7, r3
 719 02f4 1B78     		ldrb	r3, [r3]
 720 02f6 002B     		cmp	r3, #0
 721 02f8 09D0     		beq	.L29
 343:Generated_Source\PSoC4/cy_em_eeprom.c ****                             {
 344:Generated_Source\PSoC4/cy_em_eeprom.c ****                                 break;
 722              		.loc 1 344 0
 723 02fa 0FE0     		b	.L7
 724              	.L38:
 345:Generated_Source\PSoC4/cy_em_eeprom.c ****                             }
 346:Generated_Source\PSoC4/cy_em_eeprom.c ****                         }
 347:Generated_Source\PSoC4/cy_em_eeprom.c ****                         else
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 20


 348:Generated_Source\PSoC4/cy_em_eeprom.c ****                         {
 349:Generated_Source\PSoC4/cy_em_eeprom.c ****                             (void)memcpy((void *)(eeData), (void *)(startRowAddr + srcOffset), numB
 725              		.loc 1 349 0
 726 02fc 786C     		ldr	r0, [r7, #68]
 727 02fe 3A6D     		ldr	r2, [r7, #80]
 728 0300 7B69     		ldr	r3, [r7, #20]
 729 0302 D318     		adds	r3, r2, r3
 730 0304 1900     		movs	r1, r3
 731 0306 7B6D     		ldr	r3, [r7, #84]
 732 0308 1A00     		movs	r2, r3
 733 030a FFF7FEFF 		bl	memcpy
 734              	.L29:
 735              	.LBE5:
 736              	.LBE4:
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 737              		.loc 1 308 0 discriminator 2
 738 030e BB6D     		ldr	r3, [r7, #88]
 739 0310 0133     		adds	r3, r3, #1
 740 0312 BB65     		str	r3, [r7, #88]
 741              	.L28:
 308:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 742              		.loc 1 308 0 is_stmt 0 discriminator 1
 743 0314 BA6D     		ldr	r2, [r7, #88]
 744 0316 7B6B     		ldr	r3, [r7, #52]
 745 0318 9A42     		cmp	r2, r3
 746 031a 83D9     		bls	.L39
 747              	.L7:
 748              	.LBE2:
 350:Generated_Source\PSoC4/cy_em_eeprom.c ****                         }
 351:Generated_Source\PSoC4/cy_em_eeprom.c ****                     }
 352:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 353:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 354:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 355:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 356:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 357:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 749              		.loc 1 357 0 is_stmt 1
 750 031c 5F23     		movs	r3, #95
 751 031e FB18     		adds	r3, r7, r3
 752 0320 1B78     		ldrb	r3, [r3]
 358:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 753              		.loc 1 358 0
 754 0322 1800     		movs	r0, r3
 755 0324 BD46     		mov	sp, r7
 756 0326 18B0     		add	sp, sp, #96
 757              		@ sp needed
 758 0328 B0BD     		pop	{r4, r5, r7, pc}
 759              		.cfi_endproc
 760              	.LFE3:
 761              		.size	Cy_Em_EEPROM_Read, .-Cy_Em_EEPROM_Read
 762              		.global	__aeabi_uidivmod
 763 032a C046     		.section	.text.Cy_Em_EEPROM_Write,"ax",%progbits
 764              		.align	2
 765              		.global	Cy_Em_EEPROM_Write
 766              		.code	16
 767              		.thumb_func
 768              		.type	Cy_Em_EEPROM_Write, %function
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 21


 769              	Cy_Em_EEPROM_Write:
 770              	.LFB4:
 359:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 360:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 361:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 362:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Write
 363:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 364:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 365:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function takes the logical EEPROM address and converts it to the actual
 366:Generated_Source\PSoC4/cy_em_eeprom.c **** * physical address and writes data there. If wear leveling is implemented, the
 367:Generated_Source\PSoC4/cy_em_eeprom.c **** * writing process will use the wear leveling techniques. This is a blocking
 368:Generated_Source\PSoC4/cy_em_eeprom.c **** * function and it does not return until the write operation is completed. The
 369:Generated_Source\PSoC4/cy_em_eeprom.c **** * user firmware should not enter Hibernate mode until write is completed. The
 370:Generated_Source\PSoC4/cy_em_eeprom.c **** * write operation is allowed in Sleep and Deep-Sleep modes. During the flash
 371:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation, the device should not be reset, including the XRES pin, a software
 372:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset, and watchdog reset sources. Also, low-voltage detect circuits should
 373:Generated_Source\PSoC4/cy_em_eeprom.c **** * be configured to generate an interrupt instead of a reset. Otherwise, portions
 374:Generated_Source\PSoC4/cy_em_eeprom.c **** * of flash may undergo unexpected changes.
 375:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 376:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
 377:Generated_Source\PSoC4/cy_em_eeprom.c **** * The logical start address in EEPROM to start writing data from.
 378:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 379:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param eepromData
 380:Generated_Source\PSoC4/cy_em_eeprom.c **** * Data to write to EEPROM.
 381:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 382:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param size
 383:Generated_Source\PSoC4/cy_em_eeprom.c **** * The amount of data to write to EEPROM.
 384:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 385:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 386:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 387:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 388:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 389:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 390:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 391:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 392:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform write
 393:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 394:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 395:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 396:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 397:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 398:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 399:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 400:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 401:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 402:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 403:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 404:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 405:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 406:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 407:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM write is not completed.
 408:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 409:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 410:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 411:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Write(uint32 addr,
 412:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             void * eepromData,
 413:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             uint32 size,
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 22


 414:Generated_Source\PSoC4/cy_em_eeprom.c ****                                             cy_stc_eeprom_context_t * context)
 415:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 771              		.loc 1 415 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 336
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775 0000 B0B5     		push	{r4, r5, r7, lr}
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 4, -16
 778              		.cfi_offset 5, -12
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 D6B0     		sub	sp, sp, #344
 782              		.cfi_def_cfa_offset 360
 783 0004 02AF     		add	r7, sp, #8
 784              		.cfi_def_cfa 7, 352
 785 0006 F860     		str	r0, [r7, #12]
 786 0008 B960     		str	r1, [r7, #8]
 787 000a 7A60     		str	r2, [r7, #4]
 788 000c 3B60     		str	r3, [r7]
 416:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 789              		.loc 1 416 0
 790 000e 5023     		movs	r3, #80
 791 0010 FF33     		adds	r3, r3, #255
 792 0012 FB18     		adds	r3, r7, r3
 793 0014 0122     		movs	r2, #1
 794 0016 1A70     		strb	r2, [r3]
 417:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 418:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 wrCnt;
 419:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 actEmEepromRowNum;
 420:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
 421:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = 0u;
 795              		.loc 1 421 0
 796 0018 0023     		movs	r3, #0
 797 001a 3B62     		str	r3, [r7, #32]
 422:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = 0u;
 798              		.loc 1 422 0
 799 001c 0023     		movs	r3, #0
 800 001e FB61     		str	r3, [r7, #28]
 423:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 tmpRowAddr;
 424:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 801              		.loc 1 424 0
 802 0020 3B68     		ldr	r3, [r7]
 803 0022 9B68     		ldr	r3, [r3, #8]
 804 0024 BB61     		str	r3, [r7, #24]
 425:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 426:Generated_Source\PSoC4/cy_em_eeprom.c ****     void * tmpData;
 427:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 eeData = (uint32) eepromData; /* To avoid the pointer arithmetic with void */
 805              		.loc 1 427 0
 806 0026 BB68     		ldr	r3, [r7, #8]
 807 0028 9E22     		movs	r2, #158
 808 002a 5200     		lsls	r2, r2, #1
 809 002c BA18     		adds	r2, r7, r2
 810 002e 1360     		str	r3, [r2]
 428:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 429:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the EEPROM data does not exceed the EEPROM capacity */
 430:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((0u != size) && ((addr + size) <= (context->eepromSize)) && (NULL != eepromData))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 23


 811              		.loc 1 430 0
 812 0030 7B68     		ldr	r3, [r7, #4]
 813 0032 002B     		cmp	r3, #0
 814 0034 00D1     		bne	.LCB676
 815 0036 C4E1     		b	.L42	@long jump
 816              	.LCB676:
 817              		.loc 1 430 0 is_stmt 0 discriminator 1
 818 0038 FA68     		ldr	r2, [r7, #12]
 819 003a 7B68     		ldr	r3, [r7, #4]
 820 003c D218     		adds	r2, r2, r3
 821 003e 3B68     		ldr	r3, [r7]
 822 0040 DB68     		ldr	r3, [r3, #12]
 823 0042 9A42     		cmp	r2, r3
 824 0044 00D9     		bls	.LCB683
 825 0046 BCE1     		b	.L42	@long jump
 826              	.LCB683:
 827              		.loc 1 430 0 discriminator 2
 828 0048 BB68     		ldr	r3, [r7, #8]
 829 004a 002B     		cmp	r3, #0
 830 004c 00D1     		bne	.LCB686
 831 004e B8E1     		b	.L42	@long jump
 832              	.LCB686:
 833              	.LBB6:
 431:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 432:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = ((size - 1u) / CY_EM_EEPROM_HEADER_DATA_LEN) + 1u;
 834              		.loc 1 432 0 is_stmt 1
 835 0050 7B68     		ldr	r3, [r7, #4]
 836 0052 013B     		subs	r3, r3, #1
 837 0054 7021     		movs	r1, #112
 838 0056 1800     		movs	r0, r3
 839 0058 FFF7FEFF 		bl	__aeabi_uidiv
 840 005c 0300     		movs	r3, r0
 841 005e 0133     		adds	r3, r3, #1
 842 0060 9A22     		movs	r2, #154
 843 0062 5200     		lsls	r2, r2, #1
 844 0064 BA18     		adds	r2, r7, r2
 845 0066 1360     		str	r3, [r2]
 433:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 eeHeaderDataOffset = 0u;
 846              		.loc 1 433 0
 847 0068 0023     		movs	r3, #0
 848 006a 3B61     		str	r3, [r7, #16]
 434:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(wrCnt = 0u; wrCnt < numWrites; wrCnt++)
 849              		.loc 1 435 0
 850 006c 0023     		movs	r3, #0
 851 006e A222     		movs	r2, #162
 852 0070 5200     		lsls	r2, r2, #1
 853 0072 BA18     		adds	r2, r7, r2
 854 0074 1360     		str	r3, [r2]
 855 0076 97E1     		b	.L43
 856              	.L61:
 857              	.LBB7:
 436:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 437:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 skipOperation = 0u;
 858              		.loc 1 437 0
 859 0078 0023     		movs	r3, #0
 860 007a 9C22     		movs	r2, #156
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 24


 861 007c 5200     		lsls	r2, r2, #1
 862 007e BA18     		adds	r2, r7, r2
 863 0080 1360     		str	r3, [r2]
 438:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the sequence number of the last written row */
 439:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 864              		.loc 1 439 0
 865 0082 BB69     		ldr	r3, [r7, #24]
 866 0084 1B68     		ldr	r3, [r3]
 867 0086 9822     		movs	r2, #152
 868 0088 5200     		lsls	r2, r2, #1
 869 008a BA18     		adds	r2, r7, r2
 870 008c 1360     		str	r3, [r2]
 440:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 441:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be written. The "emEepromRowAddr" may be
 442:Generated_Source\PSoC4/cy_em_eeprom.c ****             * updated with the proper address (if wear leveling is used). The
 443:Generated_Source\PSoC4/cy_em_eeprom.c ****             * "emEepromRowRdAddr" will point to the row address from which the historic
 444:Generated_Source\PSoC4/cy_em_eeprom.c ****             * data will be read into the RAM buffer.
 445:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 446:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 871              		.loc 1 446 0
 872 008e 3B68     		ldr	r3, [r7]
 873 0090 1422     		movs	r2, #20
 874 0092 BA18     		adds	r2, r7, r2
 875 0094 1821     		movs	r1, #24
 876 0096 7918     		adds	r1, r7, r1
 877 0098 9820     		movs	r0, #152
 878 009a 4000     		lsls	r0, r0, #1
 879 009c 3818     		adds	r0, r7, r0
 880 009e 0068     		ldr	r0, [r0]
 881 00a0 FFF7FEFF 		bl	GetNextRowToWrite
 447:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 448:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Clear the RAM buffer so to not put junk into flash */
 449:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memset(writeRamBuffer, 0, CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 882              		.loc 1 449 0
 883 00a4 8023     		movs	r3, #128
 884 00a6 5A00     		lsls	r2, r3, #1
 885 00a8 2423     		movs	r3, #36
 886 00aa FB18     		adds	r3, r7, r3
 887 00ac 0021     		movs	r1, #0
 888 00ae 1800     		movs	r0, r3
 889 00b0 FFF7FEFF 		bl	memset
 450:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 451:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Fill the EM_EEPROM header info for the row in the RAM buffer */
 452:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 890              		.loc 1 452 0
 891 00b4 9823     		movs	r3, #152
 892 00b6 5B00     		lsls	r3, r3, #1
 893 00b8 FB18     		adds	r3, r7, r3
 894 00ba 1B68     		ldr	r3, [r3]
 895 00bc 0133     		adds	r3, r3, #1
 896 00be 9822     		movs	r2, #152
 897 00c0 5200     		lsls	r2, r2, #1
 898 00c2 BA18     		adds	r2, r7, r2
 899 00c4 1360     		str	r3, [r2]
 453:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 900              		.loc 1 453 0
 901 00c6 C34B     		ldr	r3, .L64
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 25


 902 00c8 A822     		movs	r2, #168
 903 00ca 5200     		lsls	r2, r2, #1
 904 00cc 9446     		mov	ip, r2
 905 00ce BC44     		add	ip, ip, r7
 906 00d0 6344     		add	r3, r3, ip
 907 00d2 9822     		movs	r2, #152
 908 00d4 5200     		lsls	r2, r2, #1
 909 00d6 BA18     		adds	r2, r7, r2
 910 00d8 1268     		ldr	r2, [r2]
 911 00da 1A60     		str	r2, [r3]
 454:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_ADDR_OFFSET_U32] = addr;
 912              		.loc 1 454 0
 913 00dc BD4B     		ldr	r3, .L64
 914 00de A822     		movs	r2, #168
 915 00e0 5200     		lsls	r2, r2, #1
 916 00e2 9446     		mov	ip, r2
 917 00e4 BC44     		add	ip, ip, r7
 918 00e6 6344     		add	r3, r3, ip
 919 00e8 FA68     		ldr	r2, [r7, #12]
 920 00ea 5A60     		str	r2, [r3, #4]
 455:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpData = (void *) eeData;
 921              		.loc 1 455 0
 922 00ec 9E23     		movs	r3, #158
 923 00ee 5B00     		lsls	r3, r3, #1
 924 00f0 FB18     		adds	r3, r7, r3
 925 00f2 1B68     		ldr	r3, [r3]
 926 00f4 9622     		movs	r2, #150
 927 00f6 5200     		lsls	r2, r2, #1
 928 00f8 BA18     		adds	r2, r7, r2
 929 00fa 1360     		str	r3, [r2]
 456:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 457:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if this is the last row to write */
 458:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(wrCnt == (numWrites - 1u))
 930              		.loc 1 458 0
 931 00fc 9A23     		movs	r3, #154
 932 00fe 5B00     		lsls	r3, r3, #1
 933 0100 FB18     		adds	r3, r7, r3
 934 0102 1B68     		ldr	r3, [r3]
 935 0104 5A1E     		subs	r2, r3, #1
 936 0106 A223     		movs	r3, #162
 937 0108 5B00     		lsls	r3, r3, #1
 938 010a FB18     		adds	r3, r7, r3
 939 010c 1B68     		ldr	r3, [r3]
 940 010e 9A42     		cmp	r2, r3
 941 0110 08D1     		bne	.L44
 459:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 460:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Fill in the remaining size value to the EEPROM header. */
 461:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = size;
 942              		.loc 1 461 0
 943 0112 B04B     		ldr	r3, .L64
 944 0114 A822     		movs	r2, #168
 945 0116 5200     		lsls	r2, r2, #1
 946 0118 9446     		mov	ip, r2
 947 011a BC44     		add	ip, ip, r7
 948 011c 6344     		add	r3, r3, ip
 949 011e 7A68     		ldr	r2, [r7, #4]
 950 0120 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 26


 951 0122 16E0     		b	.L45
 952              	.L44:
 462:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 463:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 464:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 465:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* This is not the last row to write in the current EEPROM write operation.
 466:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * Write the maximum possible data size to the EEPROM header. Update the
 467:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * size, eeData and addr respectively.
 468:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 469:Generated_Source\PSoC4/cy_em_eeprom.c ****                 writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32] = CY_EM_EEPROM_HEADER_DATA_LEN;
 953              		.loc 1 469 0
 954 0124 AB4B     		ldr	r3, .L64
 955 0126 A822     		movs	r2, #168
 956 0128 5200     		lsls	r2, r2, #1
 957 012a 9446     		mov	ip, r2
 958 012c BC44     		add	ip, ip, r7
 959 012e 6344     		add	r3, r3, ip
 960 0130 7022     		movs	r2, #112
 961 0132 9A60     		str	r2, [r3, #8]
 470:Generated_Source\PSoC4/cy_em_eeprom.c ****                 size -= CY_EM_EEPROM_HEADER_DATA_LEN;
 962              		.loc 1 470 0
 963 0134 7B68     		ldr	r3, [r7, #4]
 964 0136 703B     		subs	r3, r3, #112
 965 0138 7B60     		str	r3, [r7, #4]
 471:Generated_Source\PSoC4/cy_em_eeprom.c ****                 addr += CY_EM_EEPROM_HEADER_DATA_LEN;
 966              		.loc 1 471 0
 967 013a FB68     		ldr	r3, [r7, #12]
 968 013c 7033     		adds	r3, r3, #112
 969 013e FB60     		str	r3, [r7, #12]
 472:Generated_Source\PSoC4/cy_em_eeprom.c ****                 eeData += CY_EM_EEPROM_HEADER_DATA_LEN;
 970              		.loc 1 472 0
 971 0140 9E23     		movs	r3, #158
 972 0142 5B00     		lsls	r3, r3, #1
 973 0144 FB18     		adds	r3, r7, r3
 974 0146 1B68     		ldr	r3, [r3]
 975 0148 7033     		adds	r3, r3, #112
 976 014a 9E22     		movs	r2, #158
 977 014c 5200     		lsls	r2, r2, #1
 978 014e BA18     		adds	r2, r7, r2
 979 0150 1360     		str	r3, [r2]
 980              	.L45:
 473:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 474:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 475:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the EEPROM header */
 476:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_HEADER_DATA_OFFSET_U32],
 477:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 478:Generated_Source\PSoC4/cy_em_eeprom.c ****                          writeRamBuffer[CY_EM_EEPROM_HEADER_LEN_OFFSET_U32]);
 981              		.loc 1 478 0
 982 0152 A04B     		ldr	r3, .L64
 983 0154 A822     		movs	r2, #168
 984 0156 5200     		lsls	r2, r2, #1
 985 0158 9446     		mov	ip, r2
 986 015a BC44     		add	ip, ip, r7
 987 015c 6344     		add	r3, r3, ip
 988 015e 9A68     		ldr	r2, [r3, #8]
 476:Generated_Source\PSoC4/cy_em_eeprom.c ****                          tmpData,
 989              		.loc 1 476 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 27


 990 0160 9623     		movs	r3, #150
 991 0162 5B00     		lsls	r3, r3, #1
 992 0164 FB18     		adds	r3, r7, r3
 993 0166 1968     		ldr	r1, [r3]
 994 0168 2423     		movs	r3, #36
 995 016a FB18     		adds	r3, r7, r3
 996 016c 0C33     		adds	r3, r3, #12
 997 016e 1800     		movs	r0, r3
 998 0170 FFF7FEFF 		bl	memcpy
 479:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 480:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(emEepromRowRdAddr != 0UL)
 999              		.loc 1 480 0
 1000 0174 7B69     		ldr	r3, [r7, #20]
 1001 0176 002B     		cmp	r3, #0
 1002 0178 09D0     		beq	.L46
 481:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 482:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Copy the EEPROM historic data for this row from flash to RAM */
 483:Generated_Source\PSoC4/cy_em_eeprom.c ****                 (void)memcpy((void *)&writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 484:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 1003              		.loc 1 484 0
 1004 017a 7B69     		ldr	r3, [r7, #20]
 1005 017c 8033     		adds	r3, r3, #128
 483:Generated_Source\PSoC4/cy_em_eeprom.c ****                              (void *)(emEepromRowRdAddr + CY_EM_EEPROM_EEPROM_DATA_LEN),
 1006              		.loc 1 483 0
 1007 017e 1900     		movs	r1, r3
 1008 0180 2423     		movs	r3, #36
 1009 0182 FB18     		adds	r3, r7, r3
 1010 0184 8033     		adds	r3, r3, #128
 1011 0186 8022     		movs	r2, #128
 1012 0188 1800     		movs	r0, r3
 1013 018a FFF7FEFF 		bl	memcpy
 1014              	.L46:
 485:Generated_Source\PSoC4/cy_em_eeprom.c ****                              CY_EM_EEPROM_EEPROM_DATA_LEN);
 486:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 487:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 488:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if there is data for this location in other EEPROM headers:
 489:Generated_Source\PSoC4/cy_em_eeprom.c ****             * find out the row with the lowest possible sequence number which
 490:Generated_Source\PSoC4/cy_em_eeprom.c ****             * may contain the data for the current row.
 491:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 492:Generated_Source\PSoC4/cy_em_eeprom.c ****             i = (seqNum > context->numberOfRows) ? ((seqNum - (context->numberOfRows)) + 1u) : 1u;
 1015              		.loc 1 492 0
 1016 018e 3B68     		ldr	r3, [r7]
 1017 0190 5A68     		ldr	r2, [r3, #4]
 1018 0192 9823     		movs	r3, #152
 1019 0194 5B00     		lsls	r3, r3, #1
 1020 0196 FB18     		adds	r3, r7, r3
 1021 0198 1B68     		ldr	r3, [r3]
 1022 019a 9A42     		cmp	r2, r3
 1023 019c 08D2     		bcs	.L47
 1024              		.loc 1 492 0 is_stmt 0 discriminator 1
 1025 019e 3B68     		ldr	r3, [r7]
 1026 01a0 5B68     		ldr	r3, [r3, #4]
 1027 01a2 9822     		movs	r2, #152
 1028 01a4 5200     		lsls	r2, r2, #1
 1029 01a6 BA18     		adds	r2, r7, r2
 1030 01a8 1268     		ldr	r2, [r2]
 1031 01aa D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 28


 1032 01ac 0133     		adds	r3, r3, #1
 1033 01ae 00E0     		b	.L48
 1034              	.L47:
 1035              		.loc 1 492 0 discriminator 2
 1036 01b0 0123     		movs	r3, #1
 1037              	.L48:
 1038              		.loc 1 492 0 discriminator 4
 1039 01b2 A422     		movs	r2, #164
 1040 01b4 5200     		lsls	r2, r2, #1
 1041 01b6 BA18     		adds	r2, r7, r2
 1042 01b8 1360     		str	r3, [r2]
 493:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             for(; i <= seqNum; i++)
 1043              		.loc 1 494 0 is_stmt 1 discriminator 4
 1044 01ba A3E0     		b	.L49
 1045              	.L56:
 495:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 496:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(i == seqNum)
 1046              		.loc 1 496 0
 1047 01bc A423     		movs	r3, #164
 1048 01be 5B00     		lsls	r3, r3, #1
 1049 01c0 FB18     		adds	r3, r7, r3
 1050 01c2 1A68     		ldr	r2, [r3]
 1051 01c4 9823     		movs	r3, #152
 1052 01c6 5B00     		lsls	r3, r3, #1
 1053 01c8 FB18     		adds	r3, r7, r3
 1054 01ca 1B68     		ldr	r3, [r3]
 1055 01cc 9A42     		cmp	r2, r3
 1056 01ce 06D1     		bne	.L50
 497:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 498:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* The code reached the row that is about to be written. Analyze the recently
 499:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * created EEPROM header (stored in the RAM buffer currently): if it contains
 500:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the data for EEPROM data locations in the row that is about to be written.
 501:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 502:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = (uint32) writeRamBuffer;
 1057              		.loc 1 502 0
 1058 01d0 2423     		movs	r3, #36
 1059 01d2 FB18     		adds	r3, r7, r3
 1060 01d4 A022     		movs	r2, #160
 1061 01d6 5200     		lsls	r2, r2, #1
 1062 01d8 BA18     		adds	r2, r7, r2
 1063 01da 1360     		str	r3, [r2]
 1064 01dc 0DE0     		b	.L51
 1065              	.L50:
 503:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 504:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 505:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 506:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Retrieve the address of the previously written row by its sequence number.
 507:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * The pointer will be used to get data from the respective EEPROM header.
 508:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 509:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = GetRowAddrBySeqNum(i, context);
 1066              		.loc 1 509 0
 1067 01de 3A68     		ldr	r2, [r7]
 1068 01e0 A423     		movs	r3, #164
 1069 01e2 5B00     		lsls	r3, r3, #1
 1070 01e4 FB18     		adds	r3, r7, r3
 1071 01e6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 29


 1072 01e8 1100     		movs	r1, r2
 1073 01ea 1800     		movs	r0, r3
 1074 01ec FFF7FEFF 		bl	GetRowAddrBySeqNum
 1075 01f0 0300     		movs	r3, r0
 1076 01f2 A022     		movs	r2, #160
 1077 01f4 5200     		lsls	r2, r2, #1
 1078 01f6 BA18     		adds	r2, r7, r2
 1079 01f8 1360     		str	r3, [r2]
 1080              	.L51:
 510:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 511:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 512:Generated_Source\PSoC4/cy_em_eeprom.c ****                 actEmEepromRowNum = CY_EM_EEPROM_GET_ACT_ROW_NUM_FROM_ADDR(emEepromRowAddr,
 1081              		.loc 1 512 0
 1082 01fa BA69     		ldr	r2, [r7, #24]
 1083 01fc 3B68     		ldr	r3, [r7]
 1084 01fe 9B69     		ldr	r3, [r3, #24]
 1085 0200 D31A     		subs	r3, r2, r3
 1086 0202 1A0A     		lsrs	r2, r3, #8
 1087 0204 3B68     		ldr	r3, [r7]
 1088 0206 5B68     		ldr	r3, [r3, #4]
 1089 0208 1900     		movs	r1, r3
 1090 020a 1000     		movs	r0, r2
 1091 020c FFF7FEFF 		bl	__aeabi_uidivmod
 1092 0210 0B00     		movs	r3, r1
 1093 0212 9422     		movs	r2, #148
 1094 0214 5200     		lsls	r2, r2, #1
 1095 0216 BA18     		adds	r2, r7, r2
 1096 0218 1360     		str	r3, [r2]
 513:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->numberOfRows,
 514:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                                            context->userFlashStartA
 515:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0UL != tmpRowAddr)
 1097              		.loc 1 515 0
 1098 021a A023     		movs	r3, #160
 1099 021c 5B00     		lsls	r3, r3, #1
 1100 021e FB18     		adds	r3, r7, r3
 1101 0220 1B68     		ldr	r3, [r3]
 1102 0222 002B     		cmp	r3, #0
 1103 0224 21D0     		beq	.L52
 516:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 517:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Calculate the required addressed for the later EEPROM historic data update *
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation = GetAddresses(
 519:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 520:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &endAddr,
 521:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &eeHeaderDataOffset,
 522:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               actEmEepromRowNum,
 523:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_ADDR_OFF
 1104              		.loc 1 523 0
 1105 0226 A023     		movs	r3, #160
 1106 0228 5B00     		lsls	r3, r3, #1
 1107 022a FB18     		adds	r3, r7, r3
 1108 022c 1B68     		ldr	r3, [r3]
 1109 022e 0433     		adds	r3, r3, #4
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1110              		.loc 1 518 0
 1111 0230 1A68     		ldr	r2, [r3]
 524:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               *(uint32 *)(tmpRowAddr + CY_EM_EEPROM_HEADER_LEN_OFFS
 1112              		.loc 1 524 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 30


 1113 0232 A023     		movs	r3, #160
 1114 0234 5B00     		lsls	r3, r3, #1
 1115 0236 FB18     		adds	r3, r7, r3
 1116 0238 1B68     		ldr	r3, [r3]
 1117 023a 0833     		adds	r3, r3, #8
 518:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               &startAddr,
 1118              		.loc 1 518 0
 1119 023c 1B68     		ldr	r3, [r3]
 1120 023e 9421     		movs	r1, #148
 1121 0240 4900     		lsls	r1, r1, #1
 1122 0242 7918     		adds	r1, r7, r1
 1123 0244 0D68     		ldr	r5, [r1]
 1124 0246 1021     		movs	r1, #16
 1125 0248 7C18     		adds	r4, r7, r1
 1126 024a 1C21     		movs	r1, #28
 1127 024c 7918     		adds	r1, r7, r1
 1128 024e 2020     		movs	r0, #32
 1129 0250 3818     		adds	r0, r7, r0
 1130 0252 0193     		str	r3, [sp, #4]
 1131 0254 0092     		str	r2, [sp]
 1132 0256 2B00     		movs	r3, r5
 1133 0258 2200     		movs	r2, r4
 1134 025a FFF7FEFF 		bl	GetAddresses
 1135 025e 0300     		movs	r3, r0
 1136 0260 9C22     		movs	r2, #156
 1137 0262 5200     		lsls	r2, r2, #1
 1138 0264 BA18     		adds	r2, r7, r2
 1139 0266 1360     		str	r3, [r2]
 1140 0268 08E0     		b	.L53
 1141              	.L52:
 525:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 526:Generated_Source\PSoC4/cy_em_eeprom.c ****                 else
 527:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 528:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Skip writes to the RAM buffer */
 529:Generated_Source\PSoC4/cy_em_eeprom.c ****                     skipOperation++;
 1142              		.loc 1 529 0
 1143 026a 9C23     		movs	r3, #156
 1144 026c 5B00     		lsls	r3, r3, #1
 1145 026e FB18     		adds	r3, r7, r3
 1146 0270 1B68     		ldr	r3, [r3]
 1147 0272 0133     		adds	r3, r3, #1
 1148 0274 9C22     		movs	r2, #156
 1149 0276 5200     		lsls	r2, r2, #1
 1150 0278 BA18     		adds	r2, r7, r2
 1151 027a 1360     		str	r3, [r2]
 1152              	.L53:
 530:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 531:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 532:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write data to the RAM buffer */
 533:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u == skipOperation)
 1153              		.loc 1 533 0
 1154 027c 9C23     		movs	r3, #156
 1155 027e 5B00     		lsls	r3, r3, #1
 1156 0280 FB18     		adds	r3, r7, r3
 1157 0282 1B68     		ldr	r3, [r3]
 1158 0284 002B     		cmp	r3, #0
 1159 0286 20D1     		bne	.L54
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 31


 1160              	.LBB8:
 534:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 535:Generated_Source\PSoC4/cy_em_eeprom.c ****                     uint32 dataAddr = ((uint32)((uint8 *)&writeRamBuffer)) + startAddr;
 1161              		.loc 1 535 0
 1162 0288 2423     		movs	r3, #36
 1163 028a FA18     		adds	r2, r7, r3
 1164 028c 3B6A     		ldr	r3, [r7, #32]
 1165 028e D318     		adds	r3, r2, r3
 1166 0290 9222     		movs	r2, #146
 1167 0292 5200     		lsls	r2, r2, #1
 1168 0294 BA18     		adds	r2, r7, r2
 1169 0296 1360     		str	r3, [r2]
 536:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 537:Generated_Source\PSoC4/cy_em_eeprom.c ****                     /* Update the address to point to the EEPROM header data and not to
 538:Generated_Source\PSoC4/cy_em_eeprom.c ****                     * the start of the row.
 539:Generated_Source\PSoC4/cy_em_eeprom.c ****                     */
 540:Generated_Source\PSoC4/cy_em_eeprom.c ****                     tmpRowAddr = tmpRowAddr + CY_EM_EEPROM_HEADER_DATA_OFFSET + eeHeaderDataOffset;
 1170              		.loc 1 540 0
 1171 0298 3A69     		ldr	r2, [r7, #16]
 1172 029a A023     		movs	r3, #160
 1173 029c 5B00     		lsls	r3, r3, #1
 1174 029e FB18     		adds	r3, r7, r3
 1175 02a0 1B68     		ldr	r3, [r3]
 1176 02a2 D318     		adds	r3, r2, r3
 1177 02a4 0C33     		adds	r3, r3, #12
 1178 02a6 A022     		movs	r2, #160
 1179 02a8 5200     		lsls	r2, r2, #1
 1180 02aa BA18     		adds	r2, r7, r2
 1181 02ac 1360     		str	r3, [r2]
 541:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (void)memcpy((void *)(dataAddr), (void *)(tmpRowAddr), endAddr - startAddr);
 1182              		.loc 1 541 0
 1183 02ae 9223     		movs	r3, #146
 1184 02b0 5B00     		lsls	r3, r3, #1
 1185 02b2 FB18     		adds	r3, r7, r3
 1186 02b4 1868     		ldr	r0, [r3]
 1187 02b6 A023     		movs	r3, #160
 1188 02b8 5B00     		lsls	r3, r3, #1
 1189 02ba FB18     		adds	r3, r7, r3
 1190 02bc 1968     		ldr	r1, [r3]
 1191 02be FA69     		ldr	r2, [r7, #28]
 1192 02c0 3B6A     		ldr	r3, [r7, #32]
 1193 02c2 D31A     		subs	r3, r2, r3
 1194 02c4 1A00     		movs	r2, r3
 1195 02c6 FFF7FEFF 		bl	memcpy
 1196              	.L54:
 1197              	.LBE8:
 542:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 543:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 544:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Calculate the checksum if redundant copy is enabled */
 545:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(0u != context->redundantCopy)
 1198              		.loc 1 545 0
 1199 02ca 3B68     		ldr	r3, [r7]
 1200 02cc 1B7D     		ldrb	r3, [r3, #20]
 1201 02ce 002B     		cmp	r3, #0
 1202 02d0 0FD0     		beq	.L55
 546:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
 547:Generated_Source\PSoC4/cy_em_eeprom.c ****                     writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 32


 548:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1203              		.loc 1 548 0
 1204 02d2 2423     		movs	r3, #36
 1205 02d4 FB18     		adds	r3, r7, r3
 1206 02d6 8033     		adds	r3, r3, #128
 1207 02d8 8021     		movs	r1, #128
 1208 02da 1800     		movs	r0, r3
 1209 02dc FFF7FEFF 		bl	CalcChecksum
 1210 02e0 0300     		movs	r3, r0
 547:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1211              		.loc 1 547 0
 1212 02e2 1A00     		movs	r2, r3
 1213 02e4 3B4B     		ldr	r3, .L64
 1214 02e6 A821     		movs	r1, #168
 1215 02e8 4900     		lsls	r1, r1, #1
 1216 02ea 8C46     		mov	ip, r1
 1217 02ec BC44     		add	ip, ip, r7
 1218 02ee 6344     		add	r3, r3, ip
 1219 02f0 DA67     		str	r2, [r3, #124]
 1220              	.L55:
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1221              		.loc 1 494 0
 1222 02f2 A423     		movs	r3, #164
 1223 02f4 5B00     		lsls	r3, r3, #1
 1224 02f6 FB18     		adds	r3, r7, r3
 1225 02f8 1B68     		ldr	r3, [r3]
 1226 02fa 0133     		adds	r3, r3, #1
 1227 02fc A422     		movs	r2, #164
 1228 02fe 5200     		lsls	r2, r2, #1
 1229 0300 BA18     		adds	r2, r7, r2
 1230 0302 1360     		str	r3, [r2]
 1231              	.L49:
 494:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 1232              		.loc 1 494 0 is_stmt 0 discriminator 1
 1233 0304 A423     		movs	r3, #164
 1234 0306 5B00     		lsls	r3, r3, #1
 1235 0308 FB18     		adds	r3, r7, r3
 1236 030a 1A68     		ldr	r2, [r3]
 1237 030c 9823     		movs	r3, #152
 1238 030e 5B00     		lsls	r3, r3, #1
 1239 0310 FB18     		adds	r3, r7, r3
 1240 0312 1B68     		ldr	r3, [r3]
 1241 0314 9A42     		cmp	r2, r3
 1242 0316 00D8     		bhi	.LCB1070
 1243 0318 50E7     		b	.L56	@long jump
 1244              	.LCB1070:
 549:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 550:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
 551:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 552:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 553:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the data to the specified flash row */
 554:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromRowAddr, writeRamBuffer, context);
 1245              		.loc 1 554 0 is_stmt 1
 1246 031a BB69     		ldr	r3, [r7, #24]
 1247 031c 5022     		movs	r2, #80
 1248 031e FF32     		adds	r2, r2, #255
 1249 0320 BC18     		adds	r4, r7, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 33


 1250 0322 3A68     		ldr	r2, [r7]
 1251 0324 2421     		movs	r1, #36
 1252 0326 7918     		adds	r1, r7, r1
 1253 0328 1800     		movs	r0, r3
 1254 032a FFF7FEFF 		bl	WriteRow
 1255 032e 0300     		movs	r3, r0
 1256 0330 2370     		strb	r3, [r4]
 555:Generated_Source\PSoC4/cy_em_eeprom.c ****             tmpRowAddr = emEepromRowAddr;
 1257              		.loc 1 555 0
 1258 0332 BB69     		ldr	r3, [r7, #24]
 1259 0334 A022     		movs	r2, #160
 1260 0336 5200     		lsls	r2, r2, #1
 1261 0338 BA18     		adds	r2, r7, r2
 1262 033a 1360     		str	r3, [r2]
 556:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 557:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Check if redundant copy is used */
 558:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((0u != context->redundantCopy) && (CY_EM_EEPROM_SUCCESS == ret))
 1263              		.loc 1 558 0
 1264 033c 3B68     		ldr	r3, [r7]
 1265 033e 1B7D     		ldrb	r3, [r3, #20]
 1266 0340 002B     		cmp	r3, #0
 1267 0342 1FD0     		beq	.L57
 1268              		.loc 1 558 0 is_stmt 0 discriminator 1
 1269 0344 5023     		movs	r3, #80
 1270 0346 FF33     		adds	r3, r3, #255
 1271 0348 FB18     		adds	r3, r7, r3
 1272 034a 1B78     		ldrb	r3, [r3]
 1273 034c 002B     		cmp	r3, #0
 1274 034e 19D1     		bne	.L57
 559:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 560:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Update the row address to point to the row in the redundant EEPROM's copy */
 561:Generated_Source\PSoC4/cy_em_eeprom.c ****                 tmpRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 1275              		.loc 1 561 0 is_stmt 1
 1276 0350 BA69     		ldr	r2, [r7, #24]
 1277 0352 3B68     		ldr	r3, [r7]
 1278 0354 9B69     		ldr	r3, [r3, #24]
 1279 0356 D21A     		subs	r2, r2, r3
 1280 0358 3B68     		ldr	r3, [r7]
 1281 035a 1B68     		ldr	r3, [r3]
 1282 035c D318     		adds	r3, r2, r3
 1283 035e A022     		movs	r2, #160
 1284 0360 5200     		lsls	r2, r2, #1
 1285 0362 BA18     		adds	r2, r7, r2
 1286 0364 1360     		str	r3, [r2]
 562:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 563:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Write the data to the specified flash row */
 564:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 1287              		.loc 1 564 0
 1288 0366 5023     		movs	r3, #80
 1289 0368 FF33     		adds	r3, r3, #255
 1290 036a FC18     		adds	r4, r7, r3
 1291 036c 3A68     		ldr	r2, [r7]
 1292 036e 2423     		movs	r3, #36
 1293 0370 F918     		adds	r1, r7, r3
 1294 0372 A023     		movs	r3, #160
 1295 0374 5B00     		lsls	r3, r3, #1
 1296 0376 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 34


 1297 0378 1B68     		ldr	r3, [r3]
 1298 037a 1800     		movs	r0, r3
 1299 037c FFF7FEFF 		bl	WriteRow
 1300 0380 0300     		movs	r3, r0
 1301 0382 2370     		strb	r3, [r4]
 1302              	.L57:
 565:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 566:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 567:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 1303              		.loc 1 567 0
 1304 0384 5023     		movs	r3, #80
 1305 0386 FF33     		adds	r3, r3, #255
 1306 0388 FB18     		adds	r3, r7, r3
 1307 038a 1B78     		ldrb	r3, [r3]
 1308 038c 002B     		cmp	r3, #0
 1309 038e 17D1     		bne	.L63
 568:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 569:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Store last written row address only when EEPROM and redundant
 570:Generated_Source\PSoC4/cy_em_eeprom.c ****                 * copy writes were successful.
 571:Generated_Source\PSoC4/cy_em_eeprom.c ****                 */
 572:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromRowAddr;
 1310              		.loc 1 572 0
 1311 0390 BA69     		ldr	r2, [r7, #24]
 1312 0392 3B68     		ldr	r3, [r7]
 1313 0394 9A60     		str	r2, [r3, #8]
 1314              	.LBE7:
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1315              		.loc 1 435 0
 1316 0396 A223     		movs	r3, #162
 1317 0398 5B00     		lsls	r3, r3, #1
 1318 039a FB18     		adds	r3, r7, r3
 1319 039c 1B68     		ldr	r3, [r3]
 1320 039e 0133     		adds	r3, r3, #1
 1321 03a0 A222     		movs	r2, #162
 1322 03a2 5200     		lsls	r2, r2, #1
 1323 03a4 BA18     		adds	r2, r7, r2
 1324 03a6 1360     		str	r3, [r2]
 1325              	.L43:
 435:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1326              		.loc 1 435 0 is_stmt 0 discriminator 1
 1327 03a8 A223     		movs	r3, #162
 1328 03aa 5B00     		lsls	r3, r3, #1
 1329 03ac FB18     		adds	r3, r7, r3
 1330 03ae 1A68     		ldr	r2, [r3]
 1331 03b0 9A23     		movs	r3, #154
 1332 03b2 5B00     		lsls	r3, r3, #1
 1333 03b4 FB18     		adds	r3, r7, r3
 1334 03b6 1B68     		ldr	r3, [r3]
 1335 03b8 9A42     		cmp	r2, r3
 1336 03ba 00D2     		bcs	.LCB1154
 1337 03bc 5CE6     		b	.L61	@long jump
 1338              	.LCB1154:
 1339 03be 00E0     		b	.L42
 1340              	.L63:
 1341              	.LBB9:
 573:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 574:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 35


 575:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 576:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 1342              		.loc 1 576 0 is_stmt 1
 1343 03c0 C046     		nop
 1344              	.L42:
 1345              	.LBE9:
 1346              	.LBE6:
 577:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 578:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 579:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 580:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1347              		.loc 1 580 0
 1348 03c2 5023     		movs	r3, #80
 1349 03c4 FF33     		adds	r3, r3, #255
 1350 03c6 FB18     		adds	r3, r7, r3
 1351 03c8 1B78     		ldrb	r3, [r3]
 581:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1352              		.loc 1 581 0
 1353 03ca 1800     		movs	r0, r3
 1354 03cc BD46     		mov	sp, r7
 1355 03ce 54B0     		add	sp, sp, #336
 1356              		@ sp needed
 1357 03d0 B0BD     		pop	{r4, r5, r7, pc}
 1358              	.L65:
 1359 03d2 C046     		.align	2
 1360              	.L64:
 1361 03d4 D4FEFFFF 		.word	-300
 1362              		.cfi_endproc
 1363              	.LFE4:
 1364              		.size	Cy_Em_EEPROM_Write, .-Cy_Em_EEPROM_Write
 1365              		.section	.text.Cy_Em_EEPROM_Erase,"ax",%progbits
 1366              		.align	2
 1367              		.global	Cy_Em_EEPROM_Erase
 1368              		.code	16
 1369              		.thumb_func
 1370              		.type	Cy_Em_EEPROM_Erase, %function
 1371              	Cy_Em_EEPROM_Erase:
 1372              	.LFB5:
 582:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 583:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 584:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 585:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_Erase
 586:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 587:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 588:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function erases the entire contents of the EEPROM. Erased values are all
 589:Generated_Source\PSoC4/cy_em_eeprom.c **** * zeros. This is a blocking function and it does not return until the write
 590:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation is completed. The user firmware should not enter Hibernate mode until
 591:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase is completed. The erase operation is allowed in Sleep and Deep-Sleep modes.
 592:Generated_Source\PSoC4/cy_em_eeprom.c **** * During the flash operation, the device should not be reset, including the
 593:Generated_Source\PSoC4/cy_em_eeprom.c **** * XRES pin, a software reset, and watchdog reset sources. Also, low-voltage
 594:Generated_Source\PSoC4/cy_em_eeprom.c **** * detect circuits should be configured to generate an interrupt instead of a
 595:Generated_Source\PSoC4/cy_em_eeprom.c **** * reset. Otherwise, portions of flash may undergo unexpected changes.
 596:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 597:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 598:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 599:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 600:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 36


 601:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function returns \ref cy_en_em_eeprom_status_t.
 602:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 603:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 604:Generated_Source\PSoC4/cy_em_eeprom.c **** * For all non PSoC 6 devices the erase operation is performed by clearing
 605:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM data using flash write. This affects the flash durability.
 606:Generated_Source\PSoC4/cy_em_eeprom.c **** * So it is recommended to use this function in utmost case to prolongate
 607:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash life.
 608:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 609:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
 610:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform erase
 611:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
 612:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
 613:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 614:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 615:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case when blocking write option is used, if this function is called by
 616:Generated_Source\PSoC4/cy_em_eeprom.c **** * the CM4 the user code on CM0P and the user code on CM4 are blocked until erase
 617:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row operation is finished. If this function is called by the CM0P the
 618:Generated_Source\PSoC4/cy_em_eeprom.c **** * user code on CM4 is not blocked and the user code on CM0P is blocked until
 619:Generated_Source\PSoC4/cy_em_eeprom.c **** * erase flash row operation is finished. Plan your task allocation accordingly.
 620:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 621:Generated_Source\PSoC4/cy_em_eeprom.c **** * \sideeffect
 622:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if non-blocking write option is used and when user flash is used as
 623:Generated_Source\PSoC4/cy_em_eeprom.c **** * an EEPROM storage care should be taken to prevent the read while write (RWW)
 624:Generated_Source\PSoC4/cy_em_eeprom.c **** * exception. To prevent the RWW exception the user flash macro that includes
 625:Generated_Source\PSoC4/cy_em_eeprom.c **** * the EEPROM storage should not be read while the EEPROM erase is not completed.
 626:Generated_Source\PSoC4/cy_em_eeprom.c **** * The read also means the user code execution from the respective flash macro.
 627:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 628:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 629:Generated_Source\PSoC4/cy_em_eeprom.c **** cy_en_em_eeprom_status_t Cy_Em_EEPROM_Erase(cy_stc_eeprom_context_t * context)
 630:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1373              		.loc 1 630 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 288
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 90B5     		push	{r4, r7, lr}
 1378              		.cfi_def_cfa_offset 12
 1379              		.cfi_offset 4, -12
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 C9B0     		sub	sp, sp, #292
 1383              		.cfi_def_cfa_offset 304
 1384 0004 00AF     		add	r7, sp, #0
 1385              		.cfi_def_cfa_register 7
 1386 0006 7860     		str	r0, [r7, #4]
 631:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
 632:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum;
 633:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = context->lastWrRowAddr;
 1387              		.loc 1 633 0
 1388 0008 7B68     		ldr	r3, [r7, #4]
 1389 000a 9B68     		ldr	r3, [r3, #8]
 1390 000c 8622     		movs	r2, #134
 1391 000e 5200     		lsls	r2, r2, #1
 1392 0010 BA18     		adds	r2, r7, r2
 1393 0012 1360     		str	r3, [r2]
 634:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowRdAddr;
 635:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 1394              		.loc 1 635 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 37


 1395 0014 1C23     		movs	r3, #28
 1396 0016 FF33     		adds	r3, r3, #255
 1397 0018 FB18     		adds	r3, r7, r3
 1398 001a 0422     		movs	r2, #4
 1399 001c 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV] = {0u};
 1400              		.loc 1 636 0
 1401 001e 494B     		ldr	r3, .L72
 1402 0020 9022     		movs	r2, #144
 1403 0022 5200     		lsls	r2, r2, #1
 1404 0024 9446     		mov	ip, r2
 1405 0026 BC44     		add	ip, ip, r7
 1406 0028 6344     		add	r3, r3, ip
 1407 002a 1800     		movs	r0, r3
 1408 002c 8023     		movs	r3, #128
 1409 002e 5B00     		lsls	r3, r3, #1
 1410 0030 1A00     		movs	r2, r3
 1411 0032 0021     		movs	r1, #0
 1412 0034 FFF7FEFF 		bl	memset
 637:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
 638:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromStoredRowAddr = context->lastWrRowAddr;
 639:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 storedSeqNum;
 640:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (!CY_PSOC6) */
 641:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 642:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Get the sequence number of the last written row */
 643:Generated_Source\PSoC4/cy_em_eeprom.c ****     seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1413              		.loc 1 643 0
 1414 0038 8623     		movs	r3, #134
 1415 003a 5B00     		lsls	r3, r3, #1
 1416 003c FB18     		adds	r3, r7, r3
 1417 003e 1B68     		ldr	r3, [r3]
 1418 0040 1B68     		ldr	r3, [r3]
 1419 0042 8A22     		movs	r2, #138
 1420 0044 5200     		lsls	r2, r2, #1
 1421 0046 BA18     		adds	r2, r7, r2
 1422 0048 1360     		str	r3, [r2]
 644:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 645:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If there were no writes to EEPROM - nothing to erase */
 646:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1423              		.loc 1 646 0
 1424 004a 8A23     		movs	r3, #138
 1425 004c 5B00     		lsls	r3, r3, #1
 1426 004e FB18     		adds	r3, r7, r3
 1427 0050 1B68     		ldr	r3, [r3]
 1428 0052 002B     		cmp	r3, #0
 1429 0054 6ED0     		beq	.L67
 1430              	.LBB10:
 647:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 648:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate the number of row erase operations required */
 649:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 numWrites = context->numberOfRows * context->wearLevelingFactor;
 1431              		.loc 1 649 0
 1432 0056 7B68     		ldr	r3, [r7, #4]
 1433 0058 5A68     		ldr	r2, [r3, #4]
 1434 005a 7B68     		ldr	r3, [r7, #4]
 1435 005c 1B69     		ldr	r3, [r3, #16]
 1436 005e 5343     		muls	r3, r2
 1437 0060 8822     		movs	r2, #136
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 38


 1438 0062 5200     		lsls	r2, r2, #1
 1439 0064 BA18     		adds	r2, r7, r2
 1440 0066 1360     		str	r3, [r2]
 650:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 651:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 652:Generated_Source\PSoC4/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &emEepromStoredRowAddr, &emEepromRowRdAddr, context);
 653:Generated_Source\PSoC4/cy_em_eeprom.c ****         storedSeqNum = seqNum + 1u;
 654:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 655:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 656:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->redundantCopy)
 1441              		.loc 1 656 0
 1442 0068 7B68     		ldr	r3, [r7, #4]
 1443 006a 1B7D     		ldrb	r3, [r3, #20]
 1444 006c 002B     		cmp	r3, #0
 1445 006e 0FD0     		beq	.L68
 657:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 658:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
 659:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1446              		.loc 1 659 0
 1447 0070 0823     		movs	r3, #8
 1448 0072 FB18     		adds	r3, r7, r3
 1449 0074 8033     		adds	r3, r3, #128
 1450 0076 8021     		movs	r1, #128
 1451 0078 1800     		movs	r0, r3
 1452 007a FFF7FEFF 		bl	CalcChecksum
 1453 007e 0300     		movs	r3, r0
 658:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32]
 1454              		.loc 1 658 0
 1455 0080 1A00     		movs	r2, r3
 1456 0082 304B     		ldr	r3, .L72
 1457 0084 9021     		movs	r1, #144
 1458 0086 4900     		lsls	r1, r1, #1
 1459 0088 8C46     		mov	ip, r1
 1460 008a BC44     		add	ip, ip, r7
 1461 008c 6344     		add	r3, r3, ip
 1462 008e DA67     		str	r2, [r3, #124]
 1463              	.L68:
 660:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                   CY_EM_EEPROM_EEPROM_DATA_LEN);
 661:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 662:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         for(i = 0u; i < numWrites; i++)
 1464              		.loc 1 663 0
 1465 0090 0023     		movs	r3, #0
 1466 0092 8E22     		movs	r2, #142
 1467 0094 5200     		lsls	r2, r2, #1
 1468 0096 BA18     		adds	r2, r7, r2
 1469 0098 1360     		str	r3, [r2]
 1470 009a 41E0     		b	.L69
 1471              	.L70:
 664:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 665:Generated_Source\PSoC4/cy_em_eeprom.c ****         #if (CY_PSOC6)
 666:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* For PSoC 6 the erase operation moves backwards. From last written row
 667:Generated_Source\PSoC4/cy_em_eeprom.c ****             * identified by "seqNum" down to "seqNum" - "numWrites". If "emEepromRowAddr"
 668:Generated_Source\PSoC4/cy_em_eeprom.c ****             * is zero this means that the row identified by "seqNum" was previously 
 669:Generated_Source\PSoC4/cy_em_eeprom.c ****             * erased.
 670:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 671:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u != emEepromRowAddr)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 39


 672:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 673:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 674:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 675:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 676:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum--;
 677:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 678:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(0u == seqNum)
 679:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 680:Generated_Source\PSoC4/cy_em_eeprom.c ****                 /* Exit the loop as there is no more row is EEPROM to be erased */
 681:Generated_Source\PSoC4/cy_em_eeprom.c ****                 break;
 682:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 683:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = GetRowAddrBySeqNum(seqNum, context);
 684:Generated_Source\PSoC4/cy_em_eeprom.c ****         #else
 685:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromRowAddr);
 1472              		.loc 1 685 0 discriminator 3
 1473 009c 8623     		movs	r3, #134
 1474 009e 5B00     		lsls	r3, r3, #1
 1475 00a0 FB18     		adds	r3, r7, r3
 1476 00a2 1B68     		ldr	r3, [r3]
 1477 00a4 1B68     		ldr	r3, [r3]
 1478 00a6 8A22     		movs	r2, #138
 1479 00a8 5200     		lsls	r2, r2, #1
 1480 00aa BA18     		adds	r2, r7, r2
 1481 00ac 1360     		str	r3, [r2]
 686:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Get the address of the row to be erased. "emEepromRowAddr" may be updated
 687:Generated_Source\PSoC4/cy_em_eeprom.c ****             * with the proper address (if wear leveling is used).
 688:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 689:Generated_Source\PSoC4/cy_em_eeprom.c ****             GetNextRowToWrite(seqNum, &emEepromRowAddr, &emEepromRowRdAddr, context);
 1482              		.loc 1 689 0 discriminator 3
 1483 00ae 7B68     		ldr	r3, [r7, #4]
 1484 00b0 8422     		movs	r2, #132
 1485 00b2 5200     		lsls	r2, r2, #1
 1486 00b4 BA18     		adds	r2, r7, r2
 1487 00b6 8621     		movs	r1, #134
 1488 00b8 4900     		lsls	r1, r1, #1
 1489 00ba 7918     		adds	r1, r7, r1
 1490 00bc 8A20     		movs	r0, #138
 1491 00be 4000     		lsls	r0, r0, #1
 1492 00c0 3818     		adds	r0, r7, r0
 1493 00c2 0068     		ldr	r0, [r0]
 1494 00c4 FFF7FEFF 		bl	GetNextRowToWrite
 690:Generated_Source\PSoC4/cy_em_eeprom.c ****             seqNum++;
 1495              		.loc 1 690 0 discriminator 3
 1496 00c8 8A23     		movs	r3, #138
 1497 00ca 5B00     		lsls	r3, r3, #1
 1498 00cc FB18     		adds	r3, r7, r3
 1499 00ce 1B68     		ldr	r3, [r3]
 1500 00d0 0133     		adds	r3, r3, #1
 1501 00d2 8A22     		movs	r2, #138
 1502 00d4 5200     		lsls	r2, r2, #1
 1503 00d6 BA18     		adds	r2, r7, r2
 1504 00d8 1360     		str	r3, [r2]
 691:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = seqNum;
 1505              		.loc 1 691 0 discriminator 3
 1506 00da 1A4B     		ldr	r3, .L72
 1507 00dc 9022     		movs	r2, #144
 1508 00de 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 40


 1509 00e0 9446     		mov	ip, r2
 1510 00e2 BC44     		add	ip, ip, r7
 1511 00e4 6344     		add	r3, r3, ip
 1512 00e6 8A22     		movs	r2, #138
 1513 00e8 5200     		lsls	r2, r2, #1
 1514 00ea BA18     		adds	r2, r7, r2
 1515 00ec 1268     		ldr	r2, [r2]
 1516 00ee 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = EraseRow(emEepromRowAddr, (uint32)writeRamBuffer, context);
 1517              		.loc 1 692 0 discriminator 3
 1518 00f0 8623     		movs	r3, #134
 1519 00f2 5B00     		lsls	r3, r3, #1
 1520 00f4 FB18     		adds	r3, r7, r3
 1521 00f6 1B68     		ldr	r3, [r3]
 1522 00f8 0822     		movs	r2, #8
 1523 00fa B918     		adds	r1, r7, r2
 1524 00fc 1C22     		movs	r2, #28
 1525 00fe FF32     		adds	r2, r2, #255
 1526 0100 BC18     		adds	r4, r7, r2
 1527 0102 7A68     		ldr	r2, [r7, #4]
 1528 0104 1800     		movs	r0, r3
 1529 0106 FFF7FEFF 		bl	EraseRow
 1530 010a 0300     		movs	r3, r0
 1531 010c 2370     		strb	r3, [r4]
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1532              		.loc 1 663 0 discriminator 3
 1533 010e 8E23     		movs	r3, #142
 1534 0110 5B00     		lsls	r3, r3, #1
 1535 0112 FB18     		adds	r3, r7, r3
 1536 0114 1B68     		ldr	r3, [r3]
 1537 0116 0133     		adds	r3, r3, #1
 1538 0118 8E22     		movs	r2, #142
 1539 011a 5200     		lsls	r2, r2, #1
 1540 011c BA18     		adds	r2, r7, r2
 1541 011e 1360     		str	r3, [r2]
 1542              	.L69:
 663:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 1543              		.loc 1 663 0 is_stmt 0 discriminator 1
 1544 0120 8E23     		movs	r3, #142
 1545 0122 5B00     		lsls	r3, r3, #1
 1546 0124 FB18     		adds	r3, r7, r3
 1547 0126 1A68     		ldr	r2, [r3]
 1548 0128 8823     		movs	r3, #136
 1549 012a 5B00     		lsls	r3, r3, #1
 1550 012c FB18     		adds	r3, r7, r3
 1551 012e 1B68     		ldr	r3, [r3]
 1552 0130 9A42     		cmp	r2, r3
 1553 0132 B3D3     		bcc	.L70
 1554              	.L67:
 1555              	.LBE10:
 693:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_PSOC6) */
 694:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 695:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 696:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC6)
 697:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 698:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 699:Generated_Source\PSoC4/cy_em_eeprom.c ****             writeRamBuffer[0u] = storedSeqNum;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 41


 700:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 701:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Write the previously stored sequence number to the flash row which would be
 702:Generated_Source\PSoC4/cy_em_eeprom.c ****             * written next if the erase wouldn't happen. In this case the write to
 703:Generated_Source\PSoC4/cy_em_eeprom.c ****             * redundant copy can be skipped as it does not add any value.
 704:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 705:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = WriteRow(emEepromStoredRowAddr, writeRamBuffer, context);
 706:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 707:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_EM_EEPROM_SUCCESS == ret)
 708:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 709:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->lastWrRowAddr = emEepromStoredRowAddr;
 710:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 711:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 712:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC6) */
 713:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 714:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 715:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 1556              		.loc 1 715 0 is_stmt 1
 1557 0134 1C23     		movs	r3, #28
 1558 0136 FF33     		adds	r3, r3, #255
 1559 0138 FB18     		adds	r3, r7, r3
 1560 013a 1B78     		ldrb	r3, [r3]
 716:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1561              		.loc 1 716 0
 1562 013c 1800     		movs	r0, r3
 1563 013e BD46     		mov	sp, r7
 1564 0140 49B0     		add	sp, sp, #292
 1565              		@ sp needed
 1566 0142 90BD     		pop	{r4, r7, pc}
 1567              	.L73:
 1568              		.align	2
 1569              	.L72:
 1570 0144 E8FEFFFF 		.word	-280
 1571              		.cfi_endproc
 1572              	.LFE5:
 1573              		.size	Cy_Em_EEPROM_Erase, .-Cy_Em_EEPROM_Erase
 1574              		.section	.text.Cy_Em_EEPROM_NumWrites,"ax",%progbits
 1575              		.align	2
 1576              		.global	Cy_Em_EEPROM_NumWrites
 1577              		.code	16
 1578              		.thumb_func
 1579              		.type	Cy_Em_EEPROM_NumWrites, %function
 1580              	Cy_Em_EEPROM_NumWrites:
 1581              	.LFB6:
 717:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 718:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 719:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: Cy_Em_EEPROM_NumWrites
 721:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 723:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the number of the EEPROM writes completed so far.
 724:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 725:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 726:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 727:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 728:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 729:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of writes performed to the EEPROM.
 730:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 42


 731:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 732:Generated_Source\PSoC4/cy_em_eeprom.c **** uint32 Cy_Em_EEPROM_NumWrites(cy_stc_eeprom_context_t * context)
 733:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1582              		.loc 1 733 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 8
 1585              		@ frame_needed = 1, uses_anonymous_args = 0
 1586 0000 80B5     		push	{r7, lr}
 1587              		.cfi_def_cfa_offset 8
 1588              		.cfi_offset 7, -8
 1589              		.cfi_offset 14, -4
 1590 0002 82B0     		sub	sp, sp, #8
 1591              		.cfi_def_cfa_offset 16
 1592 0004 00AF     		add	r7, sp, #0
 1593              		.cfi_def_cfa_register 7
 1594 0006 7860     		str	r0, [r7, #4]
 734:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(CY_EM_EEPROM_GET_SEQ_NUM(context->lastWrRowAddr));
 1595              		.loc 1 734 0
 1596 0008 7B68     		ldr	r3, [r7, #4]
 1597 000a 9B68     		ldr	r3, [r3, #8]
 1598 000c 1B68     		ldr	r3, [r3]
 735:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1599              		.loc 1 735 0
 1600 000e 1800     		movs	r0, r3
 1601 0010 BD46     		mov	sp, r7
 1602 0012 02B0     		add	sp, sp, #8
 1603              		@ sp needed
 1604 0014 80BD     		pop	{r7, pc}
 1605              		.cfi_endproc
 1606              	.LFE6:
 1607              		.size	Cy_Em_EEPROM_NumWrites, .-Cy_Em_EEPROM_NumWrites
 1608 0016 C046     		.section	.text.FindLastWrittenRow,"ax",%progbits
 1609              		.align	2
 1610              		.code	16
 1611              		.thumb_func
 1612              		.type	FindLastWrittenRow, %function
 1613              	FindLastWrittenRow:
 1614              	.LFB7:
 736:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 737:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \} */
 738:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 739:Generated_Source\PSoC4/cy_em_eeprom.c **** /** \cond INTERNAL */
 740:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 741:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 742:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 743:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: FindLastWrittenRow
 744:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 745:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 746:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a search of the last written row address of the EEPROM associated
 747:Generated_Source\PSoC4/cy_em_eeprom.c **** * with the context structure. If there were no writes to the EEPROM the
 748:Generated_Source\PSoC4/cy_em_eeprom.c **** * function returns the start address of the EEPROM. The row address is returned
 749:Generated_Source\PSoC4/cy_em_eeprom.c **** * in the input parameter.
 750:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 751:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param lastWrRowPtr
 752:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a memory where the last written row will be returned.
 753:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 754:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 43


 755:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 756:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 757:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 758:Generated_Source\PSoC4/cy_em_eeprom.c **** static void FindLastWrittenRow(uint32 * lastWrRowPtr, cy_stc_eeprom_context_t * context)
 759:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1615              		.loc 1 759 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 24
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619 0000 80B5     		push	{r7, lr}
 1620              		.cfi_def_cfa_offset 8
 1621              		.cfi_offset 7, -8
 1622              		.cfi_offset 14, -4
 1623 0002 86B0     		sub	sp, sp, #24
 1624              		.cfi_def_cfa_offset 32
 1625 0004 00AF     		add	r7, sp, #0
 1626              		.cfi_def_cfa_register 7
 1627 0006 7860     		str	r0, [r7, #4]
 1628 0008 3960     		str	r1, [r7]
 760:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum = 0u;
 1629              		.loc 1 760 0
 1630 000a 0023     		movs	r3, #0
 1631 000c BB60     		str	r3, [r7, #8]
 761:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 prevSeqNum = 0u;
 1632              		.loc 1 761 0
 1633 000e 0023     		movs	r3, #0
 1634 0010 7B61     		str	r3, [r7, #20]
 762:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 numRows;
 763:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1635              		.loc 1 763 0
 1636 0012 3B68     		ldr	r3, [r7]
 1637 0014 9B69     		ldr	r3, [r3, #24]
 1638 0016 FB60     		str	r3, [r7, #12]
 764:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 765:Generated_Source\PSoC4/cy_em_eeprom.c ****     *lastWrRowPtr = emEepromAddr;
 1639              		.loc 1 765 0
 1640 0018 7B68     		ldr	r3, [r7, #4]
 1641 001a FA68     		ldr	r2, [r7, #12]
 1642 001c 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     for(numRows = 0u; numRows < (context->numberOfRows * context->wearLevelingFactor); numRows++)
 1643              		.loc 1 767 0
 1644 001e 0023     		movs	r3, #0
 1645 0020 3B61     		str	r3, [r7, #16]
 1646 0022 15E0     		b	.L77
 1647              	.L79:
 768:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 769:Generated_Source\PSoC4/cy_em_eeprom.c ****         seqNum = CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr);
 1648              		.loc 1 769 0
 1649 0024 FB68     		ldr	r3, [r7, #12]
 1650 0026 1B68     		ldr	r3, [r3]
 1651 0028 BB60     		str	r3, [r7, #8]
 770:Generated_Source\PSoC4/cy_em_eeprom.c ****         if((0u != seqNum) && (seqNum > prevSeqNum))
 1652              		.loc 1 770 0
 1653 002a BB68     		ldr	r3, [r7, #8]
 1654 002c 002B     		cmp	r3, #0
 1655 002e 08D0     		beq	.L78
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 44


 1656              		.loc 1 770 0 is_stmt 0 discriminator 1
 1657 0030 BA68     		ldr	r2, [r7, #8]
 1658 0032 7B69     		ldr	r3, [r7, #20]
 1659 0034 9A42     		cmp	r2, r3
 1660 0036 04D9     		bls	.L78
 771:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 772:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Some record in EEPROM was found. Store found sequence
 773:Generated_Source\PSoC4/cy_em_eeprom.c ****             * number and row address.
 774:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 775:Generated_Source\PSoC4/cy_em_eeprom.c ****             prevSeqNum = seqNum;
 1661              		.loc 1 775 0 is_stmt 1
 1662 0038 BB68     		ldr	r3, [r7, #8]
 1663 003a 7B61     		str	r3, [r7, #20]
 776:Generated_Source\PSoC4/cy_em_eeprom.c ****             *lastWrRowPtr = emEepromAddr;
 1664              		.loc 1 776 0
 1665 003c 7B68     		ldr	r3, [r7, #4]
 1666 003e FA68     		ldr	r2, [r7, #12]
 1667 0040 1A60     		str	r2, [r3]
 1668              	.L78:
 777:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 778:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 779:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 780:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1669              		.loc 1 780 0 discriminator 2
 1670 0042 FB68     		ldr	r3, [r7, #12]
 1671 0044 0133     		adds	r3, r3, #1
 1672 0046 FF33     		adds	r3, r3, #255
 1673 0048 FB60     		str	r3, [r7, #12]
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1674              		.loc 1 767 0 discriminator 2
 1675 004a 3B69     		ldr	r3, [r7, #16]
 1676 004c 0133     		adds	r3, r3, #1
 1677 004e 3B61     		str	r3, [r7, #16]
 1678              	.L77:
 767:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1679              		.loc 1 767 0 is_stmt 0 discriminator 1
 1680 0050 3B68     		ldr	r3, [r7]
 1681 0052 5A68     		ldr	r2, [r3, #4]
 1682 0054 3B68     		ldr	r3, [r7]
 1683 0056 1B69     		ldr	r3, [r3, #16]
 1684 0058 5A43     		muls	r2, r3
 1685 005a 3B69     		ldr	r3, [r7, #16]
 1686 005c 9A42     		cmp	r2, r3
 1687 005e E1D8     		bhi	.L79
 781:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 782:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1688              		.loc 1 782 0 is_stmt 1
 1689 0060 C046     		nop
 1690 0062 BD46     		mov	sp, r7
 1691 0064 06B0     		add	sp, sp, #24
 1692              		@ sp needed
 1693 0066 80BD     		pop	{r7, pc}
 1694              		.cfi_endproc
 1695              	.LFE7:
 1696              		.size	FindLastWrittenRow, .-FindLastWrittenRow
 1697              		.section	.text.GetRowAddrBySeqNum,"ax",%progbits
 1698              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 45


 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	GetRowAddrBySeqNum, %function
 1702              	GetRowAddrBySeqNum:
 1703              	.LFB8:
 783:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 784:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 785:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 786:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetRowAddrBySeqNum
 787:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 788:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 789:Generated_Source\PSoC4/cy_em_eeprom.c **** * Returns the address of the row in EEPROM using its sequence number.
 790:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 791:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 792:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the row.
 793:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 794:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 795:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
 796:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 797:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 798:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row or zero if the row with the sequence number was not
 799:Generated_Source\PSoC4/cy_em_eeprom.c **** * found.
 800:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 801:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetRowAddrBySeqNum(uint32 seqNum, cy_stc_eeprom_context_t * context)
 803:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1704              		.loc 1 803 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 80B5     		push	{r7, lr}
 1709              		.cfi_def_cfa_offset 8
 1710              		.cfi_offset 7, -8
 1711              		.cfi_offset 14, -4
 1712 0002 84B0     		sub	sp, sp, #16
 1713              		.cfi_def_cfa_offset 24
 1714 0004 00AF     		add	r7, sp, #0
 1715              		.cfi_def_cfa_register 7
 1716 0006 7860     		str	r0, [r7, #4]
 1717 0008 3960     		str	r1, [r7]
 804:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromAddr = context->userFlashStartAddr;
 1718              		.loc 1 804 0
 1719 000a 3B68     		ldr	r3, [r7]
 1720 000c 9B69     		ldr	r3, [r3, #24]
 1721 000e FB60     		str	r3, [r7, #12]
 805:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 806:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(CY_EM_EEPROM_GET_SEQ_NUM(emEepromAddr) != seqNum)
 1722              		.loc 1 806 0
 1723 0010 0BE0     		b	.L81
 1724              	.L83:
 807:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 808:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Switch to the next row */
 809:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromAddr = emEepromAddr + CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 1725              		.loc 1 809 0
 1726 0012 FB68     		ldr	r3, [r7, #12]
 1727 0014 0133     		adds	r3, r3, #1
 1728 0016 FF33     		adds	r3, r3, #255
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 46


 1729 0018 FB60     		str	r3, [r7, #12]
 810:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 811:Generated_Source\PSoC4/cy_em_eeprom.c ****         if (CY_EM_EEPROM_ADDR_IN_RANGE !=
 812:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1730              		.loc 1 812 0
 1731 001a 3B68     		ldr	r3, [r7]
 1732 001c 1A68     		ldr	r2, [r3]
 811:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(emEepromAddr, context->wlEndAddr))
 1733              		.loc 1 811 0
 1734 001e FB68     		ldr	r3, [r7, #12]
 1735 0020 9A42     		cmp	r2, r3
 1736 0022 02D8     		bhi	.L81
 813:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 814:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromAddr = 0u;
 1737              		.loc 1 814 0
 1738 0024 0023     		movs	r3, #0
 1739 0026 FB60     		str	r3, [r7, #12]
 815:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Exit the loop as we reached the end of EEPROM */
 816:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
 1740              		.loc 1 816 0
 1741 0028 04E0     		b	.L82
 1742              	.L81:
 806:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 1743              		.loc 1 806 0
 1744 002a FB68     		ldr	r3, [r7, #12]
 1745 002c 1A68     		ldr	r2, [r3]
 1746 002e 7B68     		ldr	r3, [r7, #4]
 1747 0030 9A42     		cmp	r2, r3
 1748 0032 EED1     		bne	.L83
 1749              	.L82:
 817:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 818:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 819:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 820:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (emEepromAddr);
 1750              		.loc 1 820 0
 1751 0034 FB68     		ldr	r3, [r7, #12]
 821:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1752              		.loc 1 821 0
 1753 0036 1800     		movs	r0, r3
 1754 0038 BD46     		mov	sp, r7
 1755 003a 04B0     		add	sp, sp, #16
 1756              		@ sp needed
 1757 003c 80BD     		pop	{r7, pc}
 1758              		.cfi_endproc
 1759              	.LFE8:
 1760              		.size	GetRowAddrBySeqNum, .-GetRowAddrBySeqNum
 1761 003e C046     		.section	.text.GetNextRowToWrite,"ax",%progbits
 1762              		.align	2
 1763              		.code	16
 1764              		.thumb_func
 1765              		.type	GetNextRowToWrite, %function
 1766              	GetNextRowToWrite:
 1767              	.LFB9:
 822:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 823:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 824:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 825:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetNextRowToWrite
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 47


 826:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 827:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 828:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs a range check of the row that should be written and updates the
 829:Generated_Source\PSoC4/cy_em_eeprom.c **** * address to the row respectively. The similar actions are done for the read
 830:Generated_Source\PSoC4/cy_em_eeprom.c **** * address.
 831:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 832:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param seqNum
 833:Generated_Source\PSoC4/cy_em_eeprom.c **** * The sequence number of the last written row.
 834:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 835:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToWrPtr
 836:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the last written row (input). The address of the row to be 
 837:Generated_Source\PSoC4/cy_em_eeprom.c **** * written (output).
 838:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 839:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowToRdPtr
 840:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the row from which the data should be read into the RAM buffer
 841:Generated_Source\PSoC4/cy_em_eeprom.c **** * in a later write operation. Out parameter.
 842:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 843:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 844:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 845:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 846:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 847:Generated_Source\PSoC4/cy_em_eeprom.c **** static void GetNextRowToWrite(uint32 seqNum,
 848:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToWrPtr,
 849:Generated_Source\PSoC4/cy_em_eeprom.c ****                             uint32 * rowToRdPtr,
 850:Generated_Source\PSoC4/cy_em_eeprom.c ****                             cy_stc_eeprom_context_t * context)
 851:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1768              		.loc 1 851 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 16
 1771              		@ frame_needed = 1, uses_anonymous_args = 0
 1772 0000 80B5     		push	{r7, lr}
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 7, -8
 1775              		.cfi_offset 14, -4
 1776 0002 84B0     		sub	sp, sp, #16
 1777              		.cfi_def_cfa_offset 24
 1778 0004 00AF     		add	r7, sp, #0
 1779              		.cfi_def_cfa_register 7
 1780 0006 F860     		str	r0, [r7, #12]
 1781 0008 B960     		str	r1, [r7, #8]
 1782 000a 7A60     		str	r2, [r7, #4]
 1783 000c 3B60     		str	r3, [r7]
 852:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Switch to the next row to be written if the current sequence number is
 853:Generated_Source\PSoC4/cy_em_eeprom.c ****     * not zero.
 854:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 855:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != seqNum)
 1784              		.loc 1 855 0
 1785 000e FB68     		ldr	r3, [r7, #12]
 1786 0010 002B     		cmp	r3, #0
 1787 0012 05D0     		beq	.L86
 856:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 857:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = (*rowToWrPtr + CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 1788              		.loc 1 857 0
 1789 0014 BB68     		ldr	r3, [r7, #8]
 1790 0016 1B68     		ldr	r3, [r3]
 1791 0018 5A1C     		adds	r2, r3, #1
 1792 001a FF32     		adds	r2, r2, #255
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 48


 1793 001c BB68     		ldr	r3, [r7, #8]
 1794 001e 1A60     		str	r2, [r3]
 1795              	.L86:
 858:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 859:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 860:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* If the resulting row address is out of EEPROM, then switch to the base
 861:Generated_Source\PSoC4/cy_em_eeprom.c ****     * EEPROM address (Row#0).
 862:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 863:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_ADDR_IN_RANGE !=
 864:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1796              		.loc 1 864 0
 1797 0020 BB68     		ldr	r3, [r7, #8]
 1798 0022 1A68     		ldr	r2, [r3]
 1799 0024 3B68     		ldr	r3, [r7]
 1800 0026 1B68     		ldr	r3, [r3]
 863:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_IS_ADDR_EXCEED_RANGE(*rowToWrPtr, context->wlEndAddr))
 1801              		.loc 1 863 0
 1802 0028 9A42     		cmp	r2, r3
 1803 002a 03D3     		bcc	.L87
 865:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 866:Generated_Source\PSoC4/cy_em_eeprom.c ****         *rowToWrPtr = context->userFlashStartAddr;
 1804              		.loc 1 866 0
 1805 002c 3B68     		ldr	r3, [r7]
 1806 002e 9A69     		ldr	r2, [r3, #24]
 1807 0030 BB68     		ldr	r3, [r7, #8]
 1808 0032 1A60     		str	r2, [r3]
 1809              	.L87:
 867:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 868:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 869:Generated_Source\PSoC4/cy_em_eeprom.c ****     *rowToRdPtr = 0u;
 1810              		.loc 1 869 0
 1811 0034 7B68     		ldr	r3, [r7, #4]
 1812 0036 0022     		movs	r2, #0
 1813 0038 1A60     		str	r2, [r3]
 870:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 871:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check if the sequence number is larger than the number of rows in the EEPROM.
 872:Generated_Source\PSoC4/cy_em_eeprom.c ****     * If not, do not update the row read address because there is no historic
 873:Generated_Source\PSoC4/cy_em_eeprom.c ****     * data to be read.
 874:Generated_Source\PSoC4/cy_em_eeprom.c ****     */
 875:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(context->numberOfRows <= seqNum)
 1814              		.loc 1 875 0
 1815 003a 3B68     		ldr	r3, [r7]
 1816 003c 5A68     		ldr	r2, [r3, #4]
 1817 003e FB68     		ldr	r3, [r7, #12]
 1818 0040 9A42     		cmp	r2, r3
 1819 0042 2FD8     		bhi	.L92
 876:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 877:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Check if wear leveling is used in EEPROM */
 878:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(context->wearLevelingFactor > 1u)
 1820              		.loc 1 878 0
 1821 0044 3B68     		ldr	r3, [r7]
 1822 0046 1B69     		ldr	r3, [r3, #16]
 1823 0048 012B     		cmp	r3, #1
 1824 004a 27D9     		bls	.L89
 879:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 880:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* The read row address should be taken from an EEPROM copy that became
 881:Generated_Source\PSoC4/cy_em_eeprom.c ****             * inactive recently. This condition check handles that.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 49


 882:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 883:Generated_Source\PSoC4/cy_em_eeprom.c ****             if((*rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)) <
 1825              		.loc 1 883 0
 1826 004c BB68     		ldr	r3, [r7, #8]
 1827 004e 1A68     		ldr	r2, [r3]
 1828 0050 3B68     		ldr	r3, [r7]
 1829 0052 5B68     		ldr	r3, [r3, #4]
 1830 0054 1B02     		lsls	r3, r3, #8
 1831 0056 D21A     		subs	r2, r2, r3
 884:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1832              		.loc 1 884 0
 1833 0058 3B68     		ldr	r3, [r7]
 1834 005a 9B69     		ldr	r3, [r3, #24]
 883:Generated_Source\PSoC4/cy_em_eeprom.c ****                 context->userFlashStartAddr)
 1835              		.loc 1 883 0
 1836 005c 9A42     		cmp	r2, r3
 1837 005e 14D2     		bcs	.L90
 885:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = context->userFlashStartAddr +
 1838              		.loc 1 886 0
 1839 0060 3B68     		ldr	r3, [r7]
 1840 0062 9A69     		ldr	r2, [r3, #24]
 887:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1841              		.loc 1 887 0
 1842 0064 3B68     		ldr	r3, [r7]
 1843 0066 5968     		ldr	r1, [r3, #4]
 1844 0068 3B68     		ldr	r3, [r7]
 1845 006a 1B69     		ldr	r3, [r3, #16]
 1846 006c 0F48     		ldr	r0, .L93
 1847 006e 8446     		mov	ip, r0
 1848 0070 6344     		add	r3, r3, ip
 1849 0072 4B43     		muls	r3, r1
 1850 0074 1B02     		lsls	r3, r3, #8
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1851              		.loc 1 886 0
 1852 0076 D218     		adds	r2, r2, r3
 888:Generated_Source\PSoC4/cy_em_eeprom.c ****                         CY_EM_EEPROM_FLASH_SIZEOF_ROW) + (*rowToWrPtr - context->userFlashStartAddr
 1853              		.loc 1 888 0
 1854 0078 BB68     		ldr	r3, [r7, #8]
 1855 007a 1968     		ldr	r1, [r3]
 1856 007c 3B68     		ldr	r3, [r7]
 1857 007e 9B69     		ldr	r3, [r3, #24]
 1858 0080 CB1A     		subs	r3, r1, r3
 1859 0082 D218     		adds	r2, r2, r3
 886:Generated_Source\PSoC4/cy_em_eeprom.c ****                     (context->numberOfRows * (context->wearLevelingFactor - 1u) *
 1860              		.loc 1 886 0
 1861 0084 7B68     		ldr	r3, [r7, #4]
 1862 0086 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 890:Generated_Source\PSoC4/cy_em_eeprom.c ****             else
 891:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****                 *rowToRdPtr = *rowToWrPtr - (context->numberOfRows * CY_EM_EEPROM_FLASH_SIZEOF_ROW)
 893:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 894:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 895:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
 896:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 897:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* If no wear leveling, always read from the same flash row that
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 50


 898:Generated_Source\PSoC4/cy_em_eeprom.c ****             * should be written.
 899:Generated_Source\PSoC4/cy_em_eeprom.c ****             */
 900:Generated_Source\PSoC4/cy_em_eeprom.c ****             *rowToRdPtr = *rowToWrPtr;
 901:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 902:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 903:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 1863              		.loc 1 903 0
 1864 0088 0CE0     		b	.L92
 1865              	.L90:
 892:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
 1866              		.loc 1 892 0
 1867 008a BB68     		ldr	r3, [r7, #8]
 1868 008c 1A68     		ldr	r2, [r3]
 1869 008e 3B68     		ldr	r3, [r7]
 1870 0090 5B68     		ldr	r3, [r3, #4]
 1871 0092 1B02     		lsls	r3, r3, #8
 1872 0094 D21A     		subs	r2, r2, r3
 1873 0096 7B68     		ldr	r3, [r7, #4]
 1874 0098 1A60     		str	r2, [r3]
 1875              		.loc 1 903 0
 1876 009a 03E0     		b	.L92
 1877              	.L89:
 900:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 1878              		.loc 1 900 0
 1879 009c BB68     		ldr	r3, [r7, #8]
 1880 009e 1A68     		ldr	r2, [r3]
 1881 00a0 7B68     		ldr	r3, [r7, #4]
 1882 00a2 1A60     		str	r2, [r3]
 1883              	.L92:
 1884              		.loc 1 903 0
 1885 00a4 C046     		nop
 1886 00a6 BD46     		mov	sp, r7
 1887 00a8 04B0     		add	sp, sp, #16
 1888              		@ sp needed
 1889 00aa 80BD     		pop	{r7, pc}
 1890              	.L94:
 1891              		.align	2
 1892              	.L93:
 1893 00ac FFFFFF00 		.word	16777215
 1894              		.cfi_endproc
 1895              	.LFE9:
 1896              		.size	GetNextRowToWrite, .-GetNextRowToWrite
 1897              		.section	.text.CalcChecksum,"ax",%progbits
 1898              		.align	2
 1899              		.code	16
 1900              		.thumb_func
 1901              		.type	CalcChecksum, %function
 1902              	CalcChecksum:
 1903              	.LFB10:
 904:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 905:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 906:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 907:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CalcChecksum
 908:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 909:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 910:Generated_Source\PSoC4/cy_em_eeprom.c **** * Implements CRC-8 that is used in checksum calculation for the redundant copy
 911:Generated_Source\PSoC4/cy_em_eeprom.c **** * algorithm.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 51


 912:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 913:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 914:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row data to be used to calculate the checksum.
 915:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 916:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
 917:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of rowData.
 918:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 919:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 920:Generated_Source\PSoC4/cy_em_eeprom.c **** * The calculated value of CRC-8.
 921:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 922:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 923:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint8 CalcChecksum(uint8 rowData[], uint32 len)
 924:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 1904              		.loc 1 924 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 16
 1907              		@ frame_needed = 1, uses_anonymous_args = 0
 1908 0000 80B5     		push	{r7, lr}
 1909              		.cfi_def_cfa_offset 8
 1910              		.cfi_offset 7, -8
 1911              		.cfi_offset 14, -4
 1912 0002 84B0     		sub	sp, sp, #16
 1913              		.cfi_def_cfa_offset 24
 1914 0004 00AF     		add	r7, sp, #0
 1915              		.cfi_def_cfa_register 7
 1916 0006 7860     		str	r0, [r7, #4]
 1917 0008 3960     		str	r1, [r7]
 925:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 crc = CY_EM_EEPROM_CRC8_SEED;
 1918              		.loc 1 925 0
 1919 000a 0F23     		movs	r3, #15
 1920 000c FB18     		adds	r3, r7, r3
 1921 000e FF22     		movs	r2, #255
 1922 0010 1A70     		strb	r2, [r3]
 926:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint8 i;
 927:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint16 cnt = 0u;
 1923              		.loc 1 927 0
 1924 0012 0C23     		movs	r3, #12
 1925 0014 FB18     		adds	r3, r7, r3
 1926 0016 0022     		movs	r2, #0
 1927 0018 1A80     		strh	r2, [r3]
 928:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 929:Generated_Source\PSoC4/cy_em_eeprom.c ****     while(cnt != len)
 1928              		.loc 1 929 0
 1929 001a 3BE0     		b	.L96
 1930              	.L101:
 930:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 931:Generated_Source\PSoC4/cy_em_eeprom.c ****         crc ^= rowData[cnt];
 1931              		.loc 1 931 0
 1932 001c 0C23     		movs	r3, #12
 1933 001e FB18     		adds	r3, r7, r3
 1934 0020 1B88     		ldrh	r3, [r3]
 1935 0022 7A68     		ldr	r2, [r7, #4]
 1936 0024 D318     		adds	r3, r2, r3
 1937 0026 1978     		ldrb	r1, [r3]
 1938 0028 0F23     		movs	r3, #15
 1939 002a FB18     		adds	r3, r7, r3
 1940 002c 0F22     		movs	r2, #15
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 52


 1941 002e BA18     		adds	r2, r7, r2
 1942 0030 1278     		ldrb	r2, [r2]
 1943 0032 4A40     		eors	r2, r1
 1944 0034 1A70     		strb	r2, [r3]
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1945              		.loc 1 932 0
 1946 0036 0E23     		movs	r3, #14
 1947 0038 FB18     		adds	r3, r7, r3
 1948 003a 0022     		movs	r2, #0
 1949 003c 1A70     		strb	r2, [r3]
 1950 003e 1DE0     		b	.L97
 1951              	.L100:
 933:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
 934:Generated_Source\PSoC4/cy_em_eeprom.c ****             crc = CY_EM_EEPROM_CALCULATE_CRC8(crc);
 1952              		.loc 1 934 0
 1953 0040 0F23     		movs	r3, #15
 1954 0042 FB18     		adds	r3, r7, r3
 1955 0044 1B78     		ldrb	r3, [r3]
 1956 0046 5BB2     		sxtb	r3, r3
 1957 0048 002B     		cmp	r3, #0
 1958 004a 08DA     		bge	.L98
 1959              		.loc 1 934 0 is_stmt 0 discriminator 1
 1960 004c 0F23     		movs	r3, #15
 1961 004e FB18     		adds	r3, r7, r3
 1962 0050 1B78     		ldrb	r3, [r3]
 1963 0052 DB18     		adds	r3, r3, r3
 1964 0054 DBB2     		uxtb	r3, r3
 1965 0056 3122     		movs	r2, #49
 1966 0058 5340     		eors	r3, r2
 1967 005a DBB2     		uxtb	r3, r3
 1968 005c 04E0     		b	.L99
 1969              	.L98:
 1970              		.loc 1 934 0 discriminator 2
 1971 005e 0F23     		movs	r3, #15
 1972 0060 FB18     		adds	r3, r7, r3
 1973 0062 1B78     		ldrb	r3, [r3]
 1974 0064 DB18     		adds	r3, r3, r3
 1975 0066 DBB2     		uxtb	r3, r3
 1976              	.L99:
 1977              		.loc 1 934 0 discriminator 4
 1978 0068 0F22     		movs	r2, #15
 1979 006a BA18     		adds	r2, r7, r2
 1980 006c 1370     		strb	r3, [r2]
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1981              		.loc 1 932 0 is_stmt 1 discriminator 4
 1982 006e 0E23     		movs	r3, #14
 1983 0070 FB18     		adds	r3, r7, r3
 1984 0072 1A78     		ldrb	r2, [r3]
 1985 0074 0E23     		movs	r3, #14
 1986 0076 FB18     		adds	r3, r7, r3
 1987 0078 0132     		adds	r2, r2, #1
 1988 007a 1A70     		strb	r2, [r3]
 1989              	.L97:
 932:Generated_Source\PSoC4/cy_em_eeprom.c ****         for (i = 0u; i < CY_EM_EEPROM_CRC8_POLYNOM_LEN; i++)
 1990              		.loc 1 932 0 is_stmt 0 discriminator 2
 1991 007c 0E23     		movs	r3, #14
 1992 007e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 53


 1993 0080 1B78     		ldrb	r3, [r3]
 1994 0082 072B     		cmp	r3, #7
 1995 0084 DCD9     		bls	.L100
 935:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
 936:Generated_Source\PSoC4/cy_em_eeprom.c ****         cnt++;
 1996              		.loc 1 936 0 is_stmt 1
 1997 0086 0C23     		movs	r3, #12
 1998 0088 FB18     		adds	r3, r7, r3
 1999 008a 1A88     		ldrh	r2, [r3]
 2000 008c 0C23     		movs	r3, #12
 2001 008e FB18     		adds	r3, r7, r3
 2002 0090 0132     		adds	r2, r2, #1
 2003 0092 1A80     		strh	r2, [r3]
 2004              	.L96:
 929:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 2005              		.loc 1 929 0
 2006 0094 0C23     		movs	r3, #12
 2007 0096 FB18     		adds	r3, r7, r3
 2008 0098 1A88     		ldrh	r2, [r3]
 2009 009a 3B68     		ldr	r3, [r7]
 2010 009c 9A42     		cmp	r2, r3
 2011 009e BDD1     		bne	.L101
 937:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 938:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 939:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (crc);
 2012              		.loc 1 939 0
 2013 00a0 0F23     		movs	r3, #15
 2014 00a2 FB18     		adds	r3, r7, r3
 2015 00a4 1B78     		ldrb	r3, [r3]
 940:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2016              		.loc 1 940 0
 2017 00a6 1800     		movs	r0, r3
 2018 00a8 BD46     		mov	sp, r7
 2019 00aa 04B0     		add	sp, sp, #16
 2020              		@ sp needed
 2021 00ac 80BD     		pop	{r7, pc}
 2022              		.cfi_endproc
 2023              	.LFE10:
 2024              		.size	CalcChecksum, .-CalcChecksum
 2025              		.section	.text.CheckRanges,"ax",%progbits
 2026              		.align	2
 2027              		.code	16
 2028              		.thumb_func
 2029              		.type	CheckRanges, %function
 2030              	CheckRanges:
 2031              	.LFB11:
 941:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 942:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 943:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 944:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckRanges
 945:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 946:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 947:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks if the EEPROM of the requested size can be placed in flash.
 948:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 949:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param config
 950:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to a configuration structure. See \ref cy_stc_eeprom_config_t.
 951:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 54


 952:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 953:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 954:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 955:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 956:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckRanges(cy_stc_eeprom_config_t* config)
 957:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2032              		.loc 1 957 0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 24
 2035              		@ frame_needed = 1, uses_anonymous_args = 0
 2036 0000 80B5     		push	{r7, lr}
 2037              		.cfi_def_cfa_offset 8
 2038              		.cfi_offset 7, -8
 2039              		.cfi_offset 14, -4
 2040 0002 86B0     		sub	sp, sp, #24
 2041              		.cfi_def_cfa_offset 32
 2042 0004 00AF     		add	r7, sp, #0
 2043              		.cfi_def_cfa_register 7
 2044 0006 7860     		str	r0, [r7, #4]
 958:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_DATA;
 2045              		.loc 1 958 0
 2046 0008 1723     		movs	r3, #23
 2047 000a FB18     		adds	r3, r7, r3
 2048 000c 0322     		movs	r2, #3
 2049 000e 1A70     		strb	r2, [r3]
 959:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 startAddr = config->userFlashStartAddr;
 2050              		.loc 1 959 0
 2051 0010 7B68     		ldr	r3, [r7, #4]
 2052 0012 DB68     		ldr	r3, [r3, #12]
 2053 0014 3B61     		str	r3, [r7, #16]
 960:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 endAddr = startAddr + CY_EM_EEPROM_GET_PHYSICAL_SIZE(config->eepromSize,
 2054              		.loc 1 960 0
 2055 0016 7B68     		ldr	r3, [r7, #4]
 2056 0018 1B68     		ldr	r3, [r3]
 2057 001a DA09     		lsrs	r2, r3, #7
 2058 001c 7B68     		ldr	r3, [r7, #4]
 2059 001e 1B68     		ldr	r3, [r3]
 2060 0020 7F21     		movs	r1, #127
 2061 0022 0B40     		ands	r3, r1
 2062 0024 01D0     		beq	.L104
 2063              		.loc 1 960 0 is_stmt 0 discriminator 1
 2064 0026 0123     		movs	r3, #1
 2065 0028 00E0     		b	.L105
 2066              	.L104:
 2067              		.loc 1 960 0 discriminator 2
 2068 002a 0023     		movs	r3, #0
 2069              	.L105:
 2070              		.loc 1 960 0 discriminator 4
 2071 002c D218     		adds	r2, r2, r3
 2072 002e 7B68     		ldr	r3, [r7, #4]
 2073 0030 5B68     		ldr	r3, [r3, #4]
 2074 0032 5343     		muls	r3, r2
 2075 0034 7A68     		ldr	r2, [r7, #4]
 2076 0036 127A     		ldrb	r2, [r2, #8]
 2077 0038 0132     		adds	r2, r2, #1
 2078 003a 5343     		muls	r3, r2
 2079 003c 1A02     		lsls	r2, r3, #8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 55


 2080 003e 3B69     		ldr	r3, [r7, #16]
 2081 0040 D318     		adds	r3, r2, r3
 2082 0042 FB60     		str	r3, [r7, #12]
 961:Generated_Source\PSoC4/cy_em_eeprom.c ****             config->wearLevelingFactor, config->redundantCopy);
 962:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 963:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Range check if there is enough flash for EEPROM */
 964:Generated_Source\PSoC4/cy_em_eeprom.c ****     if (CY_EM_EEPROM_IS_IN_FLASH_RANGE(startAddr, endAddr))
 2083              		.loc 1 964 0 is_stmt 1 discriminator 4
 2084 0044 3B69     		ldr	r3, [r7, #16]
 2085 0046 002B     		cmp	r3, #0
 2086 0048 08D0     		beq	.L106
 2087              		.loc 1 964 0 is_stmt 0 discriminator 1
 2088 004a FA68     		ldr	r2, [r7, #12]
 2089 004c 8023     		movs	r3, #128
 2090 004e DB02     		lsls	r3, r3, #11
 2091 0050 9A42     		cmp	r2, r3
 2092 0052 03D8     		bhi	.L106
 965:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 966:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2093              		.loc 1 966 0 is_stmt 1
 2094 0054 1723     		movs	r3, #23
 2095 0056 FB18     		adds	r3, r7, r3
 2096 0058 0022     		movs	r2, #0
 2097 005a 1A70     		strb	r2, [r3]
 2098              	.L106:
 967:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
 968:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 2099              		.loc 1 968 0
 2100 005c 1723     		movs	r3, #23
 2101 005e FB18     		adds	r3, r7, r3
 2102 0060 1B78     		ldrb	r3, [r3]
 969:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2103              		.loc 1 969 0
 2104 0062 1800     		movs	r0, r3
 2105 0064 BD46     		mov	sp, r7
 2106 0066 06B0     		add	sp, sp, #24
 2107              		@ sp needed
 2108 0068 80BD     		pop	{r7, pc}
 2109              		.cfi_endproc
 2110              	.LFE11:
 2111              		.size	CheckRanges, .-CheckRanges
 2112 006a C046     		.section	.text.WriteRow,"ax",%progbits
 2113              		.align	2
 2114              		.code	16
 2115              		.thumb_func
 2116              		.type	WriteRow, %function
 2117              	WriteRow:
 2118              	.LFB12:
 970:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 971:Generated_Source\PSoC4/cy_em_eeprom.c **** 
 972:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
 973:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: WriteRow
 974:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
 975:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 976:Generated_Source\PSoC4/cy_em_eeprom.c **** * Writes one flash row starting from the specified row address.
 977:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 978:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 56


 979:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
 980:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 981:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowData
 982:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the data to be written to the row.
 983:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 984:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
 985:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
 986:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 987:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
 988:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
 989:Generated_Source\PSoC4/cy_em_eeprom.c **** *
 990:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
 991:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t WriteRow(uint32 rowAddr,
 992:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 *rowData,
 993:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
 994:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2119              		.loc 1 994 0
 2120              		.cfi_startproc
 2121              		@ args = 0, pretend = 0, frame = 32
 2122              		@ frame_needed = 1, uses_anonymous_args = 0
 2123 0000 80B5     		push	{r7, lr}
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 88B0     		sub	sp, sp, #32
 2128              		.cfi_def_cfa_offset 40
 2129 0004 00AF     		add	r7, sp, #0
 2130              		.cfi_def_cfa_register 7
 2131 0006 F860     		str	r0, [r7, #12]
 2132 0008 B960     		str	r1, [r7, #8]
 2133 000a 7A60     		str	r2, [r7, #4]
 995:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2134              		.loc 1 995 0
 2135 000c 1F23     		movs	r3, #31
 2136 000e FB18     		adds	r3, r7, r3
 2137 0010 0422     		movs	r2, #4
 2138 0012 1A70     		strb	r2, [r3]
 996:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (!CY_PSOC6)
 997:Generated_Source\PSoC4/cy_em_eeprom.c ****     cystatus rc;
 998:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rowId;
 999:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if ((CY_PSOC3) || (CY_PSOC5))
1000:Generated_Source\PSoC4/cy_em_eeprom.c ****         uint32 arrayId;
1001:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC3) */
1002:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1003:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC3)
1004:Generated_Source\PSoC4/cy_em_eeprom.c ****         rowAddr &= CY_EM_EEPROM_CODE_ADDR_MASK;
1005:Generated_Source\PSoC4/cy_em_eeprom.c ****         context = context;      /* To avoid compiler warning generation */
1006:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
1007:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)context;          /* To avoid compiler warning generation */
1008:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* ((CY_PSOC3) */
1009:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1010:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* For non-PSoC 6 devices, the Array ID and Row ID needed to write the row */
1011:Generated_Source\PSoC4/cy_em_eeprom.c ****     rowId = (rowAddr / CY_EM_EEPROM_FLASH_SIZEOF_ROW) % CY_EM_EEPROM_ROWS_IN_ARRAY;
 2139              		.loc 1 1011 0
 2140 0014 FB68     		ldr	r3, [r7, #12]
 2141 0016 1B0A     		lsrs	r3, r3, #8
 2142 0018 DB05     		lsls	r3, r3, #23
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 57


 2143 001a DB0D     		lsrs	r3, r3, #23
 2144 001c BB61     		str	r3, [r7, #24]
1012:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1013:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the flash row */
1014:Generated_Source\PSoC4/cy_em_eeprom.c ****     #if (CY_PSOC4)
1015:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CySysFlashWriteRow(rowId, (uint8 *)rowData);
 2145              		.loc 1 1015 0
 2146 001e BA68     		ldr	r2, [r7, #8]
 2147 0020 BB69     		ldr	r3, [r7, #24]
 2148 0022 1100     		movs	r1, r2
 2149 0024 1800     		movs	r0, r3
 2150 0026 FFF7FEFF 		bl	CySysFlashWriteRow
 2151 002a 0300     		movs	r3, r0
 2152 002c 7B61     		str	r3, [r7, #20]
1016:Generated_Source\PSoC4/cy_em_eeprom.c ****     #else
1017:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1018:Generated_Source\PSoC4/cy_em_eeprom.c ****         #ifndef CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT
1019:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)CySetTemp();
1020:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_EM_EEPROM_SKIP_TEMP_MEASUREMENT) */
1021:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1022:Generated_Source\PSoC4/cy_em_eeprom.c ****         arrayId = rowAddr / CY_FLASH_SIZEOF_ARRAY;
1023:Generated_Source\PSoC4/cy_em_eeprom.c ****         rc = CyWriteRowData((uint8)arrayId, (uint16)rowId, (uint8 *)rowData);
1024:Generated_Source\PSoC4/cy_em_eeprom.c ****         
1025:Generated_Source\PSoC4/cy_em_eeprom.c ****         #if (CY_PSOC5)
1026:Generated_Source\PSoC4/cy_em_eeprom.c ****             CyFlushCache();
1027:Generated_Source\PSoC4/cy_em_eeprom.c ****         #endif /* (CY_PSOC5) */
1028:Generated_Source\PSoC4/cy_em_eeprom.c ****     #endif /* (CY_PSOC4) */
1029:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1030:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CYRET_SUCCESS == rc)
 2153              		.loc 1 1030 0
 2154 002e 7B69     		ldr	r3, [r7, #20]
 2155 0030 002B     		cmp	r3, #0
 2156 0032 03D1     		bne	.L109
1031:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1032:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2157              		.loc 1 1032 0
 2158 0034 1F23     		movs	r3, #31
 2159 0036 FB18     		adds	r3, r7, r3
 2160 0038 0022     		movs	r2, #0
 2161 003a 1A70     		strb	r2, [r3]
 2162              	.L109:
1033:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1034:Generated_Source\PSoC4/cy_em_eeprom.c **** #else /* PSoC 6 */
1035:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->blockingWrite)
1036:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1037:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Do blocking write */
1038:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_SUCCESS == Cy_Flash_WriteRow(rowAddr, (const uint32 *)rowData))
1039:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1040:Generated_Source\PSoC4/cy_em_eeprom.c ****             ret = CY_EM_EEPROM_SUCCESS;
1041:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1042:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1043:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1044:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1045:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Initiate write */
1046:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartWrite(rowAddr, (const uint32 *)rowData))
1047:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1048:Generated_Source\PSoC4/cy_em_eeprom.c ****             uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 58


1049:Generated_Source\PSoC4/cy_em_eeprom.c ****             cy_en_flashdrv_status_t rc;
1050:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1051:Generated_Source\PSoC4/cy_em_eeprom.c ****             do
1052:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1053:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CyDelay(1u);                         /* Wait 1ms */
1054:Generated_Source\PSoC4/cy_em_eeprom.c ****                 rc = Cy_Flash_IsWriteComplete();     /* Check if write completed */
1055:Generated_Source\PSoC4/cy_em_eeprom.c ****                 countMs--;
1056:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1057:Generated_Source\PSoC4/cy_em_eeprom.c ****             while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1058:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1059:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == rc)
1060:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1061:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1062:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1063:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1064:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1065:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1066:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1067:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (ret);
 2163              		.loc 1 1067 0
 2164 003c 1F23     		movs	r3, #31
 2165 003e FB18     		adds	r3, r7, r3
 2166 0040 1B78     		ldrb	r3, [r3]
1068:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2167              		.loc 1 1068 0
 2168 0042 1800     		movs	r0, r3
 2169 0044 BD46     		mov	sp, r7
 2170 0046 08B0     		add	sp, sp, #32
 2171              		@ sp needed
 2172 0048 80BD     		pop	{r7, pc}
 2173              		.cfi_endproc
 2174              	.LFE12:
 2175              		.size	WriteRow, .-WriteRow
 2176 004a C046     		.section	.text.EraseRow,"ax",%progbits
 2177              		.align	2
 2178              		.code	16
 2179              		.thumb_func
 2180              		.type	EraseRow, %function
 2181              	EraseRow:
 2182              	.LFB13:
1069:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1070:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1071:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1072:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: EraseRow
1073:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1074:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1075:Generated_Source\PSoC4/cy_em_eeprom.c **** * Erases one flash row starting from the specified row address. If the redundant
1076:Generated_Source\PSoC4/cy_em_eeprom.c **** * copy option is enabled the corresponding row in the redundant copy will also
1077:Generated_Source\PSoC4/cy_em_eeprom.c **** * be erased.
1078:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1079:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowAdd
1080:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the flash row.
1081:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1082:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param ramBuffAddr
1083:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the RAM buffer that contains zeroed data (used only for
1084:Generated_Source\PSoC4/cy_em_eeprom.c **** * non-PSoC 6 devices).
1085:Generated_Source\PSoC4/cy_em_eeprom.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 59


1086:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1087:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1088:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1089:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1090:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1091:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1092:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1093:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t EraseRow(uint32 rowAddr,
1094:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         uint32 ramBuffAddr,
1095:Generated_Source\PSoC4/cy_em_eeprom.c ****                                         cy_stc_eeprom_context_t * context)
1096:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2183              		.loc 1 1096 0
 2184              		.cfi_startproc
 2185              		@ args = 0, pretend = 0, frame = 24
 2186              		@ frame_needed = 1, uses_anonymous_args = 0
 2187 0000 90B5     		push	{r4, r7, lr}
 2188              		.cfi_def_cfa_offset 12
 2189              		.cfi_offset 4, -12
 2190              		.cfi_offset 7, -8
 2191              		.cfi_offset 14, -4
 2192 0002 87B0     		sub	sp, sp, #28
 2193              		.cfi_def_cfa_offset 40
 2194 0004 00AF     		add	r7, sp, #0
 2195              		.cfi_def_cfa_register 7
 2196 0006 F860     		str	r0, [r7, #12]
 2197 0008 B960     		str	r1, [r7, #8]
 2198 000a 7A60     		str	r2, [r7, #4]
1097:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 emEepromRowAddr = rowAddr;
 2199              		.loc 1 1097 0
 2200 000c FB68     		ldr	r3, [r7, #12]
 2201 000e 3B61     		str	r3, [r7, #16]
1098:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_WRITE_FAIL;
 2202              		.loc 1 1098 0
 2203 0010 1723     		movs	r3, #23
 2204 0012 FB18     		adds	r3, r7, r3
 2205 0014 0422     		movs	r2, #4
 2206 0016 1A70     		strb	r2, [r3]
1099:Generated_Source\PSoC4/cy_em_eeprom.c **** #if (CY_PSOC6)
1100:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i = 1u;
1101:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1102:Generated_Source\PSoC4/cy_em_eeprom.c ****     (void)ramBuffAddr; /* To avoid compiler warning */
1103:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1104:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != context->redundantCopy)
1105:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1106:Generated_Source\PSoC4/cy_em_eeprom.c ****         i++;
1107:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1108:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1109:Generated_Source\PSoC4/cy_em_eeprom.c ****     do
1110:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1111:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != context->blockingWrite)
1112:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1113:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Erase the flash row */
1114:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_SUCCESS == Cy_Flash_EraseRow(emEepromRowAddr))
1115:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1116:Generated_Source\PSoC4/cy_em_eeprom.c ****                 ret = CY_EM_EEPROM_SUCCESS;
1117:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1118:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 60


1119:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1120:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1121:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Initiate erase */
1122:Generated_Source\PSoC4/cy_em_eeprom.c ****             if(CY_FLASH_DRV_OPERATION_STARTED == Cy_Flash_StartErase(emEepromRowAddr))
1123:Generated_Source\PSoC4/cy_em_eeprom.c ****             {
1124:Generated_Source\PSoC4/cy_em_eeprom.c ****                 uint32 countMs = CY_EM_EEPROM_MAX_WRITE_DURATION_MS;
1125:Generated_Source\PSoC4/cy_em_eeprom.c ****                 cy_en_flashdrv_status_t rc;
1126:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1127:Generated_Source\PSoC4/cy_em_eeprom.c ****                 do
1128:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1129:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CyDelay(1u);                         /* Wait 1ms */
1130:Generated_Source\PSoC4/cy_em_eeprom.c ****                     rc = Cy_Flash_IsWriteComplete();     /* Check if erase completed */
1131:Generated_Source\PSoC4/cy_em_eeprom.c ****                     countMs--;
1132:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1133:Generated_Source\PSoC4/cy_em_eeprom.c ****                 while ((rc == CY_FLASH_DRV_OPCODE_BUSY) && (0u != countMs));
1134:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1135:Generated_Source\PSoC4/cy_em_eeprom.c ****                 if(CY_FLASH_DRV_SUCCESS == rc)
1136:Generated_Source\PSoC4/cy_em_eeprom.c ****                 {
1137:Generated_Source\PSoC4/cy_em_eeprom.c ****                     ret = CY_EM_EEPROM_SUCCESS;
1138:Generated_Source\PSoC4/cy_em_eeprom.c ****                 }
1139:Generated_Source\PSoC4/cy_em_eeprom.c ****             }
1140:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1141:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1142:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
1143:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1144:Generated_Source\PSoC4/cy_em_eeprom.c ****             /* Update the address to point to the redundant copy row */
1145:Generated_Source\PSoC4/cy_em_eeprom.c ****             emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
1146:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1147:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1148:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1149:Generated_Source\PSoC4/cy_em_eeprom.c ****             break;
1150:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1151:Generated_Source\PSoC4/cy_em_eeprom.c ****         i--;
1152:Generated_Source\PSoC4/cy_em_eeprom.c ****     } while (0u != i);
1153:Generated_Source\PSoC4/cy_em_eeprom.c **** #else
1154:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Write the data to the specified flash row */
1155:Generated_Source\PSoC4/cy_em_eeprom.c ****     ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2207              		.loc 1 1155 0
 2208 0018 B968     		ldr	r1, [r7, #8]
 2209 001a 1723     		movs	r3, #23
 2210 001c FC18     		adds	r4, r7, r3
 2211 001e 7A68     		ldr	r2, [r7, #4]
 2212 0020 3B69     		ldr	r3, [r7, #16]
 2213 0022 1800     		movs	r0, r3
 2214 0024 FFF7FEFF 		bl	WriteRow
 2215 0028 0300     		movs	r3, r0
 2216 002a 2370     		strb	r3, [r4]
1156:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1157:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((CY_EM_EEPROM_SUCCESS == ret) && (0u != context->redundantCopy))
 2217              		.loc 1 1157 0
 2218 002c 1723     		movs	r3, #23
 2219 002e FB18     		adds	r3, r7, r3
 2220 0030 1B78     		ldrb	r3, [r3]
 2221 0032 002B     		cmp	r3, #0
 2222 0034 15D1     		bne	.L112
 2223              		.loc 1 1157 0 is_stmt 0 discriminator 1
 2224 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 61


 2225 0038 1B7D     		ldrb	r3, [r3, #20]
 2226 003a 002B     		cmp	r3, #0
 2227 003c 11D0     		beq	.L112
1158:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1159:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Update the address to point to the redundant copy row */
1160:Generated_Source\PSoC4/cy_em_eeprom.c ****         emEepromRowAddr = (emEepromRowAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2228              		.loc 1 1160 0 is_stmt 1
 2229 003e 7B68     		ldr	r3, [r7, #4]
 2230 0040 9B69     		ldr	r3, [r3, #24]
 2231 0042 3A69     		ldr	r2, [r7, #16]
 2232 0044 D21A     		subs	r2, r2, r3
 2233 0046 7B68     		ldr	r3, [r7, #4]
 2234 0048 1B68     		ldr	r3, [r3]
 2235 004a D318     		adds	r3, r2, r3
 2236 004c 3B61     		str	r3, [r7, #16]
1161:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(emEepromRowAddr, (uint32 *)ramBuffAddr, context);
 2237              		.loc 1 1161 0
 2238 004e B968     		ldr	r1, [r7, #8]
 2239 0050 1723     		movs	r3, #23
 2240 0052 FC18     		adds	r4, r7, r3
 2241 0054 7A68     		ldr	r2, [r7, #4]
 2242 0056 3B69     		ldr	r3, [r7, #16]
 2243 0058 1800     		movs	r0, r3
 2244 005a FFF7FEFF 		bl	WriteRow
 2245 005e 0300     		movs	r3, r0
 2246 0060 2370     		strb	r3, [r4]
 2247              	.L112:
1162:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1163:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1164:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(CY_EM_EEPROM_SUCCESS == ret)
 2248              		.loc 1 1164 0
 2249 0062 1723     		movs	r3, #23
 2250 0064 FB18     		adds	r3, r7, r3
 2251 0066 1B78     		ldrb	r3, [r3]
 2252 0068 002B     		cmp	r3, #0
 2253 006a 02D1     		bne	.L113
1165:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1166:Generated_Source\PSoC4/cy_em_eeprom.c ****         context->lastWrRowAddr = rowAddr;
 2254              		.loc 1 1166 0
 2255 006c 7B68     		ldr	r3, [r7, #4]
 2256 006e FA68     		ldr	r2, [r7, #12]
 2257 0070 9A60     		str	r2, [r3, #8]
 2258              	.L113:
1167:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1168:Generated_Source\PSoC4/cy_em_eeprom.c **** #endif /* (CY_PSOC6) */
1169:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1170:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2259              		.loc 1 1170 0
 2260 0072 1723     		movs	r3, #23
 2261 0074 FB18     		adds	r3, r7, r3
 2262 0076 1B78     		ldrb	r3, [r3]
1171:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2263              		.loc 1 1171 0
 2264 0078 1800     		movs	r0, r3
 2265 007a BD46     		mov	sp, r7
 2266 007c 07B0     		add	sp, sp, #28
 2267              		@ sp needed
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 62


 2268 007e 90BD     		pop	{r4, r7, pc}
 2269              		.cfi_endproc
 2270              	.LFE13:
 2271              		.size	EraseRow, .-EraseRow
 2272              		.section	.text.CheckCrcAndCopy,"ax",%progbits
 2273              		.align	2
 2274              		.code	16
 2275              		.thumb_func
 2276              		.type	CheckCrcAndCopy, %function
 2277              	CheckCrcAndCopy:
 2278              	.LFB14:
1172:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1173:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1174:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1175:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: CheckCrcAndCopy
1176:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1177:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1178:Generated_Source\PSoC4/cy_em_eeprom.c **** * Checks the checksum of the specific row in EEPROM. If the CRC matches - copies
1179:Generated_Source\PSoC4/cy_em_eeprom.c **** * the data to the "datAddr" from EEPROM. f the CRC does not match checks the
1180:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the corresponding row in the EEPROM's redundant copy. If the CRC
1181:Generated_Source\PSoC4/cy_em_eeprom.c **** * matches - copies the data to the "datAddr" from EEPROM redundant copy. If the
1182:Generated_Source\PSoC4/cy_em_eeprom.c **** * CRC of the redundant copy does not match - returns bad checksum.
1183:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1184:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1185:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address that points to the start of the specified row.
1186:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1187:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param datAddr
1188:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start address of where the row data will be copied if the CRC check
1189:Generated_Source\PSoC4/cy_em_eeprom.c **** * will succeed.
1190:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1191:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowOffset
1192:Generated_Source\PSoC4/cy_em_eeprom.c **** * The offset in the row from which the data should be copied.
1193:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1194:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param numBytes
1195:Generated_Source\PSoC4/cy_em_eeprom.c **** * The number of bytes to be copied.
1196:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1197:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1198:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure \ref cy_stc_eeprom_context_t.
1199:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1200:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1201:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1202:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1203:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
1204:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1205:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1206:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
1207:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1208:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1209:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t CheckCrcAndCopy(uint32 startAddr,
1210:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 dstAddr,
1211:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 rowOffset,
1212:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 uint32 numBytes,
1213:Generated_Source\PSoC4/cy_em_eeprom.c ****                                                 cy_stc_eeprom_context_t * context)
1214:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2279              		.loc 1 1214 0
 2280              		.cfi_startproc
 2281              		@ args = 4, pretend = 0, frame = 280
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 63


 2282              		@ frame_needed = 1, uses_anonymous_args = 0
 2283 0000 90B5     		push	{r4, r7, lr}
 2284              		.cfi_def_cfa_offset 12
 2285              		.cfi_offset 4, -12
 2286              		.cfi_offset 7, -8
 2287              		.cfi_offset 14, -4
 2288 0002 C7B0     		sub	sp, sp, #284
 2289              		.cfi_def_cfa_offset 296
 2290 0004 00AF     		add	r7, sp, #0
 2291              		.cfi_def_cfa_register 7
 2292 0006 F860     		str	r0, [r7, #12]
 2293 0008 B960     		str	r1, [r7, #8]
 2294 000a 7A60     		str	r2, [r7, #4]
 2295 000c 3B60     		str	r3, [r7]
1215:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret;
1216:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1217:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1218:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Calculate the row address in the EEPROM's redundant copy */
1219:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rcStartRowAddr = (startAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2296              		.loc 1 1219 0
 2297 000e 9423     		movs	r3, #148
 2298 0010 5B00     		lsls	r3, r3, #1
 2299 0012 FB18     		adds	r3, r7, r3
 2300 0014 1B68     		ldr	r3, [r3]
 2301 0016 9B69     		ldr	r3, [r3, #24]
 2302 0018 FA68     		ldr	r2, [r7, #12]
 2303 001a D21A     		subs	r2, r2, r3
 2304 001c 9423     		movs	r3, #148
 2305 001e 5B00     		lsls	r3, r3, #1
 2306 0020 FB18     		adds	r3, r7, r3
 2307 0022 1B68     		ldr	r3, [r3]
 2308 0024 1B68     		ldr	r3, [r3]
 2309 0026 D318     		adds	r3, r2, r3
 2310 0028 8822     		movs	r2, #136
 2311 002a 5200     		lsls	r2, r2, #1
 2312 002c BA18     		adds	r2, r7, r2
 2313 002e 1360     		str	r3, [r2]
1220:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1221:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM */
1222:Generated_Source\PSoC4/cy_em_eeprom.c ****     if((*(uint32 *)(startAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2314              		.loc 1 1222 0
 2315 0030 FB68     		ldr	r3, [r7, #12]
 2316 0032 7C33     		adds	r3, r3, #124
 2317 0034 1C68     		ldr	r4, [r3]
1223:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2318              		.loc 1 1223 0
 2319 0036 FB68     		ldr	r3, [r7, #12]
 2320 0038 8033     		adds	r3, r3, #128
 2321 003a 8021     		movs	r1, #128
 2322 003c 1800     		movs	r0, r3
 2323 003e FFF7FEFF 		bl	CalcChecksum
 2324 0042 0300     		movs	r3, r0
1222:Generated_Source\PSoC4/cy_em_eeprom.c ****         ((uint32) CalcChecksum((uint8 *)(startAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2325              		.loc 1 1222 0
 2326 0044 9C42     		cmp	r4, r3
 2327 0046 0ED1     		bne	.L116
1224:Generated_Source\PSoC4/cy_em_eeprom.c ****             CY_EM_EEPROM_EEPROM_DATA_LEN)))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 64


1225:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1226:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(dstAddr), (void *)(startAddr + rowOffset), numBytes);
 2328              		.loc 1 1226 0
 2329 0048 B868     		ldr	r0, [r7, #8]
 2330 004a FA68     		ldr	r2, [r7, #12]
 2331 004c 7B68     		ldr	r3, [r7, #4]
 2332 004e D318     		adds	r3, r2, r3
 2333 0050 1900     		movs	r1, r3
 2334 0052 3B68     		ldr	r3, [r7]
 2335 0054 1A00     		movs	r2, r3
 2336 0056 FFF7FEFF 		bl	memcpy
1227:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1228:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_SUCCESS;
 2337              		.loc 1 1228 0
 2338 005a 1823     		movs	r3, #24
 2339 005c FF33     		adds	r3, r3, #255
 2340 005e FB18     		adds	r3, r7, r3
 2341 0060 0022     		movs	r2, #0
 2342 0062 1A70     		strb	r2, [r3]
 2343 0064 41E0     		b	.L117
 2344              	.L116:
1229:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1230:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Check the row data CRC in the EEPROM's redundant copy */
1231:Generated_Source\PSoC4/cy_em_eeprom.c ****     else if((*(uint32 *)(rcStartRowAddr + CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET)) ==
 2345              		.loc 1 1231 0
 2346 0066 8823     		movs	r3, #136
 2347 0068 5B00     		lsls	r3, r3, #1
 2348 006a FB18     		adds	r3, r7, r3
 2349 006c 1B68     		ldr	r3, [r3]
 2350 006e 7C33     		adds	r3, r3, #124
 2351 0070 1C68     		ldr	r4, [r3]
1232:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2352              		.loc 1 1232 0
 2353 0072 8823     		movs	r3, #136
 2354 0074 5B00     		lsls	r3, r3, #1
 2355 0076 FB18     		adds	r3, r7, r3
 2356 0078 1B68     		ldr	r3, [r3]
 2357 007a 8033     		adds	r3, r3, #128
 2358 007c 8021     		movs	r1, #128
 2359 007e 1800     		movs	r0, r3
 2360 0080 FFF7FEFF 		bl	CalcChecksum
 2361 0084 0300     		movs	r3, r0
1231:Generated_Source\PSoC4/cy_em_eeprom.c ****             ((uint32) CalcChecksum((uint8 *)(rcStartRowAddr + CY_EM_EEPROM_EEPROM_DATA_OFFSET),
 2362              		.loc 1 1231 0
 2363 0086 9C42     		cmp	r4, r3
 2364 0088 2AD1     		bne	.L118
1233:Generated_Source\PSoC4/cy_em_eeprom.c ****                 CY_EM_EEPROM_EEPROM_DATA_LEN)))
1234:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1235:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy the redundant copy row to RAM buffer to avoid read while write (RWW)
1236:Generated_Source\PSoC4/cy_em_eeprom.c ****         * flash exception. The RWW occurs while trying to write and read the data from
1237:Generated_Source\PSoC4/cy_em_eeprom.c ****         * same flash macro.
1238:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1239:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)(writeRamBuffer), (void *)(rcStartRowAddr), CY_EM_EEPROM_FLASH_SIZEOF_
 2365              		.loc 1 1239 0
 2366 008a 8823     		movs	r3, #136
 2367 008c 5B00     		lsls	r3, r3, #1
 2368 008e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 65


 2369 0090 1968     		ldr	r1, [r3]
 2370 0092 8023     		movs	r3, #128
 2371 0094 5A00     		lsls	r2, r3, #1
 2372 0096 1023     		movs	r3, #16
 2373 0098 FB18     		adds	r3, r7, r3
 2374 009a 1800     		movs	r0, r3
 2375 009c FFF7FEFF 		bl	memcpy
1240:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1241:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Restore bad row data from the RAM buffer */
1242:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(startAddr, (uint32 *)writeRamBuffer, context);
 2376              		.loc 1 1242 0
 2377 00a0 1823     		movs	r3, #24
 2378 00a2 FF33     		adds	r3, r3, #255
 2379 00a4 FC18     		adds	r4, r7, r3
 2380 00a6 9423     		movs	r3, #148
 2381 00a8 5B00     		lsls	r3, r3, #1
 2382 00aa FB18     		adds	r3, r7, r3
 2383 00ac 1A68     		ldr	r2, [r3]
 2384 00ae 1023     		movs	r3, #16
 2385 00b0 F918     		adds	r1, r7, r3
 2386 00b2 FB68     		ldr	r3, [r7, #12]
 2387 00b4 1800     		movs	r0, r3
 2388 00b6 FFF7FEFF 		bl	WriteRow
 2389 00ba 0300     		movs	r3, r0
 2390 00bc 2370     		strb	r3, [r4]
1243:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1244:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(CY_EM_EEPROM_SUCCESS == ret)
 2391              		.loc 1 1244 0
 2392 00be 1823     		movs	r3, #24
 2393 00c0 FF33     		adds	r3, r3, #255
 2394 00c2 FB18     		adds	r3, r7, r3
 2395 00c4 1B78     		ldrb	r3, [r3]
 2396 00c6 002B     		cmp	r3, #0
 2397 00c8 0FD1     		bne	.L117
1245:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1246:Generated_Source\PSoC4/cy_em_eeprom.c ****             (void)memcpy((void *)(dstAddr), (void *)(writeRamBuffer + rowOffset), numBytes);
 2398              		.loc 1 1246 0
 2399 00ca B868     		ldr	r0, [r7, #8]
 2400 00cc 7B68     		ldr	r3, [r7, #4]
 2401 00ce 9B00     		lsls	r3, r3, #2
 2402 00d0 1022     		movs	r2, #16
 2403 00d2 BA18     		adds	r2, r7, r2
 2404 00d4 D318     		adds	r3, r2, r3
 2405 00d6 3A68     		ldr	r2, [r7]
 2406 00d8 1900     		movs	r1, r3
 2407 00da FFF7FEFF 		bl	memcpy
 2408 00de 04E0     		b	.L117
 2409              	.L118:
1247:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1248:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1249:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1250:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1251:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = CY_EM_EEPROM_BAD_CHECKSUM;
 2410              		.loc 1 1251 0
 2411 00e0 1823     		movs	r3, #24
 2412 00e2 FF33     		adds	r3, r3, #255
 2413 00e4 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 66


 2414 00e6 0222     		movs	r2, #2
 2415 00e8 1A70     		strb	r2, [r3]
 2416              	.L117:
1252:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1253:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1254:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2417              		.loc 1 1254 0
 2418 00ea 1823     		movs	r3, #24
 2419 00ec FF33     		adds	r3, r3, #255
 2420 00ee FB18     		adds	r3, r7, r3
 2421 00f0 1B78     		ldrb	r3, [r3]
1255:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2422              		.loc 1 1255 0
 2423 00f2 1800     		movs	r0, r3
 2424 00f4 BD46     		mov	sp, r7
 2425 00f6 47B0     		add	sp, sp, #284
 2426              		@ sp needed
 2427 00f8 90BD     		pop	{r4, r7, pc}
 2428              		.cfi_endproc
 2429              	.LFE14:
 2430              		.size	CheckCrcAndCopy, .-CheckCrcAndCopy
 2431 00fa C046     		.section	.text.GetAddresses,"ax",%progbits
 2432              		.align	2
 2433              		.code	16
 2434              		.thumb_func
 2435              		.type	GetAddresses, %function
 2436              	GetAddresses:
 2437              	.LFB15:
1256:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1257:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1258:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1259:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: GetAddresses
1260:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1261:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1262:Generated_Source\PSoC4/cy_em_eeprom.c **** * Calculates the start and end address of the row's EEPROM data to be updated.
1263:Generated_Source\PSoC4/cy_em_eeprom.c **** * The start and end are not absolute addresses but a relative addresses in a
1264:Generated_Source\PSoC4/cy_em_eeprom.c **** * flash row.
1265:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1266:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param startAddr
1267:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data start address will be returned.
1268:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1269:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param endAddr
1270:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the EEPROM data end address will be returned.
1271:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1272:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param offset
1273:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer the address where the calculated offset of the EEPROM header data
1274:Generated_Source\PSoC4/cy_em_eeprom.c **** * will be returned.
1275:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1276:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param rowNum
1277:Generated_Source\PSoC4/cy_em_eeprom.c **** * The row number that is about to be written.
1278:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1279:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param addr
1280:Generated_Source\PSoC4/cy_em_eeprom.c **** * The address of the EEPROM header data in the currently analyzed row that may
1281:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1282:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1283:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param len
1284:Generated_Source\PSoC4/cy_em_eeprom.c **** * The length of the EEPROM header data in the currently analyzed row that may
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 67


1285:Generated_Source\PSoC4/cy_em_eeprom.c **** * concern to the row about to be written.
1286:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1287:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1288:Generated_Source\PSoC4/cy_em_eeprom.c **** * Zero indicates that the currently analyzed row has the data to be written to
1289:Generated_Source\PSoC4/cy_em_eeprom.c **** * the active EEPROM row data locations. Non zero value indicates that there is
1290:Generated_Source\PSoC4/cy_em_eeprom.c **** * no data to be written
1291:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1292:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1293:Generated_Source\PSoC4/cy_em_eeprom.c **** static uint32 GetAddresses(uint32 *startAddr, 
1294:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 *endAddr, 
1295:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 *offset,
1296:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 rowNum,
1297:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 addr,
1298:Generated_Source\PSoC4/cy_em_eeprom.c ****                         uint32 len)
1299:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2438              		.loc 1 1299 0
 2439              		.cfi_startproc
 2440              		@ args = 8, pretend = 0, frame = 24
 2441              		@ frame_needed = 1, uses_anonymous_args = 0
 2442 0000 80B5     		push	{r7, lr}
 2443              		.cfi_def_cfa_offset 8
 2444              		.cfi_offset 7, -8
 2445              		.cfi_offset 14, -4
 2446 0002 86B0     		sub	sp, sp, #24
 2447              		.cfi_def_cfa_offset 32
 2448 0004 00AF     		add	r7, sp, #0
 2449              		.cfi_def_cfa_register 7
 2450 0006 F860     		str	r0, [r7, #12]
 2451 0008 B960     		str	r1, [r7, #8]
 2452 000a 7A60     		str	r2, [r7, #4]
 2453 000c 3B60     		str	r3, [r7]
1300:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 skip = 0u;
 2454              		.loc 1 1300 0
 2455 000e 0023     		movs	r3, #0
 2456 0010 7B61     		str	r3, [r7, #20]
1301:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1302:Generated_Source\PSoC4/cy_em_eeprom.c ****     *offset =0u;
 2457              		.loc 1 1302 0
 2458 0012 7B68     		ldr	r3, [r7, #4]
 2459 0014 0022     		movs	r2, #0
 2460 0016 1A60     		str	r2, [r3]
1303:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1304:Generated_Source\PSoC4/cy_em_eeprom.c ****     if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr, rowNum))
 2461              		.loc 1 1304 0
 2462 0018 3B68     		ldr	r3, [r7]
 2463 001a DA01     		lsls	r2, r3, #7
 2464 001c 3B6A     		ldr	r3, [r7, #32]
 2465 001e 9A42     		cmp	r2, r3
 2466 0020 08D8     		bhi	.L122
 2467              		.loc 1 1304 0 is_stmt 0 discriminator 1
 2468 0022 3B68     		ldr	r3, [r7]
 2469 0024 0133     		adds	r3, r3, #1
 2470 0026 DB01     		lsls	r3, r3, #7
 2471 0028 5A1E     		subs	r2, r3, #1
 2472 002a 3B6A     		ldr	r3, [r7, #32]
 2473 002c 9A42     		cmp	r2, r3
 2474 002e 01D3     		bcc	.L122
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 68


 2475              		.loc 1 1304 0 discriminator 3
 2476 0030 0123     		movs	r3, #1
 2477 0032 00E0     		b	.L123
 2478              	.L122:
 2479              		.loc 1 1304 0 discriminator 4
 2480 0034 0023     		movs	r3, #0
 2481              	.L123:
 2482              		.loc 1 1304 0 discriminator 6
 2483 0036 002B     		cmp	r3, #0
 2484 0038 27D0     		beq	.L124
1305:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1306:Generated_Source\PSoC4/cy_em_eeprom.c ****         *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN + (addr % CY_EM_EEPROM_EEPROM_DATA_LEN);
 2485              		.loc 1 1306 0 is_stmt 1
 2486 003a 3B6A     		ldr	r3, [r7, #32]
 2487 003c 7F22     		movs	r2, #127
 2488 003e 1340     		ands	r3, r2
 2489 0040 8033     		adds	r3, r3, #128
 2490 0042 1A00     		movs	r2, r3
 2491 0044 FB68     		ldr	r3, [r7, #12]
 2492 0046 1A60     		str	r2, [r3]
1307:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1308:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2493              		.loc 1 1308 0
 2494 0048 3A6A     		ldr	r2, [r7, #32]
 2495 004a 7B6A     		ldr	r3, [r7, #36]
 2496 004c D218     		adds	r2, r2, r3
 2497 004e 3B68     		ldr	r3, [r7]
 2498 0050 DB01     		lsls	r3, r3, #7
 2499 0052 9A42     		cmp	r2, r3
 2500 0054 0AD3     		bcc	.L125
 2501              		.loc 1 1308 0 is_stmt 0 discriminator 1
 2502 0056 3A6A     		ldr	r2, [r7, #32]
 2503 0058 7B6A     		ldr	r3, [r7, #36]
 2504 005a D218     		adds	r2, r2, r3
 2505 005c 3B68     		ldr	r3, [r7]
 2506 005e 0133     		adds	r3, r3, #1
 2507 0060 DB01     		lsls	r3, r3, #7
 2508 0062 013B     		subs	r3, r3, #1
 2509 0064 9A42     		cmp	r2, r3
 2510 0066 01D8     		bhi	.L125
 2511              		.loc 1 1308 0 discriminator 3
 2512 0068 0123     		movs	r3, #1
 2513 006a 00E0     		b	.L126
 2514              	.L125:
 2515              		.loc 1 1308 0 discriminator 4
 2516 006c 0023     		movs	r3, #0
 2517              	.L126:
 2518              		.loc 1 1308 0 discriminator 6
 2519 006e 002B     		cmp	r3, #0
 2520 0070 06D0     		beq	.L127
1309:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1310:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = *startAddr + len;
 2521              		.loc 1 1310 0 is_stmt 1
 2522 0072 FB68     		ldr	r3, [r7, #12]
 2523 0074 1A68     		ldr	r2, [r3]
 2524 0076 7B6A     		ldr	r3, [r7, #36]
 2525 0078 D218     		adds	r2, r2, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 69


 2526 007a BB68     		ldr	r3, [r7, #8]
 2527 007c 1A60     		str	r2, [r3]
 2528 007e 36E0     		b	.L129
 2529              	.L127:
1311:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1312:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1313:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1314:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = CY_EM_EEPROM_FLASH_SIZEOF_ROW;
 2530              		.loc 1 1314 0
 2531 0080 BB68     		ldr	r3, [r7, #8]
 2532 0082 8022     		movs	r2, #128
 2533 0084 5200     		lsls	r2, r2, #1
 2534 0086 1A60     		str	r2, [r3]
 2535 0088 31E0     		b	.L129
 2536              	.L124:
1315:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1316:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1317:Generated_Source\PSoC4/cy_em_eeprom.c ****     else
1318:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1319:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1320:Generated_Source\PSoC4/cy_em_eeprom.c ****         if(0u != CY_EM_EEPROM_IS_ADDR_IN_ROW_RANGE(addr + len, rowNum))
 2537              		.loc 1 1320 0
 2538 008a 3A6A     		ldr	r2, [r7, #32]
 2539 008c 7B6A     		ldr	r3, [r7, #36]
 2540 008e D218     		adds	r2, r2, r3
 2541 0090 3B68     		ldr	r3, [r7]
 2542 0092 DB01     		lsls	r3, r3, #7
 2543 0094 9A42     		cmp	r2, r3
 2544 0096 0AD3     		bcc	.L130
 2545              		.loc 1 1320 0 is_stmt 0 discriminator 1
 2546 0098 3A6A     		ldr	r2, [r7, #32]
 2547 009a 7B6A     		ldr	r3, [r7, #36]
 2548 009c D218     		adds	r2, r2, r3
 2549 009e 3B68     		ldr	r3, [r7]
 2550 00a0 0133     		adds	r3, r3, #1
 2551 00a2 DB01     		lsls	r3, r3, #7
 2552 00a4 013B     		subs	r3, r3, #1
 2553 00a6 9A42     		cmp	r2, r3
 2554 00a8 01D8     		bhi	.L130
 2555              		.loc 1 1320 0 discriminator 3
 2556 00aa 0123     		movs	r3, #1
 2557 00ac 00E0     		b	.L131
 2558              	.L130:
 2559              		.loc 1 1320 0 discriminator 4
 2560 00ae 0023     		movs	r3, #0
 2561              	.L131:
 2562              		.loc 1 1320 0 discriminator 6
 2563 00b0 002B     		cmp	r3, #0
 2564 00b2 19D0     		beq	.L132
1321:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1322:Generated_Source\PSoC4/cy_em_eeprom.c ****             *startAddr = CY_EM_EEPROM_EEPROM_DATA_LEN;
 2565              		.loc 1 1322 0 is_stmt 1
 2566 00b4 FB68     		ldr	r3, [r7, #12]
 2567 00b6 8022     		movs	r2, #128
 2568 00b8 1A60     		str	r2, [r3]
1323:Generated_Source\PSoC4/cy_em_eeprom.c ****             *endAddr = (*startAddr + len) - (*startAddr - (addr % CY_EM_EEPROM_EEPROM_DATA_LEN));
 2569              		.loc 1 1323 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 70


 2570 00ba FB68     		ldr	r3, [r7, #12]
 2571 00bc 1A68     		ldr	r2, [r3]
 2572 00be 7B6A     		ldr	r3, [r7, #36]
 2573 00c0 D218     		adds	r2, r2, r3
 2574 00c2 3B6A     		ldr	r3, [r7, #32]
 2575 00c4 7F21     		movs	r1, #127
 2576 00c6 1940     		ands	r1, r3
 2577 00c8 FB68     		ldr	r3, [r7, #12]
 2578 00ca 1B68     		ldr	r3, [r3]
 2579 00cc CB1A     		subs	r3, r1, r3
 2580 00ce D218     		adds	r2, r2, r3
 2581 00d0 BB68     		ldr	r3, [r7, #8]
 2582 00d2 1A60     		str	r2, [r3]
1324:Generated_Source\PSoC4/cy_em_eeprom.c ****             *offset = len - (*endAddr - *startAddr);
 2583              		.loc 1 1324 0
 2584 00d4 FB68     		ldr	r3, [r7, #12]
 2585 00d6 1A68     		ldr	r2, [r3]
 2586 00d8 BB68     		ldr	r3, [r7, #8]
 2587 00da 1B68     		ldr	r3, [r3]
 2588 00dc D21A     		subs	r2, r2, r3
 2589 00de 7B6A     		ldr	r3, [r7, #36]
 2590 00e0 D218     		adds	r2, r2, r3
 2591 00e2 7B68     		ldr	r3, [r7, #4]
 2592 00e4 1A60     		str	r2, [r3]
 2593 00e6 02E0     		b	.L129
 2594              	.L132:
1325:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1326:Generated_Source\PSoC4/cy_em_eeprom.c ****         else
1327:Generated_Source\PSoC4/cy_em_eeprom.c ****         {
1328:Generated_Source\PSoC4/cy_em_eeprom.c ****             skip++;
 2595              		.loc 1 1328 0
 2596 00e8 7B69     		ldr	r3, [r7, #20]
 2597 00ea 0133     		adds	r3, r3, #1
 2598 00ec 7B61     		str	r3, [r7, #20]
 2599              	.L129:
1329:Generated_Source\PSoC4/cy_em_eeprom.c ****         }
1330:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1331:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1332:Generated_Source\PSoC4/cy_em_eeprom.c ****     return (skip);
 2600              		.loc 1 1332 0
 2601 00ee 7B69     		ldr	r3, [r7, #20]
1333:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2602              		.loc 1 1333 0
 2603 00f0 1800     		movs	r0, r3
 2604 00f2 BD46     		mov	sp, r7
 2605 00f4 06B0     		add	sp, sp, #24
 2606              		@ sp needed
 2607 00f6 80BD     		pop	{r7, pc}
 2608              		.cfi_endproc
 2609              	.LFE15:
 2610              		.size	GetAddresses, .-GetAddresses
 2611              		.section	.text.FillChecksum,"ax",%progbits
 2612              		.align	2
 2613              		.code	16
 2614              		.thumb_func
 2615              		.type	FillChecksum, %function
 2616              	FillChecksum:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 71


 2617              	.LFB16:
1334:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1335:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1336:Generated_Source\PSoC4/cy_em_eeprom.c **** /*******************************************************************************
1337:Generated_Source\PSoC4/cy_em_eeprom.c **** * Function Name: FillChecksum
1338:Generated_Source\PSoC4/cy_em_eeprom.c **** ****************************************************************************//**
1339:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1340:Generated_Source\PSoC4/cy_em_eeprom.c **** * Performs calculation of the checksum on each row in the Em_EEPROM and fills
1341:Generated_Source\PSoC4/cy_em_eeprom.c **** * the Em_EEPROM headers checksum field with the calculated checksums.
1342:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1343:Generated_Source\PSoC4/cy_em_eeprom.c **** * \param context
1344:Generated_Source\PSoC4/cy_em_eeprom.c **** * The pointer to the EEPROM context structure.
1345:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1346:Generated_Source\PSoC4/cy_em_eeprom.c **** * \return
1347:Generated_Source\PSoC4/cy_em_eeprom.c **** * error / status code. See \ref cy_en_em_eeprom_status_t.
1348:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1349:Generated_Source\PSoC4/cy_em_eeprom.c **** * \theory 
1350:Generated_Source\PSoC4/cy_em_eeprom.c **** * In case if redundant copy option is used the Em_EEPROM would return bad 
1351:Generated_Source\PSoC4/cy_em_eeprom.c **** * checksum while trying to read the EEPROM rows which were not yet written by 
1352:Generated_Source\PSoC4/cy_em_eeprom.c **** * the user. E.g. any read after device reprogramming without previous Write() 
1353:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation to the EEPROM would fail. This would happen because the Em_EEPROM 
1354:Generated_Source\PSoC4/cy_em_eeprom.c **** * headers checksum field values (which is zero at the moment) would not be 
1355:Generated_Source\PSoC4/cy_em_eeprom.c **** * equal to the actual data checksum. This function allows to avoid read failure
1356:Generated_Source\PSoC4/cy_em_eeprom.c **** * after device reprogramming. 
1357:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1358:Generated_Source\PSoC4/cy_em_eeprom.c **** * \note
1359:Generated_Source\PSoC4/cy_em_eeprom.c **** * This function uses a buffer of the flash row size to perform read
1360:Generated_Source\PSoC4/cy_em_eeprom.c **** * operation. For the size of the row refer to the specific PSoC device
1361:Generated_Source\PSoC4/cy_em_eeprom.c **** * datasheet.
1362:Generated_Source\PSoC4/cy_em_eeprom.c **** *
1363:Generated_Source\PSoC4/cy_em_eeprom.c **** *******************************************************************************/
1364:Generated_Source\PSoC4/cy_em_eeprom.c **** static cy_en_em_eeprom_status_t FillChecksum(cy_stc_eeprom_context_t * context)
1365:Generated_Source\PSoC4/cy_em_eeprom.c **** {
 2618              		.loc 1 1365 0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 288
 2621              		@ frame_needed = 1, uses_anonymous_args = 0
 2622 0000 90B5     		push	{r4, r7, lr}
 2623              		.cfi_def_cfa_offset 12
 2624              		.cfi_offset 4, -12
 2625              		.cfi_offset 7, -8
 2626              		.cfi_offset 14, -4
 2627 0002 C9B0     		sub	sp, sp, #292
 2628              		.cfi_def_cfa_offset 304
 2629 0004 00AF     		add	r7, sp, #0
 2630              		.cfi_def_cfa_register 7
 2631 0006 7860     		str	r0, [r7, #4]
1366:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 i;
1367:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 rdAddr;
1368:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 writeRamBuffer[CY_EM_EEPROM_FLASH_SIZEOF_ROW / CY_EM_EEPROM_U32_DIV];
1369:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 wrAddr = context->lastWrRowAddr;
 2632              		.loc 1 1369 0
 2633 0008 7B68     		ldr	r3, [r7, #4]
 2634 000a 9B68     		ldr	r3, [r3, #8]
 2635 000c BB60     		str	r3, [r7, #8]
1370:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 tmpRowAddr;
1371:Generated_Source\PSoC4/cy_em_eeprom.c ****     /* Get the sequence number (number of writes) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 72


1372:Generated_Source\PSoC4/cy_em_eeprom.c ****     uint32 seqNum = CY_EM_EEPROM_GET_SEQ_NUM(wrAddr);
 2636              		.loc 1 1372 0
 2637 000e BB68     		ldr	r3, [r7, #8]
 2638 0010 1B68     		ldr	r3, [r3]
 2639 0012 8C22     		movs	r2, #140
 2640 0014 5200     		lsls	r2, r2, #1
 2641 0016 BA18     		adds	r2, r7, r2
 2642 0018 1360     		str	r3, [r2]
1373:Generated_Source\PSoC4/cy_em_eeprom.c ****     cy_en_em_eeprom_status_t ret = CY_EM_EEPROM_BAD_PARAM;
 2643              		.loc 1 1373 0
 2644 001a 1823     		movs	r3, #24
 2645 001c FF33     		adds	r3, r3, #255
 2646 001e FB18     		adds	r3, r7, r3
 2647 0020 0122     		movs	r2, #1
 2648 0022 1A70     		strb	r2, [r3]
1374:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1375:Generated_Source\PSoC4/cy_em_eeprom.c ****     for(i = 0u; i < (context->numberOfRows * context->wearLevelingFactor); i++)
 2649              		.loc 1 1375 0
 2650 0024 0023     		movs	r3, #0
 2651 0026 8E22     		movs	r2, #142
 2652 0028 5200     		lsls	r2, r2, #1
 2653 002a BA18     		adds	r2, r7, r2
 2654 002c 1360     		str	r3, [r2]
 2655 002e 67E0     		b	.L135
 2656              	.L136:
1376:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
1377:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Copy the EEPROM row from Flash to RAM */
1378:Generated_Source\PSoC4/cy_em_eeprom.c ****         (void)memcpy((void *)&writeRamBuffer[0u], (void *)(wrAddr), CY_EM_EEPROM_FLASH_SIZEOF_ROW);
 2657              		.loc 1 1378 0 discriminator 3
 2658 0030 BB68     		ldr	r3, [r7, #8]
 2659 0032 1900     		movs	r1, r3
 2660 0034 8023     		movs	r3, #128
 2661 0036 5A00     		lsls	r2, r3, #1
 2662 0038 0C23     		movs	r3, #12
 2663 003a FB18     		adds	r3, r7, r3
 2664 003c 1800     		movs	r0, r3
 2665 003e FFF7FEFF 		bl	memcpy
1379:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1380:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Increment the sequence number */
1381:Generated_Source\PSoC4/cy_em_eeprom.c ****         seqNum++;
 2666              		.loc 1 1381 0 discriminator 3
 2667 0042 8C23     		movs	r3, #140
 2668 0044 5B00     		lsls	r3, r3, #1
 2669 0046 FB18     		adds	r3, r7, r3
 2670 0048 1B68     		ldr	r3, [r3]
 2671 004a 0133     		adds	r3, r3, #1
 2672 004c 8C22     		movs	r2, #140
 2673 004e 5200     		lsls	r2, r2, #1
 2674 0050 BA18     		adds	r2, r7, r2
 2675 0052 1360     		str	r3, [r2]
1382:Generated_Source\PSoC4/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_SEQ_NUM_OFFSET_U32] = seqNum;
 2676              		.loc 1 1382 0 discriminator 3
 2677 0054 344B     		ldr	r3, .L138
 2678 0056 9022     		movs	r2, #144
 2679 0058 5200     		lsls	r2, r2, #1
 2680 005a 9446     		mov	ip, r2
 2681 005c BC44     		add	ip, ip, r7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 73


 2682 005e 6344     		add	r3, r3, ip
 2683 0060 8C22     		movs	r2, #140
 2684 0062 5200     		lsls	r2, r2, #1
 2685 0064 BA18     		adds	r2, r7, r2
 2686 0066 1268     		ldr	r2, [r2]
 2687 0068 1A60     		str	r2, [r3]
1383:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1384:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Calculate and fill the checksum to the Em_EEPROM header */
1385:Generated_Source\PSoC4/cy_em_eeprom.c ****         writeRamBuffer[CY_EM_EEPROM_HEADER_CHECKSUM_OFFSET_U32] = (uint32)
1386:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2688              		.loc 1 1386 0 discriminator 3
 2689 006a 0C23     		movs	r3, #12
 2690 006c FB18     		adds	r3, r7, r3
 2691 006e 8033     		adds	r3, r3, #128
 2692 0070 8021     		movs	r1, #128
 2693 0072 1800     		movs	r0, r3
 2694 0074 FFF7FEFF 		bl	CalcChecksum
 2695 0078 0300     		movs	r3, r0
1385:Generated_Source\PSoC4/cy_em_eeprom.c ****                     CalcChecksum((uint8 *) &writeRamBuffer[CY_EM_EEPROM_EEPROM_DATA_OFFSET_U32],
 2696              		.loc 1 1385 0 discriminator 3
 2697 007a 1A00     		movs	r2, r3
 2698 007c 2A4B     		ldr	r3, .L138
 2699 007e 9021     		movs	r1, #144
 2700 0080 4900     		lsls	r1, r1, #1
 2701 0082 8C46     		mov	ip, r1
 2702 0084 BC44     		add	ip, ip, r7
 2703 0086 6344     		add	r3, r3, ip
 2704 0088 DA67     		str	r2, [r3, #124]
1387:Generated_Source\PSoC4/cy_em_eeprom.c ****                                               CY_EM_EEPROM_EEPROM_DATA_LEN);
1388:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1389:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1390:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(wrAddr, writeRamBuffer, context);
 2705              		.loc 1 1390 0 discriminator 3
 2706 008a BB68     		ldr	r3, [r7, #8]
 2707 008c 1822     		movs	r2, #24
 2708 008e FF32     		adds	r2, r2, #255
 2709 0090 BC18     		adds	r4, r7, r2
 2710 0092 7A68     		ldr	r2, [r7, #4]
 2711 0094 0C21     		movs	r1, #12
 2712 0096 7918     		adds	r1, r7, r1
 2713 0098 1800     		movs	r0, r3
 2714 009a FFF7FEFF 		bl	WriteRow
 2715 009e 0300     		movs	r3, r0
 2716 00a0 2370     		strb	r3, [r4]
1391:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1392:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Update the row address to point to the relevant row in the redundant 
1393:Generated_Source\PSoC4/cy_em_eeprom.c ****         * EEPROM's copy.
1394:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1395:Generated_Source\PSoC4/cy_em_eeprom.c ****         tmpRowAddr = (wrAddr - context->userFlashStartAddr) + context->wlEndAddr;
 2717              		.loc 1 1395 0 discriminator 3
 2718 00a2 BA68     		ldr	r2, [r7, #8]
 2719 00a4 7B68     		ldr	r3, [r7, #4]
 2720 00a6 9B69     		ldr	r3, [r3, #24]
 2721 00a8 D21A     		subs	r2, r2, r3
 2722 00aa 7B68     		ldr	r3, [r7, #4]
 2723 00ac 1B68     		ldr	r3, [r3]
 2724 00ae D318     		adds	r3, r2, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 74


 2725 00b0 8822     		movs	r2, #136
 2726 00b2 5200     		lsls	r2, r2, #1
 2727 00b4 BA18     		adds	r2, r7, r2
 2728 00b6 1360     		str	r3, [r2]
1396:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1397:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Write the data to the specified flash row */
1398:Generated_Source\PSoC4/cy_em_eeprom.c ****         ret = WriteRow(tmpRowAddr, writeRamBuffer, context);
 2729              		.loc 1 1398 0 discriminator 3
 2730 00b8 1823     		movs	r3, #24
 2731 00ba FF33     		adds	r3, r3, #255
 2732 00bc FC18     		adds	r4, r7, r3
 2733 00be 7A68     		ldr	r2, [r7, #4]
 2734 00c0 0C23     		movs	r3, #12
 2735 00c2 F918     		adds	r1, r7, r3
 2736 00c4 8823     		movs	r3, #136
 2737 00c6 5B00     		lsls	r3, r3, #1
 2738 00c8 FB18     		adds	r3, r7, r3
 2739 00ca 1B68     		ldr	r3, [r3]
 2740 00cc 1800     		movs	r0, r3
 2741 00ce FFF7FEFF 		bl	WriteRow
 2742 00d2 0300     		movs	r3, r0
 2743 00d4 2370     		strb	r3, [r4]
1399:Generated_Source\PSoC4/cy_em_eeprom.c **** 
1400:Generated_Source\PSoC4/cy_em_eeprom.c ****         /* Get the address of the next row to be written. 
1401:Generated_Source\PSoC4/cy_em_eeprom.c ****         * "rdAddr" is not used in this function but provided to prevent NULL 
1402:Generated_Source\PSoC4/cy_em_eeprom.c ****         * pointer exception in GetNextRowToWrite().
1403:Generated_Source\PSoC4/cy_em_eeprom.c ****         */
1404:Generated_Source\PSoC4/cy_em_eeprom.c ****         GetNextRowToWrite(seqNum, &wrAddr, &rdAddr, context);
 2744              		.loc 1 1404 0 discriminator 3
 2745 00d6 7B68     		ldr	r3, [r7, #4]
 2746 00d8 8622     		movs	r2, #134
 2747 00da 5200     		lsls	r2, r2, #1
 2748 00dc BA18     		adds	r2, r7, r2
 2749 00de 0821     		movs	r1, #8
 2750 00e0 7918     		adds	r1, r7, r1
 2751 00e2 8C20     		movs	r0, #140
 2752 00e4 4000     		lsls	r0, r0, #1
 2753 00e6 3818     		adds	r0, r7, r0
 2754 00e8 0068     		ldr	r0, [r0]
 2755 00ea FFF7FEFF 		bl	GetNextRowToWrite
1375:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 2756              		.loc 1 1375 0 discriminator 3
 2757 00ee 8E23     		movs	r3, #142
 2758 00f0 5B00     		lsls	r3, r3, #1
 2759 00f2 FB18     		adds	r3, r7, r3
 2760 00f4 1B68     		ldr	r3, [r3]
 2761 00f6 0133     		adds	r3, r3, #1
 2762 00f8 8E22     		movs	r2, #142
 2763 00fa 5200     		lsls	r2, r2, #1
 2764 00fc BA18     		adds	r2, r7, r2
 2765 00fe 1360     		str	r3, [r2]
 2766              	.L135:
1375:Generated_Source\PSoC4/cy_em_eeprom.c ****     {
 2767              		.loc 1 1375 0 is_stmt 0 discriminator 1
 2768 0100 7B68     		ldr	r3, [r7, #4]
 2769 0102 5A68     		ldr	r2, [r3, #4]
 2770 0104 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 75


 2771 0106 1B69     		ldr	r3, [r3, #16]
 2772 0108 5A43     		muls	r2, r3
 2773 010a 8E23     		movs	r3, #142
 2774 010c 5B00     		lsls	r3, r3, #1
 2775 010e FB18     		adds	r3, r7, r3
 2776 0110 1B68     		ldr	r3, [r3]
 2777 0112 9A42     		cmp	r2, r3
 2778 0114 8CD8     		bhi	.L136
1405:Generated_Source\PSoC4/cy_em_eeprom.c ****     }
1406:Generated_Source\PSoC4/cy_em_eeprom.c ****     
1407:Generated_Source\PSoC4/cy_em_eeprom.c ****     return(ret);
 2779              		.loc 1 1407 0 is_stmt 1
 2780 0116 1823     		movs	r3, #24
 2781 0118 FF33     		adds	r3, r3, #255
 2782 011a FB18     		adds	r3, r7, r3
 2783 011c 1B78     		ldrb	r3, [r3]
1408:Generated_Source\PSoC4/cy_em_eeprom.c **** }
 2784              		.loc 1 1408 0
 2785 011e 1800     		movs	r0, r3
 2786 0120 BD46     		mov	sp, r7
 2787 0122 49B0     		add	sp, sp, #292
 2788              		@ sp needed
 2789 0124 90BD     		pop	{r4, r7, pc}
 2790              	.L139:
 2791 0126 C046     		.align	2
 2792              	.L138:
 2793 0128 ECFEFFFF 		.word	-276
 2794              		.cfi_endproc
 2795              	.LFE16:
 2796              		.size	FillChecksum, .-FillChecksum
 2797              		.text
 2798              	.Letext0:
 2799              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2800              		.file 3 "Generated_Source\\PSoC4\\cy_em_eeprom.h"
 2801              		.section	.debug_info,"",%progbits
 2802              	.Ldebug_info0:
 2803 0000 640A0000 		.4byte	0xa64
 2804 0004 0400     		.2byte	0x4
 2805 0006 00000000 		.4byte	.Ldebug_abbrev0
 2806 000a 04       		.byte	0x4
 2807 000b 01       		.uleb128 0x1
 2808 000c 3D030000 		.4byte	.LASF101
 2809 0010 0C       		.byte	0xc
 2810 0011 C3000000 		.4byte	.LASF102
 2811 0015 79020000 		.4byte	.LASF103
 2812 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2813 001d 00000000 		.4byte	0
 2814 0021 00000000 		.4byte	.Ldebug_line0
 2815 0025 02       		.uleb128 0x2
 2816 0026 01       		.byte	0x1
 2817 0027 06       		.byte	0x6
 2818 0028 9B000000 		.4byte	.LASF0
 2819 002c 02       		.uleb128 0x2
 2820 002d 01       		.byte	0x1
 2821 002e 08       		.byte	0x8
 2822 002f DD040000 		.4byte	.LASF1
 2823 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 76


 2824 0034 02       		.byte	0x2
 2825 0035 05       		.byte	0x5
 2826 0036 F3040000 		.4byte	.LASF2
 2827 003a 02       		.uleb128 0x2
 2828 003b 02       		.byte	0x2
 2829 003c 07       		.byte	0x7
 2830 003d 2C020000 		.4byte	.LASF3
 2831 0041 02       		.uleb128 0x2
 2832 0042 04       		.byte	0x4
 2833 0043 05       		.byte	0x5
 2834 0044 18010000 		.4byte	.LASF4
 2835 0048 02       		.uleb128 0x2
 2836 0049 04       		.byte	0x4
 2837 004a 07       		.byte	0x7
 2838 004b DC010000 		.4byte	.LASF5
 2839 004f 02       		.uleb128 0x2
 2840 0050 08       		.byte	0x8
 2841 0051 05       		.byte	0x5
 2842 0052 8D000000 		.4byte	.LASF6
 2843 0056 02       		.uleb128 0x2
 2844 0057 08       		.byte	0x8
 2845 0058 07       		.byte	0x7
 2846 0059 66000000 		.4byte	.LASF7
 2847 005d 03       		.uleb128 0x3
 2848 005e 04       		.byte	0x4
 2849 005f 05       		.byte	0x5
 2850 0060 696E7400 		.ascii	"int\000"
 2851 0064 02       		.uleb128 0x2
 2852 0065 04       		.byte	0x4
 2853 0066 07       		.byte	0x7
 2854 0067 C6010000 		.4byte	.LASF8
 2855 006b 04       		.uleb128 0x4
 2856 006c 34010000 		.4byte	.LASF9
 2857 0070 02       		.byte	0x2
 2858 0071 D201     		.2byte	0x1d2
 2859 0073 2C000000 		.4byte	0x2c
 2860 0077 04       		.uleb128 0x4
 2861 0078 00000000 		.4byte	.LASF10
 2862 007c 02       		.byte	0x2
 2863 007d D301     		.2byte	0x1d3
 2864 007f 3A000000 		.4byte	0x3a
 2865 0083 04       		.uleb128 0x4
 2866 0084 4E010000 		.4byte	.LASF11
 2867 0088 02       		.byte	0x2
 2868 0089 D401     		.2byte	0x1d4
 2869 008b 48000000 		.4byte	0x48
 2870 008f 02       		.uleb128 0x2
 2871 0090 04       		.byte	0x4
 2872 0091 04       		.byte	0x4
 2873 0092 AF040000 		.4byte	.LASF12
 2874 0096 02       		.uleb128 0x2
 2875 0097 08       		.byte	0x8
 2876 0098 04       		.byte	0x4
 2877 0099 3A010000 		.4byte	.LASF13
 2878 009d 02       		.uleb128 0x2
 2879 009e 01       		.byte	0x1
 2880 009f 08       		.byte	0x8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 77


 2881 00a0 66050000 		.4byte	.LASF14
 2882 00a4 04       		.uleb128 0x4
 2883 00a5 4F060000 		.4byte	.LASF15
 2884 00a9 02       		.byte	0x2
 2885 00aa 7402     		.2byte	0x274
 2886 00ac 48000000 		.4byte	0x48
 2887 00b0 02       		.uleb128 0x2
 2888 00b1 08       		.byte	0x8
 2889 00b2 04       		.byte	0x4
 2890 00b3 26040000 		.4byte	.LASF16
 2891 00b7 02       		.uleb128 0x2
 2892 00b8 04       		.byte	0x4
 2893 00b9 07       		.byte	0x7
 2894 00ba 1D040000 		.4byte	.LASF17
 2895 00be 05       		.uleb128 0x5
 2896 00bf 04       		.byte	0x4
 2897 00c0 06       		.uleb128 0x6
 2898 00c1 10       		.byte	0x10
 2899 00c2 03       		.byte	0x3
 2900 00c3 FB       		.byte	0xfb
 2901 00c4 09010000 		.4byte	0x109
 2902 00c8 07       		.uleb128 0x7
 2903 00c9 82000000 		.4byte	.LASF18
 2904 00cd 03       		.byte	0x3
 2905 00ce FE       		.byte	0xfe
 2906 00cf 83000000 		.4byte	0x83
 2907 00d3 00       		.byte	0
 2908 00d4 08       		.uleb128 0x8
 2909 00d5 E3050000 		.4byte	.LASF19
 2910 00d9 03       		.byte	0x3
 2911 00da 0301     		.2byte	0x103
 2912 00dc 83000000 		.4byte	0x83
 2913 00e0 04       		.byte	0x4
 2914 00e1 08       		.uleb128 0x8
 2915 00e2 AF010000 		.4byte	.LASF20
 2916 00e6 03       		.byte	0x3
 2917 00e7 0601     		.2byte	0x106
 2918 00e9 6B000000 		.4byte	0x6b
 2919 00ed 08       		.byte	0x8
 2920 00ee 08       		.uleb128 0x8
 2921 00ef 2F060000 		.4byte	.LASF21
 2922 00f3 03       		.byte	0x3
 2923 00f4 0B01     		.2byte	0x10b
 2924 00f6 6B000000 		.4byte	0x6b
 2925 00fa 09       		.byte	0x9
 2926 00fb 08       		.uleb128 0x8
 2927 00fc 21010000 		.4byte	.LASF22
 2928 0100 03       		.byte	0x3
 2929 0101 0E01     		.2byte	0x10e
 2930 0103 83000000 		.4byte	0x83
 2931 0107 0C       		.byte	0xc
 2932 0108 00       		.byte	0
 2933 0109 04       		.uleb128 0x4
 2934 010a C5050000 		.4byte	.LASF23
 2935 010e 03       		.byte	0x3
 2936 010f 0F01     		.2byte	0x10f
 2937 0111 C0000000 		.4byte	0xc0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 78


 2938 0115 09       		.uleb128 0x9
 2939 0116 1C       		.byte	0x1c
 2940 0117 03       		.byte	0x3
 2941 0118 1601     		.2byte	0x116
 2942 011a 87010000 		.4byte	0x187
 2943 011e 08       		.uleb128 0x8
 2944 011f D3040000 		.4byte	.LASF24
 2945 0123 03       		.byte	0x3
 2946 0124 1B01     		.2byte	0x11b
 2947 0126 83000000 		.4byte	0x83
 2948 012a 00       		.byte	0
 2949 012b 08       		.uleb128 0x8
 2950 012c 4F000000 		.4byte	.LASF25
 2951 0130 03       		.byte	0x3
 2952 0131 2001     		.2byte	0x120
 2953 0133 83000000 		.4byte	0x83
 2954 0137 04       		.byte	0x4
 2955 0138 08       		.uleb128 0x8
 2956 0139 9F050000 		.4byte	.LASF26
 2957 013d 03       		.byte	0x3
 2958 013e 2301     		.2byte	0x123
 2959 0140 83000000 		.4byte	0x83
 2960 0144 08       		.byte	0x8
 2961 0145 08       		.uleb128 0x8
 2962 0146 82000000 		.4byte	.LASF18
 2963 014a 03       		.byte	0x3
 2964 014b 2601     		.2byte	0x126
 2965 014d 83000000 		.4byte	0x83
 2966 0151 0C       		.byte	0xc
 2967 0152 08       		.uleb128 0x8
 2968 0153 E3050000 		.4byte	.LASF19
 2969 0157 03       		.byte	0x3
 2970 0158 2B01     		.2byte	0x12b
 2971 015a 83000000 		.4byte	0x83
 2972 015e 10       		.byte	0x10
 2973 015f 08       		.uleb128 0x8
 2974 0160 AF010000 		.4byte	.LASF20
 2975 0164 03       		.byte	0x3
 2976 0165 2E01     		.2byte	0x12e
 2977 0167 6B000000 		.4byte	0x6b
 2978 016b 14       		.byte	0x14
 2979 016c 08       		.uleb128 0x8
 2980 016d 2F060000 		.4byte	.LASF21
 2981 0171 03       		.byte	0x3
 2982 0172 3301     		.2byte	0x133
 2983 0174 6B000000 		.4byte	0x6b
 2984 0178 15       		.byte	0x15
 2985 0179 08       		.uleb128 0x8
 2986 017a 21010000 		.4byte	.LASF22
 2987 017e 03       		.byte	0x3
 2988 017f 3601     		.2byte	0x136
 2989 0181 83000000 		.4byte	0x83
 2990 0185 18       		.byte	0x18
 2991 0186 00       		.byte	0
 2992 0187 04       		.uleb128 0x4
 2993 0188 5F040000 		.4byte	.LASF27
 2994 018c 03       		.byte	0x3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 79


 2995 018d 3701     		.2byte	0x137
 2996 018f 15010000 		.4byte	0x115
 2997 0193 0A       		.uleb128 0xa
 2998 0194 01       		.byte	0x1
 2999 0195 2C000000 		.4byte	0x2c
 3000 0199 03       		.byte	0x3
 3001 019a 5401     		.2byte	0x154
 3002 019c BF010000 		.4byte	0x1bf
 3003 01a0 0B       		.uleb128 0xb
 3004 01a1 1A060000 		.4byte	.LASF28
 3005 01a5 00       		.byte	0
 3006 01a6 0B       		.uleb128 0xb
 3007 01a7 EC030000 		.4byte	.LASF29
 3008 01ab 01       		.byte	0x1
 3009 01ac 0B       		.uleb128 0xb
 3010 01ad 03040000 		.4byte	.LASF30
 3011 01b1 02       		.byte	0x2
 3012 01b2 0B       		.uleb128 0xb
 3013 01b3 BD040000 		.4byte	.LASF31
 3014 01b7 03       		.byte	0x3
 3015 01b8 0B       		.uleb128 0xb
 3016 01b9 E9000000 		.4byte	.LASF32
 3017 01bd 04       		.byte	0x4
 3018 01be 00       		.byte	0
 3019 01bf 04       		.uleb128 0x4
 3020 01c0 1A000000 		.4byte	.LASF33
 3021 01c4 03       		.byte	0x3
 3022 01c5 5A01     		.2byte	0x15a
 3023 01c7 93010000 		.4byte	0x193
 3024 01cb 0C       		.uleb128 0xc
 3025 01cc 2C050000 		.4byte	.LASF36
 3026 01d0 01       		.byte	0x1
 3027 01d1 5F       		.byte	0x5f
 3028 01d2 BF010000 		.4byte	0x1bf
 3029 01d6 00000000 		.4byte	.LFB2
 3030 01da F6000000 		.4byte	.LFE2-.LFB2
 3031 01de 01       		.uleb128 0x1
 3032 01df 9C       		.byte	0x9c
 3033 01e0 0F020000 		.4byte	0x20f
 3034 01e4 0D       		.uleb128 0xd
 3035 01e5 6B050000 		.4byte	.LASF34
 3036 01e9 01       		.byte	0x1
 3037 01ea 5F       		.byte	0x5f
 3038 01eb 0F020000 		.4byte	0x20f
 3039 01ef 02       		.uleb128 0x2
 3040 01f0 91       		.byte	0x91
 3041 01f1 64       		.sleb128 -28
 3042 01f2 0D       		.uleb128 0xd
 3043 01f3 97050000 		.4byte	.LASF35
 3044 01f7 01       		.byte	0x1
 3045 01f8 5F       		.byte	0x5f
 3046 01f9 15020000 		.4byte	0x215
 3047 01fd 02       		.uleb128 0x2
 3048 01fe 91       		.byte	0x91
 3049 01ff 60       		.sleb128 -32
 3050 0200 0E       		.uleb128 0xe
 3051 0201 72657400 		.ascii	"ret\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 80


 3052 0205 01       		.byte	0x1
 3053 0206 61       		.byte	0x61
 3054 0207 BF010000 		.4byte	0x1bf
 3055 020b 02       		.uleb128 0x2
 3056 020c 91       		.byte	0x91
 3057 020d 6F       		.sleb128 -17
 3058 020e 00       		.byte	0
 3059 020f 0F       		.uleb128 0xf
 3060 0210 04       		.byte	0x4
 3061 0211 09010000 		.4byte	0x109
 3062 0215 0F       		.uleb128 0xf
 3063 0216 04       		.byte	0x4
 3064 0217 87010000 		.4byte	0x187
 3065 021b 0C       		.uleb128 0xc
 3066 021c FB010000 		.4byte	.LASF37
 3067 0220 01       		.byte	0x1
 3068 0221 A9       		.byte	0xa9
 3069 0222 BF010000 		.4byte	0x1bf
 3070 0226 00000000 		.4byte	.LFB3
 3071 022a 2A030000 		.4byte	.LFE3-.LFB3
 3072 022e 01       		.uleb128 0x1
 3073 022f 9C       		.byte	0x9c
 3074 0230 BF030000 		.4byte	0x3bf
 3075 0234 0D       		.uleb128 0xd
 3076 0235 7D000000 		.4byte	.LASF38
 3077 0239 01       		.byte	0x1
 3078 023a A9       		.byte	0xa9
 3079 023b 83000000 		.4byte	0x83
 3080 023f 03       		.uleb128 0x3
 3081 0240 91       		.byte	0x91
 3082 0241 9C7F     		.sleb128 -100
 3083 0243 0D       		.uleb128 0xd
 3084 0244 6E020000 		.4byte	.LASF39
 3085 0248 01       		.byte	0x1
 3086 0249 AA       		.byte	0xaa
 3087 024a BE000000 		.4byte	0xbe
 3088 024e 03       		.uleb128 0x3
 3089 024f 91       		.byte	0x91
 3090 0250 987F     		.sleb128 -104
 3091 0252 0D       		.uleb128 0xd
 3092 0253 27020000 		.4byte	.LASF40
 3093 0257 01       		.byte	0x1
 3094 0258 AB       		.byte	0xab
 3095 0259 83000000 		.4byte	0x83
 3096 025d 03       		.uleb128 0x3
 3097 025e 91       		.byte	0x91
 3098 025f 947F     		.sleb128 -108
 3099 0261 0D       		.uleb128 0xd
 3100 0262 97050000 		.4byte	.LASF35
 3101 0266 01       		.byte	0x1
 3102 0267 AC       		.byte	0xac
 3103 0268 15020000 		.4byte	0x215
 3104 026c 03       		.uleb128 0x3
 3105 026d 91       		.byte	0x91
 3106 026e 907F     		.sleb128 -112
 3107 0270 0E       		.uleb128 0xe
 3108 0271 72657400 		.ascii	"ret\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 81


 3109 0275 01       		.byte	0x1
 3110 0276 AE       		.byte	0xae
 3111 0277 BF010000 		.4byte	0x1bf
 3112 027b 02       		.uleb128 0x2
 3113 027c 91       		.byte	0x91
 3114 027d 6F       		.sleb128 -17
 3115 027e 0E       		.uleb128 0xe
 3116 027f 6900     		.ascii	"i\000"
 3117 0281 01       		.byte	0x1
 3118 0282 AF       		.byte	0xaf
 3119 0283 83000000 		.4byte	0x83
 3120 0287 02       		.uleb128 0x2
 3121 0288 91       		.byte	0x91
 3122 0289 68       		.sleb128 -24
 3123 028a 10       		.uleb128 0x10
 3124 028b 72050000 		.4byte	.LASF41
 3125 028f 01       		.byte	0x1
 3126 0290 B0       		.byte	0xb0
 3127 0291 83000000 		.4byte	0x83
 3128 0295 02       		.uleb128 0x2
 3129 0296 91       		.byte	0x91
 3130 0297 64       		.sleb128 -28
 3131 0298 10       		.uleb128 0x10
 3132 0299 CB030000 		.4byte	.LASF42
 3133 029d 01       		.byte	0x1
 3134 029e B1       		.byte	0xb1
 3135 029f 83000000 		.4byte	0x83
 3136 02a3 03       		.uleb128 0x3
 3137 02a4 91       		.byte	0x91
 3138 02a5 BC7F     		.sleb128 -68
 3139 02a7 10       		.uleb128 0x10
 3140 02a8 B8050000 		.4byte	.LASF43
 3141 02ac 01       		.byte	0x1
 3142 02ad B2       		.byte	0xb2
 3143 02ae 83000000 		.4byte	0x83
 3144 02b2 03       		.uleb128 0x3
 3145 02b3 91       		.byte	0x91
 3146 02b4 B07F     		.sleb128 -80
 3147 02b6 10       		.uleb128 0x10
 3148 02b7 30030000 		.4byte	.LASF44
 3149 02bb 01       		.byte	0x1
 3150 02bc B3       		.byte	0xb3
 3151 02bd 83000000 		.4byte	0x83
 3152 02c1 02       		.uleb128 0x2
 3153 02c2 91       		.byte	0x91
 3154 02c3 60       		.sleb128 -32
 3155 02c4 10       		.uleb128 0x10
 3156 02c5 55010000 		.4byte	.LASF45
 3157 02c9 01       		.byte	0x1
 3158 02ca B4       		.byte	0xb4
 3159 02cb 83000000 		.4byte	0x83
 3160 02cf 03       		.uleb128 0x3
 3161 02d0 91       		.byte	0x91
 3162 02d1 B87F     		.sleb128 -72
 3163 02d3 10       		.uleb128 0x10
 3164 02d4 3D060000 		.4byte	.LASF46
 3165 02d8 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 82


 3166 02d9 B5       		.byte	0xb5
 3167 02da 83000000 		.4byte	0x83
 3168 02de 02       		.uleb128 0x2
 3169 02df 91       		.byte	0x91
 3170 02e0 5C       		.sleb128 -36
 3171 02e1 10       		.uleb128 0x10
 3172 02e2 16050000 		.4byte	.LASF47
 3173 02e6 01       		.byte	0x1
 3174 02e7 B6       		.byte	0xb6
 3175 02e8 83000000 		.4byte	0x83
 3176 02ec 02       		.uleb128 0x2
 3177 02ed 91       		.byte	0x91
 3178 02ee 58       		.sleb128 -40
 3179 02ef 10       		.uleb128 0x10
 3180 02f0 89060000 		.4byte	.LASF48
 3181 02f4 01       		.byte	0x1
 3182 02f5 B7       		.byte	0xb7
 3183 02f6 83000000 		.4byte	0x83
 3184 02fa 02       		.uleb128 0x2
 3185 02fb 91       		.byte	0x91
 3186 02fc 54       		.sleb128 -44
 3187 02fd 11       		.uleb128 0x11
 3188 02fe 42000000 		.4byte	.LBB2
 3189 0302 DA020000 		.4byte	.LBE2-.LBB2
 3190 0306 10       		.uleb128 0x10
 3191 0307 F6050000 		.4byte	.LASF49
 3192 030b 01       		.byte	0x1
 3193 030c BC       		.byte	0xbc
 3194 030d 83000000 		.4byte	0x83
 3195 0311 02       		.uleb128 0x2
 3196 0312 91       		.byte	0x91
 3197 0313 50       		.sleb128 -48
 3198 0314 10       		.uleb128 0x10
 3199 0315 DC050000 		.4byte	.LASF50
 3200 0319 01       		.byte	0x1
 3201 031a BD       		.byte	0xbd
 3202 031b 83000000 		.4byte	0x83
 3203 031f 02       		.uleb128 0x2
 3204 0320 91       		.byte	0x91
 3205 0321 4C       		.sleb128 -52
 3206 0322 10       		.uleb128 0x10
 3207 0323 58040000 		.4byte	.LASF51
 3208 0327 01       		.byte	0x1
 3209 0328 BF       		.byte	0xbf
 3210 0329 83000000 		.4byte	0x83
 3211 032d 02       		.uleb128 0x2
 3212 032e 91       		.byte	0x91
 3213 032f 44       		.sleb128 -60
 3214 0330 10       		.uleb128 0x10
 3215 0331 78010000 		.4byte	.LASF52
 3216 0335 01       		.byte	0x1
 3217 0336 C0       		.byte	0xc0
 3218 0337 83000000 		.4byte	0x83
 3219 033b 02       		.uleb128 0x2
 3220 033c 91       		.byte	0x91
 3221 033d 48       		.sleb128 -56
 3222 033e 10       		.uleb128 0x10
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 83


 3223 033f 6D060000 		.4byte	.LASF53
 3224 0343 01       		.byte	0x1
 3225 0344 C5       		.byte	0xc5
 3226 0345 83000000 		.4byte	0x83
 3227 0349 02       		.uleb128 0x2
 3228 034a 91       		.byte	0x91
 3229 034b 40       		.sleb128 -64
 3230 034c 12       		.uleb128 0x12
 3231 034d EC000000 		.4byte	.LBB3
 3232 0351 26000000 		.4byte	.LBE3-.LBB3
 3233 0355 69030000 		.4byte	0x369
 3234 0359 10       		.uleb128 0x10
 3235 035a 8F010000 		.4byte	.LASF54
 3236 035e 01       		.byte	0x1
 3237 035f E2       		.byte	0xe2
 3238 0360 83000000 		.4byte	0x83
 3239 0364 03       		.uleb128 0x3
 3240 0365 91       		.byte	0x91
 3241 0366 B47F     		.sleb128 -76
 3242 0368 00       		.byte	0
 3243 0369 11       		.uleb128 0x11
 3244 036a 3A020000 		.4byte	.LBB4
 3245 036e D4000000 		.4byte	.LBE4-.LBB4
 3246 0372 13       		.uleb128 0x13
 3247 0373 81050000 		.4byte	.LASF55
 3248 0377 01       		.byte	0x1
 3249 0378 3B01     		.2byte	0x13b
 3250 037a 83000000 		.4byte	0x83
 3251 037e 03       		.uleb128 0x3
 3252 037f 91       		.byte	0x91
 3253 0380 AC7F     		.sleb128 -84
 3254 0382 13       		.uleb128 0x13
 3255 0383 B5040000 		.4byte	.LASF56
 3256 0387 01       		.byte	0x1
 3257 0388 3C01     		.2byte	0x13c
 3258 038a 83000000 		.4byte	0x83
 3259 038e 03       		.uleb128 0x3
 3260 038f 91       		.byte	0x91
 3261 0390 A87F     		.sleb128 -88
 3262 0392 11       		.uleb128 0x11
 3263 0393 78020000 		.4byte	.LBB5
 3264 0397 96000000 		.4byte	.LBE5-.LBB5
 3265 039b 13       		.uleb128 0x13
 3266 039c 1D020000 		.4byte	.LASF57
 3267 03a0 01       		.byte	0x1
 3268 03a1 4101     		.2byte	0x141
 3269 03a3 83000000 		.4byte	0x83
 3270 03a7 03       		.uleb128 0x3
 3271 03a8 91       		.byte	0x91
 3272 03a9 A47F     		.sleb128 -92
 3273 03ab 13       		.uleb128 0x13
 3274 03ac FD050000 		.4byte	.LASF58
 3275 03b0 01       		.byte	0x1
 3276 03b1 4201     		.2byte	0x142
 3277 03b3 83000000 		.4byte	0x83
 3278 03b7 03       		.uleb128 0x3
 3279 03b8 91       		.byte	0x91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 84


 3280 03b9 A07F     		.sleb128 -96
 3281 03bb 00       		.byte	0
 3282 03bc 00       		.byte	0
 3283 03bd 00       		.byte	0
 3284 03be 00       		.byte	0
 3285 03bf 14       		.uleb128 0x14
 3286 03c0 45040000 		.4byte	.LASF59
 3287 03c4 01       		.byte	0x1
 3288 03c5 9B01     		.2byte	0x19b
 3289 03c7 BF010000 		.4byte	0x1bf
 3290 03cb 00000000 		.4byte	.LFB4
 3291 03cf D8030000 		.4byte	.LFE4-.LFB4
 3292 03d3 01       		.uleb128 0x1
 3293 03d4 9C       		.byte	0x9c
 3294 03d5 37050000 		.4byte	0x537
 3295 03d9 15       		.uleb128 0x15
 3296 03da 7D000000 		.4byte	.LASF38
 3297 03de 01       		.byte	0x1
 3298 03df 9B01     		.2byte	0x19b
 3299 03e1 83000000 		.4byte	0x83
 3300 03e5 03       		.uleb128 0x3
 3301 03e6 91       		.byte	0x91
 3302 03e7 AC7D     		.sleb128 -340
 3303 03e9 15       		.uleb128 0x15
 3304 03ea 6E020000 		.4byte	.LASF39
 3305 03ee 01       		.byte	0x1
 3306 03ef 9C01     		.2byte	0x19c
 3307 03f1 BE000000 		.4byte	0xbe
 3308 03f5 03       		.uleb128 0x3
 3309 03f6 91       		.byte	0x91
 3310 03f7 A87D     		.sleb128 -344
 3311 03f9 15       		.uleb128 0x15
 3312 03fa 27020000 		.4byte	.LASF40
 3313 03fe 01       		.byte	0x1
 3314 03ff 9D01     		.2byte	0x19d
 3315 0401 83000000 		.4byte	0x83
 3316 0405 03       		.uleb128 0x3
 3317 0406 91       		.byte	0x91
 3318 0407 A47D     		.sleb128 -348
 3319 0409 15       		.uleb128 0x15
 3320 040a 97050000 		.4byte	.LASF35
 3321 040e 01       		.byte	0x1
 3322 040f 9E01     		.2byte	0x19e
 3323 0411 15020000 		.4byte	0x215
 3324 0415 03       		.uleb128 0x3
 3325 0416 91       		.byte	0x91
 3326 0417 A07D     		.sleb128 -352
 3327 0419 16       		.uleb128 0x16
 3328 041a 72657400 		.ascii	"ret\000"
 3329 041e 01       		.byte	0x1
 3330 041f A001     		.2byte	0x1a0
 3331 0421 BF010000 		.4byte	0x1bf
 3332 0425 02       		.uleb128 0x2
 3333 0426 91       		.byte	0x91
 3334 0427 6F       		.sleb128 -17
 3335 0428 16       		.uleb128 0x16
 3336 0429 6900     		.ascii	"i\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 85


 3337 042b 01       		.byte	0x1
 3338 042c A101     		.2byte	0x1a1
 3339 042e 83000000 		.4byte	0x83
 3340 0432 02       		.uleb128 0x2
 3341 0433 91       		.byte	0x91
 3342 0434 68       		.sleb128 -24
 3343 0435 13       		.uleb128 0x13
 3344 0436 A9040000 		.4byte	.LASF60
 3345 043a 01       		.byte	0x1
 3346 043b A201     		.2byte	0x1a2
 3347 043d 83000000 		.4byte	0x83
 3348 0441 02       		.uleb128 0x2
 3349 0442 91       		.byte	0x91
 3350 0443 64       		.sleb128 -28
 3351 0444 13       		.uleb128 0x13
 3352 0445 3F020000 		.4byte	.LASF61
 3353 0449 01       		.byte	0x1
 3354 044a A301     		.2byte	0x1a3
 3355 044c 83000000 		.4byte	0x83
 3356 0450 02       		.uleb128 0x2
 3357 0451 91       		.byte	0x91
 3358 0452 48       		.sleb128 -56
 3359 0453 13       		.uleb128 0x13
 3360 0454 3E050000 		.4byte	.LASF62
 3361 0458 01       		.byte	0x1
 3362 0459 A401     		.2byte	0x1a4
 3363 045b 37050000 		.4byte	0x537
 3364 045f 03       		.uleb128 0x3
 3365 0460 91       		.byte	0x91
 3366 0461 C47D     		.sleb128 -316
 3367 0463 13       		.uleb128 0x13
 3368 0464 81050000 		.4byte	.LASF55
 3369 0468 01       		.byte	0x1
 3370 0469 A501     		.2byte	0x1a5
 3371 046b 83000000 		.4byte	0x83
 3372 046f 03       		.uleb128 0x3
 3373 0470 91       		.byte	0x91
 3374 0471 C07D     		.sleb128 -320
 3375 0473 13       		.uleb128 0x13
 3376 0474 B5040000 		.4byte	.LASF56
 3377 0478 01       		.byte	0x1
 3378 0479 A601     		.2byte	0x1a6
 3379 047b 83000000 		.4byte	0x83
 3380 047f 03       		.uleb128 0x3
 3381 0480 91       		.byte	0x91
 3382 0481 BC7D     		.sleb128 -324
 3383 0483 13       		.uleb128 0x13
 3384 0484 AD050000 		.4byte	.LASF63
 3385 0488 01       		.byte	0x1
 3386 0489 A701     		.2byte	0x1a7
 3387 048b 83000000 		.4byte	0x83
 3388 048f 02       		.uleb128 0x2
 3389 0490 91       		.byte	0x91
 3390 0491 60       		.sleb128 -32
 3391 0492 13       		.uleb128 0x13
 3392 0493 79060000 		.4byte	.LASF64
 3393 0497 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 86


 3394 0498 A801     		.2byte	0x1a8
 3395 049a 83000000 		.4byte	0x83
 3396 049e 03       		.uleb128 0x3
 3397 049f 91       		.byte	0x91
 3398 04a0 B87D     		.sleb128 -328
 3399 04a2 13       		.uleb128 0x13
 3400 04a3 5C020000 		.4byte	.LASF65
 3401 04a7 01       		.byte	0x1
 3402 04a8 A901     		.2byte	0x1a9
 3403 04aa 83000000 		.4byte	0x83
 3404 04ae 03       		.uleb128 0x3
 3405 04af 91       		.byte	0x91
 3406 04b0 B47D     		.sleb128 -332
 3407 04b2 13       		.uleb128 0x13
 3408 04b3 12000000 		.4byte	.LASF66
 3409 04b7 01       		.byte	0x1
 3410 04b8 AA01     		.2byte	0x1aa
 3411 04ba BE000000 		.4byte	0xbe
 3412 04be 02       		.uleb128 0x2
 3413 04bf 91       		.byte	0x91
 3414 04c0 4C       		.sleb128 -52
 3415 04c1 13       		.uleb128 0x13
 3416 04c2 89060000 		.4byte	.LASF48
 3417 04c6 01       		.byte	0x1
 3418 04c7 AB01     		.2byte	0x1ab
 3419 04c9 83000000 		.4byte	0x83
 3420 04cd 02       		.uleb128 0x2
 3421 04ce 91       		.byte	0x91
 3422 04cf 5C       		.sleb128 -36
 3423 04d0 11       		.uleb128 0x11
 3424 04d1 50000000 		.4byte	.LBB6
 3425 04d5 72030000 		.4byte	.LBE6-.LBB6
 3426 04d9 13       		.uleb128 0x13
 3427 04da 5C000000 		.4byte	.LASF67
 3428 04de 01       		.byte	0x1
 3429 04df B001     		.2byte	0x1b0
 3430 04e1 83000000 		.4byte	0x83
 3431 04e5 02       		.uleb128 0x2
 3432 04e6 91       		.byte	0x91
 3433 04e7 54       		.sleb128 -44
 3434 04e8 13       		.uleb128 0x13
 3435 04e9 65010000 		.4byte	.LASF68
 3436 04ed 01       		.byte	0x1
 3437 04ee B101     		.2byte	0x1b1
 3438 04f0 83000000 		.4byte	0x83
 3439 04f4 03       		.uleb128 0x3
 3440 04f5 91       		.byte	0x91
 3441 04f6 B07D     		.sleb128 -336
 3442 04f8 17       		.uleb128 0x17
 3443 04f9 00000000 		.4byte	.Ldebug_ranges0+0
 3444 04fd 13       		.uleb128 0x13
 3445 04fe 08050000 		.4byte	.LASF69
 3446 0502 01       		.byte	0x1
 3447 0503 B501     		.2byte	0x1b5
 3448 0505 83000000 		.4byte	0x83
 3449 0509 02       		.uleb128 0x2
 3450 050a 91       		.byte	0x91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 87


 3451 050b 58       		.sleb128 -40
 3452 050c 13       		.uleb128 0x13
 3453 050d 58040000 		.4byte	.LASF51
 3454 0511 01       		.byte	0x1
 3455 0512 B701     		.2byte	0x1b7
 3456 0514 83000000 		.4byte	0x83
 3457 0518 02       		.uleb128 0x2
 3458 0519 91       		.byte	0x91
 3459 051a 50       		.sleb128 -48
 3460 051b 11       		.uleb128 0x11
 3461 051c 88020000 		.4byte	.LBB8
 3462 0520 42000000 		.4byte	.LBE8-.LBB8
 3463 0524 13       		.uleb128 0x13
 3464 0525 BD010000 		.4byte	.LASF70
 3465 0529 01       		.byte	0x1
 3466 052a 1702     		.2byte	0x217
 3467 052c 83000000 		.4byte	0x83
 3468 0530 02       		.uleb128 0x2
 3469 0531 91       		.byte	0x91
 3470 0532 44       		.sleb128 -60
 3471 0533 00       		.byte	0
 3472 0534 00       		.byte	0
 3473 0535 00       		.byte	0
 3474 0536 00       		.byte	0
 3475 0537 18       		.uleb128 0x18
 3476 0538 83000000 		.4byte	0x83
 3477 053c 47050000 		.4byte	0x547
 3478 0540 19       		.uleb128 0x19
 3479 0541 B7000000 		.4byte	0xb7
 3480 0545 3F       		.byte	0x3f
 3481 0546 00       		.byte	0
 3482 0547 14       		.uleb128 0x14
 3483 0548 32040000 		.4byte	.LASF71
 3484 054c 01       		.byte	0x1
 3485 054d 7502     		.2byte	0x275
 3486 054f BF010000 		.4byte	0x1bf
 3487 0553 00000000 		.4byte	.LFB5
 3488 0557 48010000 		.4byte	.LFE5-.LFB5
 3489 055b 01       		.uleb128 0x1
 3490 055c 9C       		.byte	0x9c
 3491 055d E4050000 		.4byte	0x5e4
 3492 0561 15       		.uleb128 0x15
 3493 0562 97050000 		.4byte	.LASF35
 3494 0566 01       		.byte	0x1
 3495 0567 7502     		.2byte	0x275
 3496 0569 15020000 		.4byte	0x215
 3497 056d 03       		.uleb128 0x3
 3498 056e 91       		.byte	0x91
 3499 056f D47D     		.sleb128 -300
 3500 0571 16       		.uleb128 0x16
 3501 0572 6900     		.ascii	"i\000"
 3502 0574 01       		.byte	0x1
 3503 0575 7702     		.2byte	0x277
 3504 0577 83000000 		.4byte	0x83
 3505 057b 02       		.uleb128 0x2
 3506 057c 91       		.byte	0x91
 3507 057d 6C       		.sleb128 -20
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 88


 3508 057e 13       		.uleb128 0x13
 3509 057f 58040000 		.4byte	.LASF51
 3510 0583 01       		.byte	0x1
 3511 0584 7802     		.2byte	0x278
 3512 0586 83000000 		.4byte	0x83
 3513 058a 02       		.uleb128 0x2
 3514 058b 91       		.byte	0x91
 3515 058c 64       		.sleb128 -28
 3516 058d 13       		.uleb128 0x13
 3517 058e 79060000 		.4byte	.LASF64
 3518 0592 01       		.byte	0x1
 3519 0593 7902     		.2byte	0x279
 3520 0595 83000000 		.4byte	0x83
 3521 0599 02       		.uleb128 0x2
 3522 059a 91       		.byte	0x91
 3523 059b 5C       		.sleb128 -36
 3524 059c 13       		.uleb128 0x13
 3525 059d 5C020000 		.4byte	.LASF65
 3526 05a1 01       		.byte	0x1
 3527 05a2 7A02     		.2byte	0x27a
 3528 05a4 83000000 		.4byte	0x83
 3529 05a8 02       		.uleb128 0x2
 3530 05a9 91       		.byte	0x91
 3531 05aa 58       		.sleb128 -40
 3532 05ab 16       		.uleb128 0x16
 3533 05ac 72657400 		.ascii	"ret\000"
 3534 05b0 01       		.byte	0x1
 3535 05b1 7B02     		.2byte	0x27b
 3536 05b3 BF010000 		.4byte	0x1bf
 3537 05b7 02       		.uleb128 0x2
 3538 05b8 91       		.byte	0x91
 3539 05b9 6B       		.sleb128 -21
 3540 05ba 13       		.uleb128 0x13
 3541 05bb 3E050000 		.4byte	.LASF62
 3542 05bf 01       		.byte	0x1
 3543 05c0 7C02     		.2byte	0x27c
 3544 05c2 37050000 		.4byte	0x537
 3545 05c6 03       		.uleb128 0x3
 3546 05c7 91       		.byte	0x91
 3547 05c8 D87D     		.sleb128 -296
 3548 05ca 11       		.uleb128 0x11
 3549 05cb 56000000 		.4byte	.LBB10
 3550 05cf DE000000 		.4byte	.LBE10-.LBB10
 3551 05d3 13       		.uleb128 0x13
 3552 05d4 5C000000 		.4byte	.LASF67
 3553 05d8 01       		.byte	0x1
 3554 05d9 8902     		.2byte	0x289
 3555 05db 83000000 		.4byte	0x83
 3556 05df 02       		.uleb128 0x2
 3557 05e0 91       		.byte	0x91
 3558 05e1 60       		.sleb128 -32
 3559 05e2 00       		.byte	0
 3560 05e3 00       		.byte	0
 3561 05e4 1A       		.uleb128 0x1a
 3562 05e5 01010000 		.4byte	.LASF72
 3563 05e9 01       		.byte	0x1
 3564 05ea DC02     		.2byte	0x2dc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 89


 3565 05ec 83000000 		.4byte	0x83
 3566 05f0 00000000 		.4byte	.LFB6
 3567 05f4 16000000 		.4byte	.LFE6-.LFB6
 3568 05f8 01       		.uleb128 0x1
 3569 05f9 9C       		.byte	0x9c
 3570 05fa 0E060000 		.4byte	0x60e
 3571 05fe 15       		.uleb128 0x15
 3572 05ff 97050000 		.4byte	.LASF35
 3573 0603 01       		.byte	0x1
 3574 0604 DC02     		.2byte	0x2dc
 3575 0606 15020000 		.4byte	0x215
 3576 060a 02       		.uleb128 0x2
 3577 060b 91       		.byte	0x91
 3578 060c 74       		.sleb128 -12
 3579 060d 00       		.byte	0
 3580 060e 1B       		.uleb128 0x1b
 3581 060f B0000000 		.4byte	.LASF77
 3582 0613 01       		.byte	0x1
 3583 0614 F602     		.2byte	0x2f6
 3584 0616 00000000 		.4byte	.LFB7
 3585 061a 68000000 		.4byte	.LFE7-.LFB7
 3586 061e 01       		.uleb128 0x1
 3587 061f 9C       		.byte	0x9c
 3588 0620 7F060000 		.4byte	0x67f
 3589 0624 15       		.uleb128 0x15
 3590 0625 41010000 		.4byte	.LASF73
 3591 0629 01       		.byte	0x1
 3592 062a F602     		.2byte	0x2f6
 3593 062c 7F060000 		.4byte	0x67f
 3594 0630 02       		.uleb128 0x2
 3595 0631 91       		.byte	0x91
 3596 0632 64       		.sleb128 -28
 3597 0633 15       		.uleb128 0x15
 3598 0634 97050000 		.4byte	.LASF35
 3599 0638 01       		.byte	0x1
 3600 0639 F602     		.2byte	0x2f6
 3601 063b 15020000 		.4byte	0x215
 3602 063f 02       		.uleb128 0x2
 3603 0640 91       		.byte	0x91
 3604 0641 60       		.sleb128 -32
 3605 0642 13       		.uleb128 0x13
 3606 0643 58040000 		.4byte	.LASF51
 3607 0647 01       		.byte	0x1
 3608 0648 F802     		.2byte	0x2f8
 3609 064a 83000000 		.4byte	0x83
 3610 064e 02       		.uleb128 0x2
 3611 064f 91       		.byte	0x91
 3612 0650 68       		.sleb128 -24
 3613 0651 13       		.uleb128 0x13
 3614 0652 FD040000 		.4byte	.LASF74
 3615 0656 01       		.byte	0x1
 3616 0657 F902     		.2byte	0x2f9
 3617 0659 83000000 		.4byte	0x83
 3618 065d 02       		.uleb128 0x2
 3619 065e 91       		.byte	0x91
 3620 065f 74       		.sleb128 -12
 3621 0660 13       		.uleb128 0x13
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 90


 3622 0661 87010000 		.4byte	.LASF75
 3623 0665 01       		.byte	0x1
 3624 0666 FA02     		.2byte	0x2fa
 3625 0668 83000000 		.4byte	0x83
 3626 066c 02       		.uleb128 0x2
 3627 066d 91       		.byte	0x91
 3628 066e 70       		.sleb128 -16
 3629 066f 13       		.uleb128 0x13
 3630 0670 33000000 		.4byte	.LASF76
 3631 0674 01       		.byte	0x1
 3632 0675 FB02     		.2byte	0x2fb
 3633 0677 83000000 		.4byte	0x83
 3634 067b 02       		.uleb128 0x2
 3635 067c 91       		.byte	0x91
 3636 067d 6C       		.sleb128 -20
 3637 067e 00       		.byte	0
 3638 067f 0F       		.uleb128 0xf
 3639 0680 04       		.byte	0x4
 3640 0681 83000000 		.4byte	0x83
 3641 0685 1C       		.uleb128 0x1c
 3642 0686 07060000 		.4byte	.LASF81
 3643 068a 01       		.byte	0x1
 3644 068b 2203     		.2byte	0x322
 3645 068d 83000000 		.4byte	0x83
 3646 0691 00000000 		.4byte	.LFB8
 3647 0695 3E000000 		.4byte	.LFE8-.LFB8
 3648 0699 01       		.uleb128 0x1
 3649 069a 9C       		.byte	0x9c
 3650 069b CD060000 		.4byte	0x6cd
 3651 069f 15       		.uleb128 0x15
 3652 06a0 58040000 		.4byte	.LASF51
 3653 06a4 01       		.byte	0x1
 3654 06a5 2203     		.2byte	0x322
 3655 06a7 83000000 		.4byte	0x83
 3656 06ab 02       		.uleb128 0x2
 3657 06ac 91       		.byte	0x91
 3658 06ad 6C       		.sleb128 -20
 3659 06ae 15       		.uleb128 0x15
 3660 06af 97050000 		.4byte	.LASF35
 3661 06b3 01       		.byte	0x1
 3662 06b4 2203     		.2byte	0x322
 3663 06b6 15020000 		.4byte	0x215
 3664 06ba 02       		.uleb128 0x2
 3665 06bb 91       		.byte	0x91
 3666 06bc 68       		.sleb128 -24
 3667 06bd 13       		.uleb128 0x13
 3668 06be 33000000 		.4byte	.LASF76
 3669 06c2 01       		.byte	0x1
 3670 06c3 2403     		.2byte	0x324
 3671 06c5 83000000 		.4byte	0x83
 3672 06c9 02       		.uleb128 0x2
 3673 06ca 91       		.byte	0x91
 3674 06cb 74       		.sleb128 -12
 3675 06cc 00       		.byte	0
 3676 06cd 1B       		.uleb128 0x1b
 3677 06ce 77040000 		.4byte	.LASF78
 3678 06d2 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 91


 3679 06d3 4F03     		.2byte	0x34f
 3680 06d5 00000000 		.4byte	.LFB9
 3681 06d9 B0000000 		.4byte	.LFE9-.LFB9
 3682 06dd 01       		.uleb128 0x1
 3683 06de 9C       		.byte	0x9c
 3684 06df 20070000 		.4byte	0x720
 3685 06e3 15       		.uleb128 0x15
 3686 06e4 58040000 		.4byte	.LASF51
 3687 06e8 01       		.byte	0x1
 3688 06e9 4F03     		.2byte	0x34f
 3689 06eb 83000000 		.4byte	0x83
 3690 06ef 02       		.uleb128 0x2
 3691 06f0 91       		.byte	0x91
 3692 06f1 74       		.sleb128 -12
 3693 06f2 15       		.uleb128 0x15
 3694 06f3 07000000 		.4byte	.LASF79
 3695 06f7 01       		.byte	0x1
 3696 06f8 5003     		.2byte	0x350
 3697 06fa 7F060000 		.4byte	0x67f
 3698 06fe 02       		.uleb128 0x2
 3699 06ff 91       		.byte	0x91
 3700 0700 70       		.sleb128 -16
 3701 0701 15       		.uleb128 0x15
 3702 0702 51020000 		.4byte	.LASF80
 3703 0706 01       		.byte	0x1
 3704 0707 5103     		.2byte	0x351
 3705 0709 7F060000 		.4byte	0x67f
 3706 070d 02       		.uleb128 0x2
 3707 070e 91       		.byte	0x91
 3708 070f 6C       		.sleb128 -20
 3709 0710 15       		.uleb128 0x15
 3710 0711 97050000 		.4byte	.LASF35
 3711 0715 01       		.byte	0x1
 3712 0716 5203     		.2byte	0x352
 3713 0718 15020000 		.4byte	0x215
 3714 071c 02       		.uleb128 0x2
 3715 071d 91       		.byte	0x91
 3716 071e 68       		.sleb128 -24
 3717 071f 00       		.byte	0
 3718 0720 1C       		.uleb128 0x1c
 3719 0721 58060000 		.4byte	.LASF82
 3720 0725 01       		.byte	0x1
 3721 0726 9B03     		.2byte	0x39b
 3722 0728 6B000000 		.4byte	0x6b
 3723 072c 00000000 		.4byte	.LFB10
 3724 0730 AE000000 		.4byte	.LFE10-.LFB10
 3725 0734 01       		.uleb128 0x1
 3726 0735 9C       		.byte	0x9c
 3727 0736 84070000 		.4byte	0x784
 3728 073a 15       		.uleb128 0x15
 3729 073b 65060000 		.4byte	.LASF83
 3730 073f 01       		.byte	0x1
 3731 0740 9B03     		.2byte	0x39b
 3732 0742 84070000 		.4byte	0x784
 3733 0746 02       		.uleb128 0x2
 3734 0747 91       		.byte	0x91
 3735 0748 6C       		.sleb128 -20
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 92


 3736 0749 1D       		.uleb128 0x1d
 3737 074a 6C656E00 		.ascii	"len\000"
 3738 074e 01       		.byte	0x1
 3739 074f 9B03     		.2byte	0x39b
 3740 0751 83000000 		.4byte	0x83
 3741 0755 02       		.uleb128 0x2
 3742 0756 91       		.byte	0x91
 3743 0757 68       		.sleb128 -24
 3744 0758 16       		.uleb128 0x16
 3745 0759 63726300 		.ascii	"crc\000"
 3746 075d 01       		.byte	0x1
 3747 075e 9D03     		.2byte	0x39d
 3748 0760 6B000000 		.4byte	0x6b
 3749 0764 02       		.uleb128 0x2
 3750 0765 91       		.byte	0x91
 3751 0766 77       		.sleb128 -9
 3752 0767 16       		.uleb128 0x16
 3753 0768 6900     		.ascii	"i\000"
 3754 076a 01       		.byte	0x1
 3755 076b 9E03     		.2byte	0x39e
 3756 076d 6B000000 		.4byte	0x6b
 3757 0771 02       		.uleb128 0x2
 3758 0772 91       		.byte	0x91
 3759 0773 76       		.sleb128 -10
 3760 0774 16       		.uleb128 0x16
 3761 0775 636E7400 		.ascii	"cnt\000"
 3762 0779 01       		.byte	0x1
 3763 077a 9F03     		.2byte	0x39f
 3764 077c 77000000 		.4byte	0x77
 3765 0780 02       		.uleb128 0x2
 3766 0781 91       		.byte	0x91
 3767 0782 74       		.sleb128 -12
 3768 0783 00       		.byte	0
 3769 0784 0F       		.uleb128 0xf
 3770 0785 04       		.byte	0x4
 3771 0786 6B000000 		.4byte	0x6b
 3772 078a 1C       		.uleb128 0x1c
 3773 078b 96040000 		.4byte	.LASF84
 3774 078f 01       		.byte	0x1
 3775 0790 BC03     		.2byte	0x3bc
 3776 0792 BF010000 		.4byte	0x1bf
 3777 0796 00000000 		.4byte	.LFB11
 3778 079a 6A000000 		.4byte	.LFE11-.LFB11
 3779 079e 01       		.uleb128 0x1
 3780 079f 9C       		.byte	0x9c
 3781 07a0 E1070000 		.4byte	0x7e1
 3782 07a4 15       		.uleb128 0x15
 3783 07a5 6B050000 		.4byte	.LASF34
 3784 07a9 01       		.byte	0x1
 3785 07aa BC03     		.2byte	0x3bc
 3786 07ac 0F020000 		.4byte	0x20f
 3787 07b0 02       		.uleb128 0x2
 3788 07b1 91       		.byte	0x91
 3789 07b2 64       		.sleb128 -28
 3790 07b3 16       		.uleb128 0x16
 3791 07b4 72657400 		.ascii	"ret\000"
 3792 07b8 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 93


 3793 07b9 BE03     		.2byte	0x3be
 3794 07bb BF010000 		.4byte	0x1bf
 3795 07bf 02       		.uleb128 0x2
 3796 07c0 91       		.byte	0x91
 3797 07c1 77       		.sleb128 -9
 3798 07c2 13       		.uleb128 0x13
 3799 07c3 81050000 		.4byte	.LASF55
 3800 07c7 01       		.byte	0x1
 3801 07c8 BF03     		.2byte	0x3bf
 3802 07ca 83000000 		.4byte	0x83
 3803 07ce 02       		.uleb128 0x2
 3804 07cf 91       		.byte	0x91
 3805 07d0 70       		.sleb128 -16
 3806 07d1 13       		.uleb128 0x13
 3807 07d2 B5040000 		.4byte	.LASF56
 3808 07d6 01       		.byte	0x1
 3809 07d7 C003     		.2byte	0x3c0
 3810 07d9 83000000 		.4byte	0x83
 3811 07dd 02       		.uleb128 0x2
 3812 07de 91       		.byte	0x91
 3813 07df 6C       		.sleb128 -20
 3814 07e0 00       		.byte	0
 3815 07e1 1E       		.uleb128 0x1e
 3816 07e2 A7000000 		.4byte	.LASF85
 3817 07e6 01       		.byte	0x1
 3818 07e7 DF03     		.2byte	0x3df
 3819 07e9 BF010000 		.4byte	0x1bf
 3820 07ed 00000000 		.4byte	.LFB12
 3821 07f1 4A000000 		.4byte	.LFE12-.LFB12
 3822 07f5 01       		.uleb128 0x1
 3823 07f6 9C       		.byte	0x9c
 3824 07f7 55080000 		.4byte	0x855
 3825 07fb 15       		.uleb128 0x15
 3826 07fc EB040000 		.4byte	.LASF86
 3827 0800 01       		.byte	0x1
 3828 0801 DF03     		.2byte	0x3df
 3829 0803 83000000 		.4byte	0x83
 3830 0807 02       		.uleb128 0x2
 3831 0808 91       		.byte	0x91
 3832 0809 64       		.sleb128 -28
 3833 080a 15       		.uleb128 0x15
 3834 080b 65060000 		.4byte	.LASF83
 3835 080f 01       		.byte	0x1
 3836 0810 E003     		.2byte	0x3e0
 3837 0812 7F060000 		.4byte	0x67f
 3838 0816 02       		.uleb128 0x2
 3839 0817 91       		.byte	0x91
 3840 0818 60       		.sleb128 -32
 3841 0819 15       		.uleb128 0x15
 3842 081a 97050000 		.4byte	.LASF35
 3843 081e 01       		.byte	0x1
 3844 081f E103     		.2byte	0x3e1
 3845 0821 15020000 		.4byte	0x215
 3846 0825 02       		.uleb128 0x2
 3847 0826 91       		.byte	0x91
 3848 0827 5C       		.sleb128 -36
 3849 0828 16       		.uleb128 0x16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 94


 3850 0829 72657400 		.ascii	"ret\000"
 3851 082d 01       		.byte	0x1
 3852 082e E303     		.2byte	0x3e3
 3853 0830 BF010000 		.4byte	0x1bf
 3854 0834 02       		.uleb128 0x2
 3855 0835 91       		.byte	0x91
 3856 0836 77       		.sleb128 -9
 3857 0837 16       		.uleb128 0x16
 3858 0838 726300   		.ascii	"rc\000"
 3859 083b 01       		.byte	0x1
 3860 083c E503     		.2byte	0x3e5
 3861 083e A4000000 		.4byte	0xa4
 3862 0842 02       		.uleb128 0x2
 3863 0843 91       		.byte	0x91
 3864 0844 6C       		.sleb128 -20
 3865 0845 13       		.uleb128 0x13
 3866 0846 DD030000 		.4byte	.LASF87
 3867 084a 01       		.byte	0x1
 3868 084b E603     		.2byte	0x3e6
 3869 084d 83000000 		.4byte	0x83
 3870 0851 02       		.uleb128 0x2
 3871 0852 91       		.byte	0x91
 3872 0853 70       		.sleb128 -16
 3873 0854 00       		.byte	0
 3874 0855 1E       		.uleb128 0x1e
 3875 0856 E3030000 		.4byte	.LASF88
 3876 085a 01       		.byte	0x1
 3877 085b 4504     		.2byte	0x445
 3878 085d BF010000 		.4byte	0x1bf
 3879 0861 00000000 		.4byte	.LFB13
 3880 0865 80000000 		.4byte	.LFE13-.LFB13
 3881 0869 01       		.uleb128 0x1
 3882 086a 9C       		.byte	0x9c
 3883 086b BB080000 		.4byte	0x8bb
 3884 086f 15       		.uleb128 0x15
 3885 0870 EB040000 		.4byte	.LASF86
 3886 0874 01       		.byte	0x1
 3887 0875 4504     		.2byte	0x445
 3888 0877 83000000 		.4byte	0x83
 3889 087b 02       		.uleb128 0x2
 3890 087c 91       		.byte	0x91
 3891 087d 64       		.sleb128 -28
 3892 087e 15       		.uleb128 0x15
 3893 087f A3010000 		.4byte	.LASF89
 3894 0883 01       		.byte	0x1
 3895 0884 4604     		.2byte	0x446
 3896 0886 83000000 		.4byte	0x83
 3897 088a 02       		.uleb128 0x2
 3898 088b 91       		.byte	0x91
 3899 088c 60       		.sleb128 -32
 3900 088d 15       		.uleb128 0x15
 3901 088e 97050000 		.4byte	.LASF35
 3902 0892 01       		.byte	0x1
 3903 0893 4704     		.2byte	0x447
 3904 0895 15020000 		.4byte	0x215
 3905 0899 02       		.uleb128 0x2
 3906 089a 91       		.byte	0x91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 95


 3907 089b 5C       		.sleb128 -36
 3908 089c 13       		.uleb128 0x13
 3909 089d 79060000 		.4byte	.LASF64
 3910 08a1 01       		.byte	0x1
 3911 08a2 4904     		.2byte	0x449
 3912 08a4 83000000 		.4byte	0x83
 3913 08a8 02       		.uleb128 0x2
 3914 08a9 91       		.byte	0x91
 3915 08aa 68       		.sleb128 -24
 3916 08ab 16       		.uleb128 0x16
 3917 08ac 72657400 		.ascii	"ret\000"
 3918 08b0 01       		.byte	0x1
 3919 08b1 4A04     		.2byte	0x44a
 3920 08b3 BF010000 		.4byte	0x1bf
 3921 08b7 02       		.uleb128 0x2
 3922 08b8 91       		.byte	0x91
 3923 08b9 6F       		.sleb128 -17
 3924 08ba 00       		.byte	0
 3925 08bb 1E       		.uleb128 0x1e
 3926 08bc 0D020000 		.4byte	.LASF90
 3927 08c0 01       		.byte	0x1
 3928 08c1 B904     		.2byte	0x4b9
 3929 08c3 BF010000 		.4byte	0x1bf
 3930 08c7 00000000 		.4byte	.LFB14
 3931 08cb FA000000 		.4byte	.LFE14-.LFB14
 3932 08cf 01       		.uleb128 0x1
 3933 08d0 9C       		.byte	0x9c
 3934 08d1 53090000 		.4byte	0x953
 3935 08d5 15       		.uleb128 0x15
 3936 08d6 81050000 		.4byte	.LASF55
 3937 08da 01       		.byte	0x1
 3938 08db B904     		.2byte	0x4b9
 3939 08dd 83000000 		.4byte	0x83
 3940 08e1 03       		.uleb128 0x3
 3941 08e2 91       		.byte	0x91
 3942 08e3 E47D     		.sleb128 -284
 3943 08e5 15       		.uleb128 0x15
 3944 08e6 40000000 		.4byte	.LASF91
 3945 08ea 01       		.byte	0x1
 3946 08eb BA04     		.2byte	0x4ba
 3947 08ed 83000000 		.4byte	0x83
 3948 08f1 03       		.uleb128 0x3
 3949 08f2 91       		.byte	0x91
 3950 08f3 E07D     		.sleb128 -288
 3951 08f5 15       		.uleb128 0x15
 3952 08f6 4D050000 		.4byte	.LASF92
 3953 08fa 01       		.byte	0x1
 3954 08fb BB04     		.2byte	0x4bb
 3955 08fd 83000000 		.4byte	0x83
 3956 0901 03       		.uleb128 0x3
 3957 0902 91       		.byte	0x91
 3958 0903 DC7D     		.sleb128 -292
 3959 0905 15       		.uleb128 0x15
 3960 0906 D3010000 		.4byte	.LASF93
 3961 090a 01       		.byte	0x1
 3962 090b BC04     		.2byte	0x4bc
 3963 090d 83000000 		.4byte	0x83
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 96


 3964 0911 03       		.uleb128 0x3
 3965 0912 91       		.byte	0x91
 3966 0913 D87D     		.sleb128 -296
 3967 0915 15       		.uleb128 0x15
 3968 0916 97050000 		.4byte	.LASF35
 3969 091a 01       		.byte	0x1
 3970 091b BD04     		.2byte	0x4bd
 3971 091d 15020000 		.4byte	0x215
 3972 0921 02       		.uleb128 0x2
 3973 0922 91       		.byte	0x91
 3974 0923 00       		.sleb128 0
 3975 0924 16       		.uleb128 0x16
 3976 0925 72657400 		.ascii	"ret\000"
 3977 0929 01       		.byte	0x1
 3978 092a BF04     		.2byte	0x4bf
 3979 092c BF010000 		.4byte	0x1bf
 3980 0930 02       		.uleb128 0x2
 3981 0931 91       		.byte	0x91
 3982 0932 6F       		.sleb128 -17
 3983 0933 13       		.uleb128 0x13
 3984 0934 3E050000 		.4byte	.LASF62
 3985 0938 01       		.byte	0x1
 3986 0939 C004     		.2byte	0x4c0
 3987 093b 37050000 		.4byte	0x537
 3988 093f 03       		.uleb128 0x3
 3989 0940 91       		.byte	0x91
 3990 0941 E87D     		.sleb128 -280
 3991 0943 13       		.uleb128 0x13
 3992 0944 57050000 		.4byte	.LASF94
 3993 0948 01       		.byte	0x1
 3994 0949 C304     		.2byte	0x4c3
 3995 094b 83000000 		.4byte	0x83
 3996 094f 02       		.uleb128 0x2
 3997 0950 91       		.byte	0x91
 3998 0951 68       		.sleb128 -24
 3999 0952 00       		.byte	0
 4000 0953 1C       		.uleb128 0x1c
 4001 0954 EE010000 		.4byte	.LASF95
 4002 0958 01       		.byte	0x1
 4003 0959 0D05     		.2byte	0x50d
 4004 095b 83000000 		.4byte	0x83
 4005 095f 00000000 		.4byte	.LFB15
 4006 0963 F8000000 		.4byte	.LFE15-.LFB15
 4007 0967 01       		.uleb128 0x1
 4008 0968 9C       		.byte	0x9c
 4009 0969 D7090000 		.4byte	0x9d7
 4010 096d 15       		.uleb128 0x15
 4011 096e 81050000 		.4byte	.LASF55
 4012 0972 01       		.byte	0x1
 4013 0973 0D05     		.2byte	0x50d
 4014 0975 7F060000 		.4byte	0x67f
 4015 0979 02       		.uleb128 0x2
 4016 097a 91       		.byte	0x91
 4017 097b 6C       		.sleb128 -20
 4018 097c 15       		.uleb128 0x15
 4019 097d B5040000 		.4byte	.LASF56
 4020 0981 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 97


 4021 0982 0E05     		.2byte	0x50e
 4022 0984 7F060000 		.4byte	0x67f
 4023 0988 02       		.uleb128 0x2
 4024 0989 91       		.byte	0x91
 4025 098a 68       		.sleb128 -24
 4026 098b 15       		.uleb128 0x15
 4027 098c 90050000 		.4byte	.LASF96
 4028 0990 01       		.byte	0x1
 4029 0991 0F05     		.2byte	0x50f
 4030 0993 7F060000 		.4byte	0x67f
 4031 0997 02       		.uleb128 0x2
 4032 0998 91       		.byte	0x91
 4033 0999 64       		.sleb128 -28
 4034 099a 15       		.uleb128 0x15
 4035 099b 48000000 		.4byte	.LASF97
 4036 099f 01       		.byte	0x1
 4037 09a0 1005     		.2byte	0x510
 4038 09a2 83000000 		.4byte	0x83
 4039 09a6 02       		.uleb128 0x2
 4040 09a7 91       		.byte	0x91
 4041 09a8 60       		.sleb128 -32
 4042 09a9 15       		.uleb128 0x15
 4043 09aa 7D000000 		.4byte	.LASF38
 4044 09ae 01       		.byte	0x1
 4045 09af 1105     		.2byte	0x511
 4046 09b1 83000000 		.4byte	0x83
 4047 09b5 02       		.uleb128 0x2
 4048 09b6 91       		.byte	0x91
 4049 09b7 00       		.sleb128 0
 4050 09b8 1D       		.uleb128 0x1d
 4051 09b9 6C656E00 		.ascii	"len\000"
 4052 09bd 01       		.byte	0x1
 4053 09be 1205     		.2byte	0x512
 4054 09c0 83000000 		.4byte	0x83
 4055 09c4 02       		.uleb128 0x2
 4056 09c5 91       		.byte	0x91
 4057 09c6 04       		.sleb128 4
 4058 09c7 13       		.uleb128 0x13
 4059 09c8 8B050000 		.4byte	.LASF98
 4060 09cc 01       		.byte	0x1
 4061 09cd 1405     		.2byte	0x514
 4062 09cf 83000000 		.4byte	0x83
 4063 09d3 02       		.uleb128 0x2
 4064 09d4 91       		.byte	0x91
 4065 09d5 74       		.sleb128 -12
 4066 09d6 00       		.byte	0
 4067 09d7 1F       		.uleb128 0x1f
 4068 09d8 89040000 		.4byte	.LASF99
 4069 09dc 01       		.byte	0x1
 4070 09dd 5405     		.2byte	0x554
 4071 09df BF010000 		.4byte	0x1bf
 4072 09e3 00000000 		.4byte	.LFB16
 4073 09e7 2C010000 		.4byte	.LFE16-.LFB16
 4074 09eb 01       		.uleb128 0x1
 4075 09ec 9C       		.byte	0x9c
 4076 09ed 15       		.uleb128 0x15
 4077 09ee 97050000 		.4byte	.LASF35
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 98


 4078 09f2 01       		.byte	0x1
 4079 09f3 5405     		.2byte	0x554
 4080 09f5 15020000 		.4byte	0x215
 4081 09f9 03       		.uleb128 0x3
 4082 09fa 91       		.byte	0x91
 4083 09fb D47D     		.sleb128 -300
 4084 09fd 16       		.uleb128 0x16
 4085 09fe 6900     		.ascii	"i\000"
 4086 0a00 01       		.byte	0x1
 4087 0a01 5605     		.2byte	0x556
 4088 0a03 83000000 		.4byte	0x83
 4089 0a07 02       		.uleb128 0x2
 4090 0a08 91       		.byte	0x91
 4091 0a09 6C       		.sleb128 -20
 4092 0a0a 13       		.uleb128 0x13
 4093 0a0b F6050000 		.4byte	.LASF49
 4094 0a0f 01       		.byte	0x1
 4095 0a10 5705     		.2byte	0x557
 4096 0a12 83000000 		.4byte	0x83
 4097 0a16 02       		.uleb128 0x2
 4098 0a17 91       		.byte	0x91
 4099 0a18 5C       		.sleb128 -36
 4100 0a19 13       		.uleb128 0x13
 4101 0a1a 3E050000 		.4byte	.LASF62
 4102 0a1e 01       		.byte	0x1
 4103 0a1f 5805     		.2byte	0x558
 4104 0a21 37050000 		.4byte	0x537
 4105 0a25 03       		.uleb128 0x3
 4106 0a26 91       		.byte	0x91
 4107 0a27 DC7D     		.sleb128 -292
 4108 0a29 13       		.uleb128 0x13
 4109 0a2a A2040000 		.4byte	.LASF100
 4110 0a2e 01       		.byte	0x1
 4111 0a2f 5905     		.2byte	0x559
 4112 0a31 83000000 		.4byte	0x83
 4113 0a35 03       		.uleb128 0x3
 4114 0a36 91       		.byte	0x91
 4115 0a37 D87D     		.sleb128 -296
 4116 0a39 13       		.uleb128 0x13
 4117 0a3a AD050000 		.4byte	.LASF63
 4118 0a3e 01       		.byte	0x1
 4119 0a3f 5A05     		.2byte	0x55a
 4120 0a41 83000000 		.4byte	0x83
 4121 0a45 02       		.uleb128 0x2
 4122 0a46 91       		.byte	0x91
 4123 0a47 60       		.sleb128 -32
 4124 0a48 13       		.uleb128 0x13
 4125 0a49 58040000 		.4byte	.LASF51
 4126 0a4d 01       		.byte	0x1
 4127 0a4e 5C05     		.2byte	0x55c
 4128 0a50 83000000 		.4byte	0x83
 4129 0a54 02       		.uleb128 0x2
 4130 0a55 91       		.byte	0x91
 4131 0a56 68       		.sleb128 -24
 4132 0a57 16       		.uleb128 0x16
 4133 0a58 72657400 		.ascii	"ret\000"
 4134 0a5c 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 99


 4135 0a5d 5D05     		.2byte	0x55d
 4136 0a5f BF010000 		.4byte	0x1bf
 4137 0a63 02       		.uleb128 0x2
 4138 0a64 91       		.byte	0x91
 4139 0a65 67       		.sleb128 -25
 4140 0a66 00       		.byte	0
 4141 0a67 00       		.byte	0
 4142              		.section	.debug_abbrev,"",%progbits
 4143              	.Ldebug_abbrev0:
 4144 0000 01       		.uleb128 0x1
 4145 0001 11       		.uleb128 0x11
 4146 0002 01       		.byte	0x1
 4147 0003 25       		.uleb128 0x25
 4148 0004 0E       		.uleb128 0xe
 4149 0005 13       		.uleb128 0x13
 4150 0006 0B       		.uleb128 0xb
 4151 0007 03       		.uleb128 0x3
 4152 0008 0E       		.uleb128 0xe
 4153 0009 1B       		.uleb128 0x1b
 4154 000a 0E       		.uleb128 0xe
 4155 000b 55       		.uleb128 0x55
 4156 000c 17       		.uleb128 0x17
 4157 000d 11       		.uleb128 0x11
 4158 000e 01       		.uleb128 0x1
 4159 000f 10       		.uleb128 0x10
 4160 0010 17       		.uleb128 0x17
 4161 0011 00       		.byte	0
 4162 0012 00       		.byte	0
 4163 0013 02       		.uleb128 0x2
 4164 0014 24       		.uleb128 0x24
 4165 0015 00       		.byte	0
 4166 0016 0B       		.uleb128 0xb
 4167 0017 0B       		.uleb128 0xb
 4168 0018 3E       		.uleb128 0x3e
 4169 0019 0B       		.uleb128 0xb
 4170 001a 03       		.uleb128 0x3
 4171 001b 0E       		.uleb128 0xe
 4172 001c 00       		.byte	0
 4173 001d 00       		.byte	0
 4174 001e 03       		.uleb128 0x3
 4175 001f 24       		.uleb128 0x24
 4176 0020 00       		.byte	0
 4177 0021 0B       		.uleb128 0xb
 4178 0022 0B       		.uleb128 0xb
 4179 0023 3E       		.uleb128 0x3e
 4180 0024 0B       		.uleb128 0xb
 4181 0025 03       		.uleb128 0x3
 4182 0026 08       		.uleb128 0x8
 4183 0027 00       		.byte	0
 4184 0028 00       		.byte	0
 4185 0029 04       		.uleb128 0x4
 4186 002a 16       		.uleb128 0x16
 4187 002b 00       		.byte	0
 4188 002c 03       		.uleb128 0x3
 4189 002d 0E       		.uleb128 0xe
 4190 002e 3A       		.uleb128 0x3a
 4191 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 100


 4192 0030 3B       		.uleb128 0x3b
 4193 0031 05       		.uleb128 0x5
 4194 0032 49       		.uleb128 0x49
 4195 0033 13       		.uleb128 0x13
 4196 0034 00       		.byte	0
 4197 0035 00       		.byte	0
 4198 0036 05       		.uleb128 0x5
 4199 0037 0F       		.uleb128 0xf
 4200 0038 00       		.byte	0
 4201 0039 0B       		.uleb128 0xb
 4202 003a 0B       		.uleb128 0xb
 4203 003b 00       		.byte	0
 4204 003c 00       		.byte	0
 4205 003d 06       		.uleb128 0x6
 4206 003e 13       		.uleb128 0x13
 4207 003f 01       		.byte	0x1
 4208 0040 0B       		.uleb128 0xb
 4209 0041 0B       		.uleb128 0xb
 4210 0042 3A       		.uleb128 0x3a
 4211 0043 0B       		.uleb128 0xb
 4212 0044 3B       		.uleb128 0x3b
 4213 0045 0B       		.uleb128 0xb
 4214 0046 01       		.uleb128 0x1
 4215 0047 13       		.uleb128 0x13
 4216 0048 00       		.byte	0
 4217 0049 00       		.byte	0
 4218 004a 07       		.uleb128 0x7
 4219 004b 0D       		.uleb128 0xd
 4220 004c 00       		.byte	0
 4221 004d 03       		.uleb128 0x3
 4222 004e 0E       		.uleb128 0xe
 4223 004f 3A       		.uleb128 0x3a
 4224 0050 0B       		.uleb128 0xb
 4225 0051 3B       		.uleb128 0x3b
 4226 0052 0B       		.uleb128 0xb
 4227 0053 49       		.uleb128 0x49
 4228 0054 13       		.uleb128 0x13
 4229 0055 38       		.uleb128 0x38
 4230 0056 0B       		.uleb128 0xb
 4231 0057 00       		.byte	0
 4232 0058 00       		.byte	0
 4233 0059 08       		.uleb128 0x8
 4234 005a 0D       		.uleb128 0xd
 4235 005b 00       		.byte	0
 4236 005c 03       		.uleb128 0x3
 4237 005d 0E       		.uleb128 0xe
 4238 005e 3A       		.uleb128 0x3a
 4239 005f 0B       		.uleb128 0xb
 4240 0060 3B       		.uleb128 0x3b
 4241 0061 05       		.uleb128 0x5
 4242 0062 49       		.uleb128 0x49
 4243 0063 13       		.uleb128 0x13
 4244 0064 38       		.uleb128 0x38
 4245 0065 0B       		.uleb128 0xb
 4246 0066 00       		.byte	0
 4247 0067 00       		.byte	0
 4248 0068 09       		.uleb128 0x9
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 101


 4249 0069 13       		.uleb128 0x13
 4250 006a 01       		.byte	0x1
 4251 006b 0B       		.uleb128 0xb
 4252 006c 0B       		.uleb128 0xb
 4253 006d 3A       		.uleb128 0x3a
 4254 006e 0B       		.uleb128 0xb
 4255 006f 3B       		.uleb128 0x3b
 4256 0070 05       		.uleb128 0x5
 4257 0071 01       		.uleb128 0x1
 4258 0072 13       		.uleb128 0x13
 4259 0073 00       		.byte	0
 4260 0074 00       		.byte	0
 4261 0075 0A       		.uleb128 0xa
 4262 0076 04       		.uleb128 0x4
 4263 0077 01       		.byte	0x1
 4264 0078 0B       		.uleb128 0xb
 4265 0079 0B       		.uleb128 0xb
 4266 007a 49       		.uleb128 0x49
 4267 007b 13       		.uleb128 0x13
 4268 007c 3A       		.uleb128 0x3a
 4269 007d 0B       		.uleb128 0xb
 4270 007e 3B       		.uleb128 0x3b
 4271 007f 05       		.uleb128 0x5
 4272 0080 01       		.uleb128 0x1
 4273 0081 13       		.uleb128 0x13
 4274 0082 00       		.byte	0
 4275 0083 00       		.byte	0
 4276 0084 0B       		.uleb128 0xb
 4277 0085 28       		.uleb128 0x28
 4278 0086 00       		.byte	0
 4279 0087 03       		.uleb128 0x3
 4280 0088 0E       		.uleb128 0xe
 4281 0089 1C       		.uleb128 0x1c
 4282 008a 0B       		.uleb128 0xb
 4283 008b 00       		.byte	0
 4284 008c 00       		.byte	0
 4285 008d 0C       		.uleb128 0xc
 4286 008e 2E       		.uleb128 0x2e
 4287 008f 01       		.byte	0x1
 4288 0090 3F       		.uleb128 0x3f
 4289 0091 19       		.uleb128 0x19
 4290 0092 03       		.uleb128 0x3
 4291 0093 0E       		.uleb128 0xe
 4292 0094 3A       		.uleb128 0x3a
 4293 0095 0B       		.uleb128 0xb
 4294 0096 3B       		.uleb128 0x3b
 4295 0097 0B       		.uleb128 0xb
 4296 0098 27       		.uleb128 0x27
 4297 0099 19       		.uleb128 0x19
 4298 009a 49       		.uleb128 0x49
 4299 009b 13       		.uleb128 0x13
 4300 009c 11       		.uleb128 0x11
 4301 009d 01       		.uleb128 0x1
 4302 009e 12       		.uleb128 0x12
 4303 009f 06       		.uleb128 0x6
 4304 00a0 40       		.uleb128 0x40
 4305 00a1 18       		.uleb128 0x18
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 102


 4306 00a2 9642     		.uleb128 0x2116
 4307 00a4 19       		.uleb128 0x19
 4308 00a5 01       		.uleb128 0x1
 4309 00a6 13       		.uleb128 0x13
 4310 00a7 00       		.byte	0
 4311 00a8 00       		.byte	0
 4312 00a9 0D       		.uleb128 0xd
 4313 00aa 05       		.uleb128 0x5
 4314 00ab 00       		.byte	0
 4315 00ac 03       		.uleb128 0x3
 4316 00ad 0E       		.uleb128 0xe
 4317 00ae 3A       		.uleb128 0x3a
 4318 00af 0B       		.uleb128 0xb
 4319 00b0 3B       		.uleb128 0x3b
 4320 00b1 0B       		.uleb128 0xb
 4321 00b2 49       		.uleb128 0x49
 4322 00b3 13       		.uleb128 0x13
 4323 00b4 02       		.uleb128 0x2
 4324 00b5 18       		.uleb128 0x18
 4325 00b6 00       		.byte	0
 4326 00b7 00       		.byte	0
 4327 00b8 0E       		.uleb128 0xe
 4328 00b9 34       		.uleb128 0x34
 4329 00ba 00       		.byte	0
 4330 00bb 03       		.uleb128 0x3
 4331 00bc 08       		.uleb128 0x8
 4332 00bd 3A       		.uleb128 0x3a
 4333 00be 0B       		.uleb128 0xb
 4334 00bf 3B       		.uleb128 0x3b
 4335 00c0 0B       		.uleb128 0xb
 4336 00c1 49       		.uleb128 0x49
 4337 00c2 13       		.uleb128 0x13
 4338 00c3 02       		.uleb128 0x2
 4339 00c4 18       		.uleb128 0x18
 4340 00c5 00       		.byte	0
 4341 00c6 00       		.byte	0
 4342 00c7 0F       		.uleb128 0xf
 4343 00c8 0F       		.uleb128 0xf
 4344 00c9 00       		.byte	0
 4345 00ca 0B       		.uleb128 0xb
 4346 00cb 0B       		.uleb128 0xb
 4347 00cc 49       		.uleb128 0x49
 4348 00cd 13       		.uleb128 0x13
 4349 00ce 00       		.byte	0
 4350 00cf 00       		.byte	0
 4351 00d0 10       		.uleb128 0x10
 4352 00d1 34       		.uleb128 0x34
 4353 00d2 00       		.byte	0
 4354 00d3 03       		.uleb128 0x3
 4355 00d4 0E       		.uleb128 0xe
 4356 00d5 3A       		.uleb128 0x3a
 4357 00d6 0B       		.uleb128 0xb
 4358 00d7 3B       		.uleb128 0x3b
 4359 00d8 0B       		.uleb128 0xb
 4360 00d9 49       		.uleb128 0x49
 4361 00da 13       		.uleb128 0x13
 4362 00db 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 103


 4363 00dc 18       		.uleb128 0x18
 4364 00dd 00       		.byte	0
 4365 00de 00       		.byte	0
 4366 00df 11       		.uleb128 0x11
 4367 00e0 0B       		.uleb128 0xb
 4368 00e1 01       		.byte	0x1
 4369 00e2 11       		.uleb128 0x11
 4370 00e3 01       		.uleb128 0x1
 4371 00e4 12       		.uleb128 0x12
 4372 00e5 06       		.uleb128 0x6
 4373 00e6 00       		.byte	0
 4374 00e7 00       		.byte	0
 4375 00e8 12       		.uleb128 0x12
 4376 00e9 0B       		.uleb128 0xb
 4377 00ea 01       		.byte	0x1
 4378 00eb 11       		.uleb128 0x11
 4379 00ec 01       		.uleb128 0x1
 4380 00ed 12       		.uleb128 0x12
 4381 00ee 06       		.uleb128 0x6
 4382 00ef 01       		.uleb128 0x1
 4383 00f0 13       		.uleb128 0x13
 4384 00f1 00       		.byte	0
 4385 00f2 00       		.byte	0
 4386 00f3 13       		.uleb128 0x13
 4387 00f4 34       		.uleb128 0x34
 4388 00f5 00       		.byte	0
 4389 00f6 03       		.uleb128 0x3
 4390 00f7 0E       		.uleb128 0xe
 4391 00f8 3A       		.uleb128 0x3a
 4392 00f9 0B       		.uleb128 0xb
 4393 00fa 3B       		.uleb128 0x3b
 4394 00fb 05       		.uleb128 0x5
 4395 00fc 49       		.uleb128 0x49
 4396 00fd 13       		.uleb128 0x13
 4397 00fe 02       		.uleb128 0x2
 4398 00ff 18       		.uleb128 0x18
 4399 0100 00       		.byte	0
 4400 0101 00       		.byte	0
 4401 0102 14       		.uleb128 0x14
 4402 0103 2E       		.uleb128 0x2e
 4403 0104 01       		.byte	0x1
 4404 0105 3F       		.uleb128 0x3f
 4405 0106 19       		.uleb128 0x19
 4406 0107 03       		.uleb128 0x3
 4407 0108 0E       		.uleb128 0xe
 4408 0109 3A       		.uleb128 0x3a
 4409 010a 0B       		.uleb128 0xb
 4410 010b 3B       		.uleb128 0x3b
 4411 010c 05       		.uleb128 0x5
 4412 010d 27       		.uleb128 0x27
 4413 010e 19       		.uleb128 0x19
 4414 010f 49       		.uleb128 0x49
 4415 0110 13       		.uleb128 0x13
 4416 0111 11       		.uleb128 0x11
 4417 0112 01       		.uleb128 0x1
 4418 0113 12       		.uleb128 0x12
 4419 0114 06       		.uleb128 0x6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 104


 4420 0115 40       		.uleb128 0x40
 4421 0116 18       		.uleb128 0x18
 4422 0117 9642     		.uleb128 0x2116
 4423 0119 19       		.uleb128 0x19
 4424 011a 01       		.uleb128 0x1
 4425 011b 13       		.uleb128 0x13
 4426 011c 00       		.byte	0
 4427 011d 00       		.byte	0
 4428 011e 15       		.uleb128 0x15
 4429 011f 05       		.uleb128 0x5
 4430 0120 00       		.byte	0
 4431 0121 03       		.uleb128 0x3
 4432 0122 0E       		.uleb128 0xe
 4433 0123 3A       		.uleb128 0x3a
 4434 0124 0B       		.uleb128 0xb
 4435 0125 3B       		.uleb128 0x3b
 4436 0126 05       		.uleb128 0x5
 4437 0127 49       		.uleb128 0x49
 4438 0128 13       		.uleb128 0x13
 4439 0129 02       		.uleb128 0x2
 4440 012a 18       		.uleb128 0x18
 4441 012b 00       		.byte	0
 4442 012c 00       		.byte	0
 4443 012d 16       		.uleb128 0x16
 4444 012e 34       		.uleb128 0x34
 4445 012f 00       		.byte	0
 4446 0130 03       		.uleb128 0x3
 4447 0131 08       		.uleb128 0x8
 4448 0132 3A       		.uleb128 0x3a
 4449 0133 0B       		.uleb128 0xb
 4450 0134 3B       		.uleb128 0x3b
 4451 0135 05       		.uleb128 0x5
 4452 0136 49       		.uleb128 0x49
 4453 0137 13       		.uleb128 0x13
 4454 0138 02       		.uleb128 0x2
 4455 0139 18       		.uleb128 0x18
 4456 013a 00       		.byte	0
 4457 013b 00       		.byte	0
 4458 013c 17       		.uleb128 0x17
 4459 013d 0B       		.uleb128 0xb
 4460 013e 01       		.byte	0x1
 4461 013f 55       		.uleb128 0x55
 4462 0140 17       		.uleb128 0x17
 4463 0141 00       		.byte	0
 4464 0142 00       		.byte	0
 4465 0143 18       		.uleb128 0x18
 4466 0144 01       		.uleb128 0x1
 4467 0145 01       		.byte	0x1
 4468 0146 49       		.uleb128 0x49
 4469 0147 13       		.uleb128 0x13
 4470 0148 01       		.uleb128 0x1
 4471 0149 13       		.uleb128 0x13
 4472 014a 00       		.byte	0
 4473 014b 00       		.byte	0
 4474 014c 19       		.uleb128 0x19
 4475 014d 21       		.uleb128 0x21
 4476 014e 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 105


 4477 014f 49       		.uleb128 0x49
 4478 0150 13       		.uleb128 0x13
 4479 0151 2F       		.uleb128 0x2f
 4480 0152 0B       		.uleb128 0xb
 4481 0153 00       		.byte	0
 4482 0154 00       		.byte	0
 4483 0155 1A       		.uleb128 0x1a
 4484 0156 2E       		.uleb128 0x2e
 4485 0157 01       		.byte	0x1
 4486 0158 3F       		.uleb128 0x3f
 4487 0159 19       		.uleb128 0x19
 4488 015a 03       		.uleb128 0x3
 4489 015b 0E       		.uleb128 0xe
 4490 015c 3A       		.uleb128 0x3a
 4491 015d 0B       		.uleb128 0xb
 4492 015e 3B       		.uleb128 0x3b
 4493 015f 05       		.uleb128 0x5
 4494 0160 27       		.uleb128 0x27
 4495 0161 19       		.uleb128 0x19
 4496 0162 49       		.uleb128 0x49
 4497 0163 13       		.uleb128 0x13
 4498 0164 11       		.uleb128 0x11
 4499 0165 01       		.uleb128 0x1
 4500 0166 12       		.uleb128 0x12
 4501 0167 06       		.uleb128 0x6
 4502 0168 40       		.uleb128 0x40
 4503 0169 18       		.uleb128 0x18
 4504 016a 9742     		.uleb128 0x2117
 4505 016c 19       		.uleb128 0x19
 4506 016d 01       		.uleb128 0x1
 4507 016e 13       		.uleb128 0x13
 4508 016f 00       		.byte	0
 4509 0170 00       		.byte	0
 4510 0171 1B       		.uleb128 0x1b
 4511 0172 2E       		.uleb128 0x2e
 4512 0173 01       		.byte	0x1
 4513 0174 03       		.uleb128 0x3
 4514 0175 0E       		.uleb128 0xe
 4515 0176 3A       		.uleb128 0x3a
 4516 0177 0B       		.uleb128 0xb
 4517 0178 3B       		.uleb128 0x3b
 4518 0179 05       		.uleb128 0x5
 4519 017a 27       		.uleb128 0x27
 4520 017b 19       		.uleb128 0x19
 4521 017c 11       		.uleb128 0x11
 4522 017d 01       		.uleb128 0x1
 4523 017e 12       		.uleb128 0x12
 4524 017f 06       		.uleb128 0x6
 4525 0180 40       		.uleb128 0x40
 4526 0181 18       		.uleb128 0x18
 4527 0182 9742     		.uleb128 0x2117
 4528 0184 19       		.uleb128 0x19
 4529 0185 01       		.uleb128 0x1
 4530 0186 13       		.uleb128 0x13
 4531 0187 00       		.byte	0
 4532 0188 00       		.byte	0
 4533 0189 1C       		.uleb128 0x1c
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 106


 4534 018a 2E       		.uleb128 0x2e
 4535 018b 01       		.byte	0x1
 4536 018c 03       		.uleb128 0x3
 4537 018d 0E       		.uleb128 0xe
 4538 018e 3A       		.uleb128 0x3a
 4539 018f 0B       		.uleb128 0xb
 4540 0190 3B       		.uleb128 0x3b
 4541 0191 05       		.uleb128 0x5
 4542 0192 27       		.uleb128 0x27
 4543 0193 19       		.uleb128 0x19
 4544 0194 49       		.uleb128 0x49
 4545 0195 13       		.uleb128 0x13
 4546 0196 11       		.uleb128 0x11
 4547 0197 01       		.uleb128 0x1
 4548 0198 12       		.uleb128 0x12
 4549 0199 06       		.uleb128 0x6
 4550 019a 40       		.uleb128 0x40
 4551 019b 18       		.uleb128 0x18
 4552 019c 9742     		.uleb128 0x2117
 4553 019e 19       		.uleb128 0x19
 4554 019f 01       		.uleb128 0x1
 4555 01a0 13       		.uleb128 0x13
 4556 01a1 00       		.byte	0
 4557 01a2 00       		.byte	0
 4558 01a3 1D       		.uleb128 0x1d
 4559 01a4 05       		.uleb128 0x5
 4560 01a5 00       		.byte	0
 4561 01a6 03       		.uleb128 0x3
 4562 01a7 08       		.uleb128 0x8
 4563 01a8 3A       		.uleb128 0x3a
 4564 01a9 0B       		.uleb128 0xb
 4565 01aa 3B       		.uleb128 0x3b
 4566 01ab 05       		.uleb128 0x5
 4567 01ac 49       		.uleb128 0x49
 4568 01ad 13       		.uleb128 0x13
 4569 01ae 02       		.uleb128 0x2
 4570 01af 18       		.uleb128 0x18
 4571 01b0 00       		.byte	0
 4572 01b1 00       		.byte	0
 4573 01b2 1E       		.uleb128 0x1e
 4574 01b3 2E       		.uleb128 0x2e
 4575 01b4 01       		.byte	0x1
 4576 01b5 03       		.uleb128 0x3
 4577 01b6 0E       		.uleb128 0xe
 4578 01b7 3A       		.uleb128 0x3a
 4579 01b8 0B       		.uleb128 0xb
 4580 01b9 3B       		.uleb128 0x3b
 4581 01ba 05       		.uleb128 0x5
 4582 01bb 27       		.uleb128 0x27
 4583 01bc 19       		.uleb128 0x19
 4584 01bd 49       		.uleb128 0x49
 4585 01be 13       		.uleb128 0x13
 4586 01bf 11       		.uleb128 0x11
 4587 01c0 01       		.uleb128 0x1
 4588 01c1 12       		.uleb128 0x12
 4589 01c2 06       		.uleb128 0x6
 4590 01c3 40       		.uleb128 0x40
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 107


 4591 01c4 18       		.uleb128 0x18
 4592 01c5 9642     		.uleb128 0x2116
 4593 01c7 19       		.uleb128 0x19
 4594 01c8 01       		.uleb128 0x1
 4595 01c9 13       		.uleb128 0x13
 4596 01ca 00       		.byte	0
 4597 01cb 00       		.byte	0
 4598 01cc 1F       		.uleb128 0x1f
 4599 01cd 2E       		.uleb128 0x2e
 4600 01ce 01       		.byte	0x1
 4601 01cf 03       		.uleb128 0x3
 4602 01d0 0E       		.uleb128 0xe
 4603 01d1 3A       		.uleb128 0x3a
 4604 01d2 0B       		.uleb128 0xb
 4605 01d3 3B       		.uleb128 0x3b
 4606 01d4 05       		.uleb128 0x5
 4607 01d5 27       		.uleb128 0x27
 4608 01d6 19       		.uleb128 0x19
 4609 01d7 49       		.uleb128 0x49
 4610 01d8 13       		.uleb128 0x13
 4611 01d9 11       		.uleb128 0x11
 4612 01da 01       		.uleb128 0x1
 4613 01db 12       		.uleb128 0x12
 4614 01dc 06       		.uleb128 0x6
 4615 01dd 40       		.uleb128 0x40
 4616 01de 18       		.uleb128 0x18
 4617 01df 9642     		.uleb128 0x2116
 4618 01e1 19       		.uleb128 0x19
 4619 01e2 00       		.byte	0
 4620 01e3 00       		.byte	0
 4621 01e4 00       		.byte	0
 4622              		.section	.debug_aranges,"",%progbits
 4623 0000 8C000000 		.4byte	0x8c
 4624 0004 0200     		.2byte	0x2
 4625 0006 00000000 		.4byte	.Ldebug_info0
 4626 000a 04       		.byte	0x4
 4627 000b 00       		.byte	0
 4628 000c 0000     		.2byte	0
 4629 000e 0000     		.2byte	0
 4630 0010 00000000 		.4byte	.LFB2
 4631 0014 F6000000 		.4byte	.LFE2-.LFB2
 4632 0018 00000000 		.4byte	.LFB3
 4633 001c 2A030000 		.4byte	.LFE3-.LFB3
 4634 0020 00000000 		.4byte	.LFB4
 4635 0024 D8030000 		.4byte	.LFE4-.LFB4
 4636 0028 00000000 		.4byte	.LFB5
 4637 002c 48010000 		.4byte	.LFE5-.LFB5
 4638 0030 00000000 		.4byte	.LFB6
 4639 0034 16000000 		.4byte	.LFE6-.LFB6
 4640 0038 00000000 		.4byte	.LFB7
 4641 003c 68000000 		.4byte	.LFE7-.LFB7
 4642 0040 00000000 		.4byte	.LFB8
 4643 0044 3E000000 		.4byte	.LFE8-.LFB8
 4644 0048 00000000 		.4byte	.LFB9
 4645 004c B0000000 		.4byte	.LFE9-.LFB9
 4646 0050 00000000 		.4byte	.LFB10
 4647 0054 AE000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 108


 4648 0058 00000000 		.4byte	.LFB11
 4649 005c 6A000000 		.4byte	.LFE11-.LFB11
 4650 0060 00000000 		.4byte	.LFB12
 4651 0064 4A000000 		.4byte	.LFE12-.LFB12
 4652 0068 00000000 		.4byte	.LFB13
 4653 006c 80000000 		.4byte	.LFE13-.LFB13
 4654 0070 00000000 		.4byte	.LFB14
 4655 0074 FA000000 		.4byte	.LFE14-.LFB14
 4656 0078 00000000 		.4byte	.LFB15
 4657 007c F8000000 		.4byte	.LFE15-.LFB15
 4658 0080 00000000 		.4byte	.LFB16
 4659 0084 2C010000 		.4byte	.LFE16-.LFB16
 4660 0088 00000000 		.4byte	0
 4661 008c 00000000 		.4byte	0
 4662              		.section	.debug_ranges,"",%progbits
 4663              	.Ldebug_ranges0:
 4664 0000 78000000 		.4byte	.LBB7
 4665 0004 96030000 		.4byte	.LBE7
 4666 0008 C0030000 		.4byte	.LBB9
 4667 000c C2030000 		.4byte	.LBE9
 4668 0010 00000000 		.4byte	0
 4669 0014 00000000 		.4byte	0
 4670 0018 00000000 		.4byte	.LFB2
 4671 001c F6000000 		.4byte	.LFE2
 4672 0020 00000000 		.4byte	.LFB3
 4673 0024 2A030000 		.4byte	.LFE3
 4674 0028 00000000 		.4byte	.LFB4
 4675 002c D8030000 		.4byte	.LFE4
 4676 0030 00000000 		.4byte	.LFB5
 4677 0034 48010000 		.4byte	.LFE5
 4678 0038 00000000 		.4byte	.LFB6
 4679 003c 16000000 		.4byte	.LFE6
 4680 0040 00000000 		.4byte	.LFB7
 4681 0044 68000000 		.4byte	.LFE7
 4682 0048 00000000 		.4byte	.LFB8
 4683 004c 3E000000 		.4byte	.LFE8
 4684 0050 00000000 		.4byte	.LFB9
 4685 0054 B0000000 		.4byte	.LFE9
 4686 0058 00000000 		.4byte	.LFB10
 4687 005c AE000000 		.4byte	.LFE10
 4688 0060 00000000 		.4byte	.LFB11
 4689 0064 6A000000 		.4byte	.LFE11
 4690 0068 00000000 		.4byte	.LFB12
 4691 006c 4A000000 		.4byte	.LFE12
 4692 0070 00000000 		.4byte	.LFB13
 4693 0074 80000000 		.4byte	.LFE13
 4694 0078 00000000 		.4byte	.LFB14
 4695 007c FA000000 		.4byte	.LFE14
 4696 0080 00000000 		.4byte	.LFB15
 4697 0084 F8000000 		.4byte	.LFE15
 4698 0088 00000000 		.4byte	.LFB16
 4699 008c 2C010000 		.4byte	.LFE16
 4700 0090 00000000 		.4byte	0
 4701 0094 00000000 		.4byte	0
 4702              		.section	.debug_line,"",%progbits
 4703              	.Ldebug_line0:
 4704 0000 E4040000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 109


 4704      02005B00 
 4704      00000201 
 4704      FB0E0D00 
 4704      01010101 
 4705              	.LASF10:
 4706 0000 75696E74 		.ascii	"uint16\000"
 4706      313600
 4707              	.LASF79:
 4708 0007 726F7754 		.ascii	"rowToWrPtr\000"
 4708      6F577250 
 4708      747200
 4709              	.LASF66:
 4710 0012 746D7044 		.ascii	"tmpData\000"
 4710      61746100 
 4711              	.LASF33:
 4712 001a 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 4712      6E5F656D 
 4712      5F656570 
 4712      726F6D5F 
 4712      73746174 
 4713              	.LASF76:
 4714 0033 656D4565 		.ascii	"emEepromAddr\000"
 4714      70726F6D 
 4714      41646472 
 4714      00
 4715              	.LASF91:
 4716 0040 64737441 		.ascii	"dstAddr\000"
 4716      64647200 
 4717              	.LASF97:
 4718 0048 726F774E 		.ascii	"rowNum\000"
 4718      756D00
 4719              	.LASF25:
 4720 004f 6E756D62 		.ascii	"numberOfRows\000"
 4720      65724F66 
 4720      526F7773 
 4720      00
 4721              	.LASF67:
 4722 005c 6E756D57 		.ascii	"numWrites\000"
 4722      72697465 
 4722      7300
 4723              	.LASF7:
 4724 0066 6C6F6E67 		.ascii	"long long unsigned int\000"
 4724      206C6F6E 
 4724      6720756E 
 4724      7369676E 
 4724      65642069 
 4725              	.LASF38:
 4726 007d 61646472 		.ascii	"addr\000"
 4726      00
 4727              	.LASF18:
 4728 0082 65657072 		.ascii	"eepromSize\000"
 4728      6F6D5369 
 4728      7A6500
 4729              	.LASF6:
 4730 008d 6C6F6E67 		.ascii	"long long int\000"
 4730      206C6F6E 
 4730      6720696E 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 110


 4730      7400
 4731              	.LASF0:
 4732 009b 7369676E 		.ascii	"signed char\000"
 4732      65642063 
 4732      68617200 
 4733              	.LASF85:
 4734 00a7 57726974 		.ascii	"WriteRow\000"
 4734      65526F77 
 4734      00
 4735              	.LASF77:
 4736 00b0 46696E64 		.ascii	"FindLastWrittenRow\000"
 4736      4C617374 
 4736      57726974 
 4736      74656E52 
 4736      6F7700
 4737              	.LASF102:
 4738 00c3 47656E65 		.ascii	"Generated_Source\\PSoC4\\cy_em_eeprom.c\000"
 4738      72617465 
 4738      645F536F 
 4738      75726365 
 4738      5C50536F 
 4739              	.LASF32:
 4740 00e9 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 4740      4D5F4545 
 4740      50524F4D 
 4740      5F575249 
 4740      54455F46 
 4741              	.LASF72:
 4742 0101 43795F45 		.ascii	"Cy_Em_EEPROM_NumWrites\000"
 4742      6D5F4545 
 4742      50524F4D 
 4742      5F4E756D 
 4742      57726974 
 4743              	.LASF4:
 4744 0118 6C6F6E67 		.ascii	"long int\000"
 4744      20696E74 
 4744      00
 4745              	.LASF22:
 4746 0121 75736572 		.ascii	"userFlashStartAddr\000"
 4746      466C6173 
 4746      68537461 
 4746      72744164 
 4746      647200
 4747              	.LASF9:
 4748 0134 75696E74 		.ascii	"uint8\000"
 4748      3800
 4749              	.LASF13:
 4750 013a 646F7562 		.ascii	"double\000"
 4750      6C6500
 4751              	.LASF73:
 4752 0141 6C617374 		.ascii	"lastWrRowPtr\000"
 4752      5772526F 
 4752      77507472 
 4752      00
 4753              	.LASF11:
 4754 014e 75696E74 		.ascii	"uint32\000"
 4754      333200
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 111


 4755              	.LASF45:
 4756 0155 61637445 		.ascii	"actEepromRowNum\000"
 4756      6570726F 
 4756      6D526F77 
 4756      4E756D00 
 4757              	.LASF68:
 4758 0165 65654865 		.ascii	"eeHeaderDataOffset\000"
 4758      61646572 
 4758      44617461 
 4758      4F666673 
 4758      657400
 4759              	.LASF52:
 4760 0178 75706461 		.ascii	"updateAddrFlag\000"
 4760      74654164 
 4760      6472466C 
 4760      616700
 4761              	.LASF75:
 4762 0187 6E756D52 		.ascii	"numRows\000"
 4762      6F777300 
 4763              	.LASF54:
 4764 018f 64617461 		.ascii	"dataEndEepromRowNum\000"
 4764      456E6445 
 4764      6570726F 
 4764      6D526F77 
 4764      4E756D00 
 4765              	.LASF89:
 4766 01a3 72616D42 		.ascii	"ramBuffAddr\000"
 4766      75666641 
 4766      64647200 
 4767              	.LASF20:
 4768 01af 72656475 		.ascii	"redundantCopy\000"
 4768      6E64616E 
 4768      74436F70 
 4768      7900
 4769              	.LASF70:
 4770 01bd 64617461 		.ascii	"dataAddr\000"
 4770      41646472 
 4770      00
 4771              	.LASF8:
 4772 01c6 756E7369 		.ascii	"unsigned int\000"
 4772      676E6564 
 4772      20696E74 
 4772      00
 4773              	.LASF93:
 4774 01d3 6E756D42 		.ascii	"numBytes\000"
 4774      79746573 
 4774      00
 4775              	.LASF5:
 4776 01dc 6C6F6E67 		.ascii	"long unsigned int\000"
 4776      20756E73 
 4776      69676E65 
 4776      6420696E 
 4776      7400
 4777              	.LASF95:
 4778 01ee 47657441 		.ascii	"GetAddresses\000"
 4778      64647265 
 4778      73736573 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 112


 4778      00
 4779              	.LASF37:
 4780 01fb 43795F45 		.ascii	"Cy_Em_EEPROM_Read\000"
 4780      6D5F4545 
 4780      50524F4D 
 4780      5F526561 
 4780      6400
 4781              	.LASF90:
 4782 020d 43686563 		.ascii	"CheckCrcAndCopy\000"
 4782      6B437263 
 4782      416E6443 
 4782      6F707900 
 4783              	.LASF57:
 4784 021d 7372634F 		.ascii	"srcOffset\000"
 4784      66667365 
 4784      7400
 4785              	.LASF40:
 4786 0227 73697A65 		.ascii	"size\000"
 4786      00
 4787              	.LASF3:
 4788 022c 73686F72 		.ascii	"short unsigned int\000"
 4788      7420756E 
 4788      7369676E 
 4788      65642069 
 4788      6E7400
 4789              	.LASF61:
 4790 023f 61637445 		.ascii	"actEmEepromRowNum\000"
 4790      6D456570 
 4790      726F6D52 
 4790      6F774E75 
 4790      6D00
 4791              	.LASF80:
 4792 0251 726F7754 		.ascii	"rowToRdPtr\000"
 4792      6F526450 
 4792      747200
 4793              	.LASF65:
 4794 025c 656D4565 		.ascii	"emEepromRowRdAddr\000"
 4794      70726F6D 
 4794      526F7752 
 4794      64416464 
 4794      7200
 4795              	.LASF39:
 4796 026e 65657072 		.ascii	"eepromData\000"
 4796      6F6D4461 
 4796      746100
 4797              	.LASF103:
 4798 0279 433A5C55 		.ascii	"C:\\Users\\User\\Documents\\PSoC Creator\\PSoC4-MCU"
 4798      73657273 
 4798      5C557365 
 4798      725C446F 
 4798      63756D65 
 4799 02a7 2D424C45 		.ascii	"-BLE-Connectivity-Designs-master\\PSoC4-MCU-BLE-Con"
 4799      2D436F6E 
 4799      6E656374 
 4799      69766974 
 4799      792D4465 
 4800 02d9 6E656374 		.ascii	"nectivity-Designs-master\\BLE_Temperature_Measureme"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 113


 4800      69766974 
 4800      792D4465 
 4800      7369676E 
 4800      732D6D61 
 4801 030b 6E745C42 		.ascii	"nt\\BLE_Temperature_Measurement.cydsn\000"
 4801      4C455F54 
 4801      656D7065 
 4801      72617475 
 4801      72655F4D 
 4802              	.LASF44:
 4803 0330 73746172 		.ascii	"startRowAddr\000"
 4803      74526F77 
 4803      41646472 
 4803      00
 4804              	.LASF101:
 4805 033d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4805      43313120 
 4805      352E342E 
 4805      31203230 
 4805      31363036 
 4806 0370 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4806      20726576 
 4806      6973696F 
 4806      6E203233 
 4806      37373135 
 4807 03a3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4807      66756E63 
 4807      74696F6E 
 4807      2D736563 
 4807      74696F6E 
 4808              	.LASF42:
 4809 03cb 63757245 		.ascii	"curEepromBaseAddr\000"
 4809      6570726F 
 4809      6D426173 
 4809      65416464 
 4809      7200
 4810              	.LASF87:
 4811 03dd 726F7749 		.ascii	"rowId\000"
 4811      6400
 4812              	.LASF88:
 4813 03e3 45726173 		.ascii	"EraseRow\000"
 4813      65526F77 
 4813      00
 4814              	.LASF29:
 4815 03ec 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 4815      4D5F4545 
 4815      50524F4D 
 4815      5F424144 
 4815      5F504152 
 4816              	.LASF30:
 4817 0403 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 4817      4D5F4545 
 4817      50524F4D 
 4817      5F424144 
 4817      5F434845 
 4818              	.LASF17:
 4819 041d 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 114


 4819      74797065 
 4819      00
 4820              	.LASF16:
 4821 0426 6C6F6E67 		.ascii	"long double\000"
 4821      20646F75 
 4821      626C6500 
 4822              	.LASF71:
 4823 0432 43795F45 		.ascii	"Cy_Em_EEPROM_Erase\000"
 4823      6D5F4545 
 4823      50524F4D 
 4823      5F457261 
 4823      736500
 4824              	.LASF59:
 4825 0445 43795F45 		.ascii	"Cy_Em_EEPROM_Write\000"
 4825      6D5F4545 
 4825      50524F4D 
 4825      5F577269 
 4825      746500
 4826              	.LASF51:
 4827 0458 7365714E 		.ascii	"seqNum\000"
 4827      756D00
 4828              	.LASF27:
 4829 045f 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 4829      74635F65 
 4829      6570726F 
 4829      6D5F636F 
 4829      6E746578 
 4830              	.LASF78:
 4831 0477 4765744E 		.ascii	"GetNextRowToWrite\000"
 4831      65787452 
 4831      6F77546F 
 4831      57726974 
 4831      6500
 4832              	.LASF99:
 4833 0489 46696C6C 		.ascii	"FillChecksum\000"
 4833      43686563 
 4833      6B73756D 
 4833      00
 4834              	.LASF84:
 4835 0496 43686563 		.ascii	"CheckRanges\000"
 4835      6B52616E 
 4835      67657300 
 4836              	.LASF100:
 4837 04a2 77724164 		.ascii	"wrAddr\000"
 4837      647200
 4838              	.LASF60:
 4839 04a9 7772436E 		.ascii	"wrCnt\000"
 4839      7400
 4840              	.LASF12:
 4841 04af 666C6F61 		.ascii	"float\000"
 4841      7400
 4842              	.LASF56:
 4843 04b5 656E6441 		.ascii	"endAddr\000"
 4843      64647200 
 4844              	.LASF31:
 4845 04bd 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 4845      4D5F4545 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 115


 4845      50524F4D 
 4845      5F424144 
 4845      5F444154 
 4846              	.LASF24:
 4847 04d3 776C456E 		.ascii	"wlEndAddr\000"
 4847      64416464 
 4847      7200
 4848              	.LASF1:
 4849 04dd 756E7369 		.ascii	"unsigned char\000"
 4849      676E6564 
 4849      20636861 
 4849      7200
 4850              	.LASF86:
 4851 04eb 726F7741 		.ascii	"rowAddr\000"
 4851      64647200 
 4852              	.LASF2:
 4853 04f3 73686F72 		.ascii	"short int\000"
 4853      7420696E 
 4853      7400
 4854              	.LASF74:
 4855 04fd 70726576 		.ascii	"prevSeqNum\000"
 4855      5365714E 
 4855      756D00
 4856              	.LASF69:
 4857 0508 736B6970 		.ascii	"skipOperation\000"
 4857      4F706572 
 4857      6174696F 
 4857      6E00
 4858              	.LASF47:
 4859 0516 64617461 		.ascii	"dataStartEepromRowNum\000"
 4859      53746172 
 4859      74456570 
 4859      726F6D52 
 4859      6F774E75 
 4860              	.LASF36:
 4861 052c 43795F45 		.ascii	"Cy_Em_EEPROM_Init\000"
 4861      6D5F4545 
 4861      50524F4D 
 4861      5F496E69 
 4861      7400
 4862              	.LASF62:
 4863 053e 77726974 		.ascii	"writeRamBuffer\000"
 4863      6552616D 
 4863      42756666 
 4863      657200
 4864              	.LASF92:
 4865 054d 726F774F 		.ascii	"rowOffset\000"
 4865      66667365 
 4865      7400
 4866              	.LASF94:
 4867 0557 72635374 		.ascii	"rcStartRowAddr\000"
 4867      61727452 
 4867      6F774164 
 4867      647200
 4868              	.LASF14:
 4869 0566 63686172 		.ascii	"char\000"
 4869      00
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 116


 4870              	.LASF34:
 4871 056b 636F6E66 		.ascii	"config\000"
 4871      696700
 4872              	.LASF41:
 4873 0572 6E756D42 		.ascii	"numBytesToRead\000"
 4873      79746573 
 4873      546F5265 
 4873      616400
 4874              	.LASF55:
 4875 0581 73746172 		.ascii	"startAddr\000"
 4875      74416464 
 4875      7200
 4876              	.LASF98:
 4877 058b 736B6970 		.ascii	"skip\000"
 4877      00
 4878              	.LASF96:
 4879 0590 6F666673 		.ascii	"offset\000"
 4879      657400
 4880              	.LASF35:
 4881 0597 636F6E74 		.ascii	"context\000"
 4881      65787400 
 4882              	.LASF26:
 4883 059f 6C617374 		.ascii	"lastWrRowAddr\000"
 4883      5772526F 
 4883      77416464 
 4883      7200
 4884              	.LASF63:
 4885 05ad 746D7052 		.ascii	"tmpRowAddr\000"
 4885      6F774164 
 4885      647200
 4886              	.LASF43:
 4887 05b8 63757252 		.ascii	"curRowOffset\000"
 4887      6F774F66 
 4887      66736574 
 4887      00
 4888              	.LASF23:
 4889 05c5 63795F73 		.ascii	"cy_stc_eeprom_config_t\000"
 4889      74635F65 
 4889      6570726F 
 4889      6D5F636F 
 4889      6E666967 
 4890              	.LASF50:
 4891 05dc 72645369 		.ascii	"rdSize\000"
 4891      7A6500
 4892              	.LASF19:
 4893 05e3 77656172 		.ascii	"wearLevelingFactor\000"
 4893      4C657665 
 4893      6C696E67 
 4893      46616374 
 4893      6F7200
 4894              	.LASF49:
 4895 05f6 72644164 		.ascii	"rdAddr\000"
 4895      647200
 4896              	.LASF58:
 4897 05fd 6473744F 		.ascii	"dstOffset\000"
 4897      66667365 
 4897      7400
ARM GAS  C:\Users\User\AppData\Local\Temp\ccvbAgDl.s 			page 117


 4898              	.LASF81:
 4899 0607 47657452 		.ascii	"GetRowAddrBySeqNum\000"
 4899      6F774164 
 4899      64724279 
 4899      5365714E 
 4899      756D00
 4900              	.LASF28:
 4901 061a 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 4901      4D5F4545 
 4901      50524F4D 
 4901      5F535543 
 4901      43455353 
 4902              	.LASF21:
 4903 062f 626C6F63 		.ascii	"blockingWrite\000"
 4903      6B696E67 
 4903      57726974 
 4903      6500
 4904              	.LASF46:
 4905 063d 63757252 		.ascii	"curRdEepromRowNum\000"
 4905      64456570 
 4905      726F6D52 
 4905      6F774E75 
 4905      6D00
 4906              	.LASF15:
 4907 064f 63797374 		.ascii	"cystatus\000"
 4907      61747573 
 4907      00
 4908              	.LASF82:
 4909 0658 43616C63 		.ascii	"CalcChecksum\000"
 4909      43686563 
 4909      6B73756D 
 4909      00
 4910              	.LASF83:
 4911 0665 726F7744 		.ascii	"rowData\000"
 4911      61746100 
 4912              	.LASF53:
 4913 066d 6E756D52 		.ascii	"numRowReads\000"
 4913      6F775265 
 4913      61647300 
 4914              	.LASF64:
 4915 0679 656D4565 		.ascii	"emEepromRowAddr\000"
 4915      70726F6D 
 4915      526F7741 
 4915      64647200 
 4916              	.LASF48:
 4917 0689 65654461 		.ascii	"eeData\000"
 4917      746100
 4918              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
