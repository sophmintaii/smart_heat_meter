ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysClkWcoSetHighPowerMode, %function
  24              	CySysClkWcoSetHighPowerMode:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  26:Generated_Source\PSoC4/CyLFClk.h **** {
  27:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  29:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  30:Generated_Source\PSoC4/CyLFClk.h **** 
  31:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 2


  32:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  33:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  34:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  35:Generated_Source\PSoC4/CyLFClk.h **** /**
  36:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  37:Generated_Source\PSoC4/CyLFClk.h **** * @{
  38:Generated_Source\PSoC4/CyLFClk.h **** */
  39:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  40:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  43:Generated_Source\PSoC4/CyLFClk.h **** 
  44:Generated_Source\PSoC4/CyLFClk.h **** /**
  45:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  46:Generated_Source\PSoC4/CyLFClk.h **** * @{
  47:Generated_Source\PSoC4/CyLFClk.h **** */
  48:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  49:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  52:Generated_Source\PSoC4/CyLFClk.h **** 
  53:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  54:Generated_Source\PSoC4/CyLFClk.h ****     /**
  55:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_compensate
  56:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  57:Generated_Source\PSoC4/CyLFClk.h ****     */
  58:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  60:Generated_Source\PSoC4/CyLFClk.h ****     /** @} compensate */
  61:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  62:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  63:Generated_Source\PSoC4/CyLFClk.h **** 
  64:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  65:Generated_Source\PSoC4/CyLFClk.h ****     /**
  66:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_general
  67:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  68:Generated_Source\PSoC4/CyLFClk.h ****     */
  69:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  70:Generated_Source\PSoC4/CyLFClk.h ****     /** @} group_general */
  71:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  72:Generated_Source\PSoC4/CyLFClk.h **** 
  73:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  74:Generated_Source\PSoC4/CyLFClk.h ****     /**
  75:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wco
  76:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  77:Generated_Source\PSoC4/CyLFClk.h ****     */
  78:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  81:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  82:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wco */
  83:Generated_Source\PSoC4/CyLFClk.h **** 
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 3


  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h ****     /**
  97:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  99:Generated_Source\PSoC4/CyLFClk.h ****     */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h ****     /**
 131:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 133:Generated_Source\PSoC4/CyLFClk.h ****     */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 4


 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h ****     /**
 155:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 157:Generated_Source\PSoC4/CyLFClk.h ****     */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h ****     /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 5


 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h ****     /**********************************************************************************
 227:Generated_Source\PSoC4/CyLFClk.h ****     * CySysClkIloCompensate() - value to walk over oversamling in calculations with 
 228:Generated_Source\PSoC4/CyLFClk.h ****     * srsslite. The oversample can be obtained when ilo frequency in equal 80 KHz and
 229:Generated_Source\PSoC4/CyLFClk.h ****     * desired clocks are 80 000 clocks.
 230:Generated_Source\PSoC4/CyLFClk.h ****     **********************************************************************************/
 231:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 232:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 233:Generated_Source\PSoC4/CyLFClk.h **** 
 234:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 237:Generated_Source\PSoC4/CyLFClk.h **** 
 238:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 239:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 240:Generated_Source\PSoC4/CyLFClk.h **** 
 241:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)
 243:Generated_Source\PSoC4/CyLFClk.h **** 
 244:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 245:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))
 246:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 247:Generated_Source\PSoC4/CyLFClk.h **** 
 248:Generated_Source\PSoC4/CyLFClk.h **** 
 249:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 250:Generated_Source\PSoC4/CyLFClk.h **** 
 251:Generated_Source\PSoC4/CyLFClk.h ****     /* CySysClkSetLfclkSource() - implementation definitions */
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 258:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 259:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 6


 260:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 261:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 262:Generated_Source\PSoC4/CyLFClk.h **** 
 263:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)
 265:Generated_Source\PSoC4/CyLFClk.h **** 
 266:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 267:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))
 268:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 269:Generated_Source\PSoC4/CyLFClk.h **** 
 270:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 271:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External crystal as WCO’s clock source */
 274:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)
 275:Generated_Source\PSoC4/CyLFClk.h **** 
 276:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External clock input on wco_in pin as WCO’s clock source */
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 284:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 285:Generated_Source\PSoC4/CyLFClk.h **** 
 286:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 287:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 288:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 289:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 291:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 292:Generated_Source\PSoC4/CyLFClk.h **** 
 293:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 295:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 299:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 300:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 301:Generated_Source\PSoC4/CyLFClk.h **** 
 302:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 303:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 305:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 308:Generated_Source\PSoC4/CyLFClk.h **** 
 309:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 313:Generated_Source\PSoC4/CyLFClk.h **** 
 314:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 315:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 316:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 7


 317:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 320:Generated_Source\PSoC4/CyLFClk.h **** 
 321:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 322:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 323:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 324:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 325:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 326:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 327:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 329:Generated_Source\PSoC4/CyLFClk.h **** 
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 332:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 334:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 335:Generated_Source\PSoC4/CyLFClk.h **** 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 338:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 339:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 340:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 341:Generated_Source\PSoC4/CyLFClk.h **** 
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 344:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 346:Generated_Source\PSoC4/CyLFClk.h **** 
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 348:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 350:Generated_Source\PSoC4/CyLFClk.h **** 
 351:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 352:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 354:Generated_Source\PSoC4/CyLFClk.h **** 
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 356:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 358:Generated_Source\PSoC4/CyLFClk.h **** 
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 360:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 364:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 365:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 366:Generated_Source\PSoC4/CyLFClk.h **** 
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h **** 
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 372:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 8


 374:Generated_Source\PSoC4/CyLFClk.h **** 
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 379:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 380:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 381:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 382:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 383:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 384:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 385:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 386:Generated_Source\PSoC4/CyLFClk.h **** 
 387:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 388:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 389:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 392:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 393:Generated_Source\PSoC4/CyLFClk.h **** 
 394:Generated_Source\PSoC4/CyLFClk.h ****     #else
 395:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 396:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 397:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 398:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 399:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 400:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 401:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 402:Generated_Source\PSoC4/CyLFClk.h **** 
 403:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 404:Generated_Source\PSoC4/CyLFClk.h **** 
 405:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 406:Generated_Source\PSoC4/CyLFClk.h **** 
 407:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 408:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 409:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 410:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 411:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 414:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 415:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 416:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 419:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 420:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 421:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 422:Generated_Source\PSoC4/CyLFClk.h ****     #else
 423:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 424:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 425:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 426:Generated_Source\PSoC4/CyLFClk.h **** 
 427:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 428:Generated_Source\PSoC4/CyLFClk.h **** 
 429:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 9


 431:Generated_Source\PSoC4/CyLFClk.h **** 
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 433:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 435:Generated_Source\PSoC4/CyLFClk.h **** 
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 437:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 439:Generated_Source\PSoC4/CyLFClk.h **** 
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 441:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 442:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 447:Generated_Source\PSoC4/CyLFClk.h **** 
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 451:Generated_Source\PSoC4/CyLFClk.h **** 
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 453:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 457:Generated_Source\PSoC4/CyLFClk.h **** 
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 459:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 463:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 469:Generated_Source\PSoC4/CyLFClk.h **** 
 470:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 471:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 472:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 473:Generated_Source\PSoC4/CyLFClk.h **** 
 474:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 475:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 476:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 479:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 480:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 481:Generated_Source\PSoC4/CyLFClk.h **** 
 482:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 483:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 484:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 486:Generated_Source\PSoC4/CyLFClk.h **** 
 487:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 10


 488:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 489:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 490:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 491:Generated_Source\PSoC4/CyLFClk.h **** 
 492:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 493:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 494:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 495:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 498:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 499:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 500:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 501:Generated_Source\PSoC4/CyLFClk.h **** 
 502:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 503:Generated_Source\PSoC4/CyLFClk.h **** 
 504:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 505:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< WCO High power mode */
 506:Generated_Source\PSoC4/CyLFClk.h **** 
 507:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_BLESS)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< WCO Low power mode */
 509:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_BLESS) */
 510:Generated_Source\PSoC4/CyLFClk.h **** 
 511:Generated_Source\PSoC4/CyLFClk.h **** 
 512:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 513:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 514:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 515:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                  ((uint32)0x0Au)
 516:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE               ((uint32)0x00000100u)
 517:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                     (( int32)0x0f)
 518:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                     (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >> 1u)
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (32000u)
 522:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x3F)
 523:Generated_Source\PSoC4/CyLFClk.h **** #else
 524:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 529:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_SELECT_CLK1              ((uint32) ((uint32) CYDEV_DFT_SELECT_CLK1 << 8u))
 530:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1       ((uint32) (CY_SYS_TST_DDFT_SELECT_CLK1 | CYDEV_DFT
 531:Generated_Source\PSoC4/CyLFClk.h **** 
 532:Generated_Source\PSoC4/CyLFClk.h **** 
 533:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 535:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 536:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Control Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 1 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 2 Register*/
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 11


 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h **** /* DFT Muxes Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Configuration Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 554:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 555:Generated_Source\PSoC4/CyLFClk.h **** 
 556:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Trim Register*/
 557:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 558:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 560:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 561:Generated_Source\PSoC4/CyLFClk.h **** 
 562:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 563:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_IP_BLESS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 572:Generated_Source\PSoC4/CyLFClk.h **** 
 573:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 574:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 576:Generated_Source\PSoC4/CyLFClk.h ****     #else
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 585:Generated_Source\PSoC4/CyLFClk.h **** 
 586:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 587:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 588:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 589:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_IP_BLESS) */
 590:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 591:Generated_Source\PSoC4/CyLFClk.h **** 
 592:Generated_Source\PSoC4/CyLFClk.h **** 
 593:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 594:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 595:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 596:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 12


 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 608:Generated_Source\PSoC4/CyLFClk.h **** 
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 611:Generated_Source\PSoC4/CyLFClk.h **** #else
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 623:Generated_Source\PSoC4/CyLFClk.h **** 
 624:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 625:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 626:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 627:Generated_Source\PSoC4/CyLFClk.h **** 
 628:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 643:Generated_Source\PSoC4/CyLFClk.h **** 
 644:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 645:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 646:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 649:Generated_Source\PSoC4/CyLFClk.h **** 
 650:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 652:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 653:Generated_Source\PSoC4/CyLFClk.h ****     *
 654:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 655:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 656:Generated_Source\PSoC4/CyLFClk.h ****     *
 657:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 658:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 13


 659:Generated_Source\PSoC4/CyLFClk.h ****     {
  27              		.loc 1 659 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 660:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 661:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  37              		.loc 1 661 0
  38 0004 0F4B     		ldr	r3, .L2
  39 0006 0F4A     		ldr	r2, .L2
  40 0008 1268     		ldr	r2, [r2]
  41 000a 0121     		movs	r1, #1
  42 000c 8A43     		bics	r2, r1
  43 000e 1A60     		str	r2, [r3]
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 663:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 664:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
  44              		.loc 1 664 0
  45 0010 0C4B     		ldr	r3, .L2
  46 0012 0C4A     		ldr	r2, .L2
  47 0014 1268     		ldr	r2, [r2]
  48 0016 0221     		movs	r1, #2
  49 0018 8A43     		bics	r2, r1
  50 001a 1A60     		str	r2, [r3]
 665:Generated_Source\PSoC4/CyLFClk.h **** 
 666:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
  51              		.loc 1 667 0
  52 001c 0A4B     		ldr	r3, .L2+4
  53 001e 0A4A     		ldr	r2, .L2+4
  54 0020 1268     		ldr	r2, [r2]
  55 0022 3021     		movs	r1, #48
  56 0024 8A43     		bics	r2, r1
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  57              		.loc 1 668 0
  58 0026 1021     		movs	r1, #16
  59 0028 0A43     		orrs	r2, r1
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  60              		.loc 1 667 0
  61 002a 1A60     		str	r2, [r3]
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  62              		.loc 1 669 0
  63 002c 064B     		ldr	r3, .L2+4
  64 002e 064A     		ldr	r2, .L2+4
  65 0030 1268     		ldr	r2, [r2]
  66 0032 0721     		movs	r1, #7
  67 0034 8A43     		bics	r2, r1
 670:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  68              		.loc 1 670 0
  69 0036 0121     		movs	r1, #1
  70 0038 0A43     		orrs	r2, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 14


 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  71              		.loc 1 669 0
  72 003a 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/CyLFClk.h ****     }
  73              		.loc 1 671 0
  74 003c C046     		nop
  75 003e BD46     		mov	sp, r7
  76              		@ sp needed
  77 0040 80BD     		pop	{r7, pc}
  78              	.L3:
  79 0042 C046     		.align	2
  80              	.L2:
  81 0044 00F02E40 		.word	1076817920
  82 0048 00FF2E40 		.word	1076821760
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  86              		.section	.text.CySysClkWcoSetLowPowerMode,"ax",%progbits
  87              		.align	2
  88              		.code	16
  89              		.thumb_func
  90              		.type	CySysClkWcoSetLowPowerMode, %function
  91              	CySysClkWcoSetLowPowerMode:
  92              	.LFB1:
 672:Generated_Source\PSoC4/CyLFClk.h **** 
 673:Generated_Source\PSoC4/CyLFClk.h ****     #if(CY_IP_BLESS)
 674:Generated_Source\PSoC4/CyLFClk.h ****         /*******************************************************************************
 675:Generated_Source\PSoC4/CyLFClk.h ****         * Function Name: CySysClkWcoSetLowPowerMode
 676:Generated_Source\PSoC4/CyLFClk.h ****         ********************************************************************************
 677:Generated_Source\PSoC4/CyLFClk.h ****         *
 678:Generated_Source\PSoC4/CyLFClk.h ****         * Summary:
 679:Generated_Source\PSoC4/CyLFClk.h ****         *  Sets the low power mode for the 32 KHz WCO.
 680:Generated_Source\PSoC4/CyLFClk.h ****         *
 681:Generated_Source\PSoC4/CyLFClk.h ****         *  Note LPM available only for PSoC 4100 BLE / PSoC4 4200 BLE
 682:Generated_Source\PSoC4/CyLFClk.h ****         *******************************************************************************/
 683:Generated_Source\PSoC4/CyLFClk.h ****         static CY_INLINE void CySysClkWcoSetLowPowerMode(void)
 684:Generated_Source\PSoC4/CyLFClk.h ****         {
  93              		.loc 1 684 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97 0000 80B5     		push	{r7, lr}
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101 0002 00AF     		add	r7, sp, #0
 102              		.cfi_def_cfa_register 7
 685:Generated_Source\PSoC4/CyLFClk.h ****             /* Switch off auto low power mode in WCO */
 686:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 103              		.loc 1 686 0
 104 0004 0F4B     		ldr	r3, .L5
 105 0006 0F4A     		ldr	r2, .L5
 106 0008 1268     		ldr	r2, [r2]
 107 000a 0221     		movs	r1, #2
 108 000c 8A43     		bics	r2, r1
 109 000e 1A60     		str	r2, [r3]
 687:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 15


 688:Generated_Source\PSoC4/CyLFClk.h ****             /* Change WCO trim register settings to LPM */
 689:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_
 110              		.loc 1 689 0
 111 0010 0D4B     		ldr	r3, .L5+4
 112 0012 0D4A     		ldr	r2, .L5+4
 113 0014 1268     		ldr	r2, [r2]
 114 0016 0721     		movs	r1, #7
 115 0018 8A43     		bics	r2, r1
 690:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2250NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT)
 116              		.loc 1 690 0
 117 001a 0221     		movs	r1, #2
 118 001c 0A43     		orrs	r2, r1
 689:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2250NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT)
 119              		.loc 1 689 0
 120 001e 1A60     		str	r2, [r3]
 691:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_M
 121              		.loc 1 691 0
 122 0020 094B     		ldr	r3, .L5+4
 123 0022 094A     		ldr	r2, .L5+4
 124 0024 1268     		ldr	r2, [r2]
 125 0026 3021     		movs	r1, #48
 126 0028 8A43     		bics	r2, r1
 692:Generated_Source\PSoC4/CyLFClk.h ****                         | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_LPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 127              		.loc 1 692 0
 128 002a 2021     		movs	r1, #32
 129 002c 0A43     		orrs	r2, r1
 691:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_M
 130              		.loc 1 691 0
 131 002e 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/CyLFClk.h **** 
 694:Generated_Source\PSoC4/CyLFClk.h ****             /* Switch on low power mode for WCO */
 695:Generated_Source\PSoC4/CyLFClk.h ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 132              		.loc 1 695 0
 133 0030 044B     		ldr	r3, .L5
 134 0032 044A     		ldr	r2, .L5
 135 0034 1268     		ldr	r2, [r2]
 136 0036 0121     		movs	r1, #1
 137 0038 0A43     		orrs	r2, r1
 138 003a 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/CyLFClk.h ****         }
 139              		.loc 1 696 0
 140 003c C046     		nop
 141 003e BD46     		mov	sp, r7
 142              		@ sp needed
 143 0040 80BD     		pop	{r7, pc}
 144              	.L6:
 145 0042 C046     		.align	2
 146              	.L5:
 147 0044 00F02E40 		.word	1076817920
 148 0048 00FF2E40 		.word	1076821760
 149              		.cfi_endproc
 150              	.LFE1:
 151              		.size	CySysClkWcoSetLowPowerMode, .-CySysClkWcoSetLowPowerMode
 152              		.data
 153              		.align	1
 154              		.type	defaultIloTrimRegValue, %object
 155              		.size	defaultIloTrimRegValue, 2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 16


 156              	defaultIloTrimRegValue:
 157 0000 F000     		.short	240
 158              		.bss
 159              		.align	2
 160              	lfclkPosedgeWdtCounter0Enabled:
 161 0000 00000000 		.space	4
 162              		.align	2
 163              	lfclkPosedgeWdtCounter0Mode:
 164 0004 00000000 		.space	4
 165              		.align	2
 166              	disableServicedIsr:
 167 0008 00000000 		.space	4
 168              		.data
 169 0002 0000     		.align	2
 170              		.type	wdtIsrMask, %object
 171              		.size	wdtIsrMask, 4
 172              	wdtIsrMask:
 173 0004 04040400 		.word	263172
 174              		.section	.rodata
 175              		.align	2
 176              		.type	counterIntMaskTbl, %object
 177              		.size	counterIntMaskTbl, 12
 178              	counterIntMaskTbl:
 179 0000 04000000 		.word	4
 180 0004 00040000 		.word	1024
 181 0008 00000400 		.word	262144
 182              		.bss
 183              		.align	2
 184              	cySysWdtCallback:
 185 000c 00000000 		.space	12
 185      00000000 
 185      00000000 
 186              		.section	.text.CySysClkIloStart,"ax",%progbits
 187              		.align	2
 188              		.global	CySysClkIloStart
 189              		.code	16
 190              		.thumb_func
 191              		.type	CySysClkIloStart, %function
 192              	CySysClkIloStart:
 193              	.LFB2:
 194              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 17


  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 18


  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
 195              		.loc 2 84 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 00AF     		add	r7, sp, #0
 204              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 205              		.loc 2 85 0
 206 0004 044B     		ldr	r3, .L8
 207 0006 044A     		ldr	r2, .L8
 208 0008 1268     		ldr	r2, [r2]
 209 000a 8021     		movs	r1, #128
 210 000c 0906     		lsls	r1, r1, #24
 211 000e 0A43     		orrs	r2, r1
 212 0010 1A60     		str	r2, [r3]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
 213              		.loc 2 86 0
 214 0012 C046     		nop
 215 0014 BD46     		mov	sp, r7
 216              		@ sp needed
 217 0016 80BD     		pop	{r7, pc}
 218              	.L9:
 219              		.align	2
 220              	.L8:
 221 0018 04010B40 		.word	1074462980
 222              		.cfi_endproc
 223              	.LFE2:
 224              		.size	CySysClkIloStart, .-CySysClkIloStart
 225              		.section	.text.CySysClkIloStop,"ax",%progbits
 226              		.align	2
 227              		.global	CySysClkIloStop
 228              		.code	16
 229              		.thumb_func
 230              		.type	CySysClkIloStop, %function
 231              	CySysClkIloStop:
 232              	.LFB3:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 19


  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 233              		.loc 2 109 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 90B5     		push	{r4, r7, lr}
 238              		.cfi_def_cfa_offset 12
 239              		.cfi_offset 4, -12
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 83B0     		sub	sp, sp, #12
 243              		.cfi_def_cfa_offset 24
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 246              		.loc 2 114 0
 247 0006 FFF7FEFF 		bl	CySysWdtLocked
 248 000a 031E     		subs	r3, r0, #0
 249 000c 22D1     		bne	.L13
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 250              		.loc 2 116 0
 251 000e FFF7FEFF 		bl	CySysClkIloEnabled
 252 0012 031E     		subs	r3, r0, #0
 253 0014 1ED0     		beq	.L13
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 254              		.loc 2 120 0
 255 0016 FFF7FEFF 		bl	CySysClkGetLfclkSource
 256 001a 031E     		subs	r3, r0, #0
 257 001c 14D1     		bne	.L12
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 20


 258              		.loc 2 124 0
 259 001e FC1D     		adds	r4, r7, #7
 260 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 261 0024 0300     		movs	r3, r0
 262 0026 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 263              		.loc 2 125 0
 264 0028 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 265              		.loc 2 126 0
 266 002c 0B4B     		ldr	r3, .L14
 267 002e 0B4A     		ldr	r2, .L14
 268 0030 1268     		ldr	r2, [r2]
 269 0032 5200     		lsls	r2, r2, #1
 270 0034 5208     		lsrs	r2, r2, #1
 271 0036 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 272              		.loc 2 127 0
 273 0038 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 274              		.loc 2 128 0
 275 003c FB1D     		adds	r3, r7, #7
 276 003e 1B78     		ldrb	r3, [r3]
 277 0040 1800     		movs	r0, r3
 278 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 279              		.loc 2 143 0
 280 0046 05E0     		b	.L13
 281              	.L12:
 134:Generated_Source\PSoC4/CyLFClk.c ****                 }
 282              		.loc 2 134 0
 283 0048 044B     		ldr	r3, .L14
 284 004a 044A     		ldr	r2, .L14
 285 004c 1268     		ldr	r2, [r2]
 286 004e 5200     		lsls	r2, r2, #1
 287 0050 5208     		lsrs	r2, r2, #1
 288 0052 1A60     		str	r2, [r3]
 289              	.L13:
 290              		.loc 2 143 0
 291 0054 C046     		nop
 292 0056 BD46     		mov	sp, r7
 293 0058 03B0     		add	sp, sp, #12
 294              		@ sp needed
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 21


 295 005a 90BD     		pop	{r4, r7, pc}
 296              	.L15:
 297              		.align	2
 298              	.L14:
 299 005c 04010B40 		.word	1074462980
 300              		.cfi_endproc
 301              	.LFE3:
 302              		.size	CySysClkIloStop, .-CySysClkIloStop
 303              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 304              		.align	2
 305              		.global	CySysClkIloStartMeasurement
 306              		.code	16
 307              		.thumb_func
 308              		.type	CySysClkIloStartMeasurement, %function
 309              	CySysClkIloStartMeasurement:
 310              	.LFB4:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 311              		.loc 2 169 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 22


 321              		.loc 2 174 0
 322 0004 114B     		ldr	r3, .L18
 323 0006 1B78     		ldrb	r3, [r3]
 324 0008 002B     		cmp	r3, #0
 325 000a 0BD1     		bne	.L17
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 326              		.loc 2 176 0
 327 000c 104B     		ldr	r3, .L18+4
 328 000e 1B68     		ldr	r3, [r3]
 329 0010 DBB2     		uxtb	r3, r3
 330 0012 9BB2     		uxth	r3, r3
 331 0014 0F22     		movs	r2, #15
 332 0016 1340     		ands	r3, r2
 333 0018 9AB2     		uxth	r2, r3
 334 001a 0E4B     		ldr	r3, .L18+8
 335 001c 1A80     		strh	r2, [r3]
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 336              		.loc 2 177 0
 337 001e 0B4B     		ldr	r3, .L18
 338 0020 0122     		movs	r2, #1
 339 0022 1A70     		strb	r2, [r3]
 340              	.L17:
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 341              		.loc 2 182 0
 342 0024 0C4B     		ldr	r3, .L18+12
 343 0026 0C4A     		ldr	r2, .L18+12
 344 0028 1268     		ldr	r2, [r2]
 345 002a 0C49     		ldr	r1, .L18+16
 346 002c 0A40     		ands	r2, r1
 347 002e 8021     		movs	r1, #128
 348 0030 4900     		lsls	r1, r1, #1
 349 0032 0A43     		orrs	r2, r1
 350 0034 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 351              		.loc 2 185 0
 352 0036 0A4B     		ldr	r3, .L18+20
 353 0038 094A     		ldr	r2, .L18+20
 354 003a 1268     		ldr	r2, [r2]
 355 003c 0949     		ldr	r1, .L18+24
 356 003e 0A40     		ands	r2, r1
 357 0040 0949     		ldr	r1, .L18+28
 358 0042 0A43     		orrs	r2, r1
 359 0044 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 360              		.loc 2 187 0
 361 0046 C046     		nop
 362 0048 BD46     		mov	sp, r7
 363              		@ sp needed
 364 004a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 23


 365              	.L19:
 366              		.align	2
 367              	.L18:
 368 004c 18000000 		.word	iloTrimTrig.4876
 369 0050 24FF0B40 		.word	1074528036
 370 0054 00000000 		.word	defaultIloTrimRegValue
 371 0058 10010B40 		.word	1074462992
 372 005c FFF0FFFF 		.word	-3841
 373 0060 08000340 		.word	1073938440
 374 0064 C0C0FFFF 		.word	-16192
 375 0068 0A0B0000 		.word	2826
 376              		.cfi_endproc
 377              	.LFE4:
 378              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 379              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 380              		.align	2
 381              		.global	CySysClkIloStopMeasurement
 382              		.code	16
 383              		.thumb_func
 384              		.type	CySysClkIloStopMeasurement, %function
 385              	CySysClkIloStopMeasurement:
 386              	.LFB5:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 387              		.loc 2 202 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391 0000 80B5     		push	{r7, lr}
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 397              		.loc 2 204 0
 398 0004 044B     		ldr	r3, .L21
 399 0006 044A     		ldr	r2, .L21
 400 0008 1268     		ldr	r2, [r2]
 401 000a 0449     		ldr	r1, .L21+4
 402 000c 0A40     		ands	r2, r1
 403 000e 1A60     		str	r2, [r3]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 24


 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 404              		.loc 2 208 0
 405 0010 C046     		nop
 406 0012 BD46     		mov	sp, r7
 407              		@ sp needed
 408 0014 80BD     		pop	{r7, pc}
 409              	.L22:
 410 0016 C046     		.align	2
 411              	.L21:
 412 0018 10010B40 		.word	1074462992
 413 001c FFF0FFFF 		.word	-3841
 414              		.cfi_endproc
 415              	.LFE5:
 416              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 417              		.global	__aeabi_uidiv
 418              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 419              		.align	2
 420              		.global	CySysClkIloCompensate
 421              		.code	16
 422              		.thumb_func
 423              		.type	CySysClkIloCompensate, %function
 424              	CySysClkIloCompensate:
 425              	.LFB6:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 25


 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 426              		.loc 2 268 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 24
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 0000 90B5     		push	{r4, r7, lr}
 431              		.cfi_def_cfa_offset 12
 432              		.cfi_offset 4, -12
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 87B0     		sub	sp, sp, #28
 436              		.cfi_def_cfa_offset 40
 437 0004 00AF     		add	r7, sp, #0
 438              		.cfi_def_cfa_register 7
 439 0006 7860     		str	r0, [r7, #4]
 440 0008 3960     		str	r1, [r7]
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 441              		.loc 2 275 0
 442 000a 474B     		ldr	r3, .L35
 443 000c 1B68     		ldr	r3, [r3]
 444 000e 474A     		ldr	r2, .L35+4
 445 0010 1340     		ands	r3, r2
 446 0012 FB60     		str	r3, [r7, #12]
 276:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 26


 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 447              		.loc 2 278 0
 448 0014 FA68     		ldr	r2, [r7, #12]
 449 0016 8023     		movs	r3, #128
 450 0018 5B00     		lsls	r3, r3, #1
 451 001a 9A42     		cmp	r2, r3
 452 001c 00D0     		beq	.LCB333
 453 001e 7CE0     		b	.L24	@long jump
 454              	.LCB333:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 455              		.loc 2 279 0 discriminator 1
 456 0020 434B     		ldr	r3, .L35+8
 457 0022 1B68     		ldr	r3, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 458              		.loc 2 278 0 discriminator 1
 459 0024 434A     		ldr	r2, .L35+12
 460 0026 9342     		cmp	r3, r2
 461 0028 00D0     		beq	.LCB338
 462 002a 76E0     		b	.L24	@long jump
 463              	.LCB338:
 464              		.loc 2 279 0
 465 002c 7B68     		ldr	r3, [r7, #4]
 466 002e 424A     		ldr	r2, .L35+16
 467 0030 9342     		cmp	r3, r2
 468 0032 00D9     		bls	.LCB342
 469 0034 71E0     		b	.L24	@long jump
 470              	.LCB342:
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 471              		.loc 2 280 0
 472 0036 7B68     		ldr	r3, [r7, #4]
 473 0038 632B     		cmp	r3, #99
 474 003a 6ED9     		bls	.L24
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 475              		.loc 2 281 0
 476 003c 3B68     		ldr	r3, [r7]
 477 003e 002B     		cmp	r3, #0
 478 0040 6BD0     		beq	.L24
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 479              		.loc 2 284 0
 480 0042 3E4B     		ldr	r3, .L35+20
 481 0044 1B68     		ldr	r3, [r3]
 482 0046 002B     		cmp	r3, #0
 483 0048 5CD0     		beq	.L25
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 484              		.loc 2 287 0
 485 004a 3D4B     		ldr	r3, .L35+24
 486 004c 1B68     		ldr	r3, [r3]
 487 004e 002B     		cmp	r3, #0
 488 0050 55DA     		bge	.L26
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 489              		.loc 2 289 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 27


 490 0052 3C4B     		ldr	r3, .L35+28
 491 0054 1B68     		ldr	r3, [r3]
 492 0056 002B     		cmp	r3, #0
 493 0058 4ED0     		beq	.L27
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 494              		.loc 2 293 0
 495 005a 7B68     		ldr	r3, [r7, #4]
 496 005c 3A4A     		ldr	r2, .L35+32
 497 005e 9342     		cmp	r3, r2
 498 0060 1ED9     		bls	.L28
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 499              		.loc 2 295 0
 500 0062 7B68     		ldr	r3, [r7, #4]
 501 0064 1F21     		movs	r1, #31
 502 0066 1800     		movs	r0, r3
 503 0068 FFF7FEFF 		bl	__aeabi_uidiv
 504 006c 0300     		movs	r3, r0
 505 006e BB60     		str	r3, [r7, #8]
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 506              		.loc 2 297 0
 507 0070 344B     		ldr	r3, .L35+28
 508 0072 1A68     		ldr	r2, [r3]
 509 0074 354B     		ldr	r3, .L35+36
 510 0076 1B68     		ldr	r3, [r3]
 511 0078 5A43     		muls	r2, r3
 512 007a 344B     		ldr	r3, .L35+36
 513 007c 1B68     		ldr	r3, [r3]
 514 007e 9B0A     		lsrs	r3, r3, #10
 515 0080 1900     		movs	r1, r3
 516 0082 1000     		movs	r0, r2
 517 0084 FFF7FEFF 		bl	__aeabi_uidiv
 518 0088 0300     		movs	r3, r0
 519 008a 5C09     		lsrs	r4, r3, #5
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 520              		.loc 2 298 0
 521 008c BA68     		ldr	r2, [r7, #8]
 522 008e FA23     		movs	r3, #250
 523 0090 9900     		lsls	r1, r3, #2
 524 0092 1000     		movs	r0, r2
 525 0094 FFF7FEFF 		bl	__aeabi_uidiv
 526 0098 0300     		movs	r3, r0
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 527              		.loc 2 296 0
 528 009a 6343     		muls	r3, r4
 529 009c 7B61     		str	r3, [r7, #20]
 530 009e 22E0     		b	.L29
 531              	.L28:
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 532              		.loc 2 302 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 28


 533 00a0 7B68     		ldr	r3, [r7, #4]
 534 00a2 6422     		movs	r2, #100
 535 00a4 5343     		muls	r3, r2
 536 00a6 2A4A     		ldr	r2, .L35+40
 537 00a8 9446     		mov	ip, r2
 538 00aa 6344     		add	r3, r3, ip
 539 00ac 2949     		ldr	r1, .L35+44
 540 00ae 1800     		movs	r0, r3
 541 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 542 00b4 0300     		movs	r3, r0
 543 00b6 BB60     		str	r3, [r7, #8]
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 544              		.loc 2 305 0
 545 00b8 224B     		ldr	r3, .L35+28
 546 00ba 1A68     		ldr	r2, [r3]
 547 00bc 234B     		ldr	r3, .L35+36
 548 00be 1B68     		ldr	r3, [r3]
 549 00c0 5A43     		muls	r2, r3
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 550              		.loc 2 306 0
 551 00c2 224B     		ldr	r3, .L35+36
 552 00c4 1B68     		ldr	r3, [r3]
 553 00c6 9B0A     		lsrs	r3, r3, #10
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 554              		.loc 2 305 0
 555 00c8 1900     		movs	r1, r3
 556 00ca 1000     		movs	r0, r2
 557 00cc FFF7FEFF 		bl	__aeabi_uidiv
 558 00d0 0300     		movs	r3, r0
 559 00d2 1A00     		movs	r2, r3
 560              		.loc 2 306 0
 561 00d4 BB68     		ldr	r3, [r7, #8]
 562 00d6 5A43     		muls	r2, r3
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 563              		.loc 2 305 0
 564 00d8 FA23     		movs	r3, #250
 565 00da D901     		lsls	r1, r3, #7
 566 00dc 1000     		movs	r0, r2
 567 00de FFF7FEFF 		bl	__aeabi_uidiv
 568 00e2 0300     		movs	r3, r0
 569 00e4 7B61     		str	r3, [r7, #20]
 570              	.L29:
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 29


 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 571              		.loc 2 326 0
 572 00e6 3B68     		ldr	r3, [r7]
 573 00e8 7A69     		ldr	r2, [r7, #20]
 574 00ea 1A60     		str	r2, [r3]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 575              		.loc 2 327 0
 576 00ec 134B     		ldr	r3, .L35+20
 577 00ee 0022     		movs	r2, #0
 578 00f0 1A60     		str	r2, [r3]
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 579              		.loc 2 328 0
 580 00f2 0023     		movs	r3, #0
 581 00f4 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 582              		.loc 2 284 0
 583 00f6 12E0     		b	.L33
 584              	.L27:
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 585              		.loc 2 332 0
 586 00f8 1123     		movs	r3, #17
 587 00fa 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 588              		.loc 2 284 0
 589 00fc 0FE0     		b	.L33
 590              	.L26:
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 591              		.loc 2 337 0
 592 00fe 0723     		movs	r3, #7
 593 0100 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 594              		.loc 2 284 0
 595 0102 0CE0     		b	.L33
 596              	.L25:
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 597              		.loc 2 343 0
 598 0104 0E4A     		ldr	r2, .L35+24
 599 0106 114B     		ldr	r3, .L35+36
 600 0108 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 30


 601 010a 9B0A     		lsrs	r3, r3, #10
 602 010c 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 603              		.loc 2 344 0
 604 010e 0B4B     		ldr	r3, .L35+20
 605 0110 0122     		movs	r2, #1
 606 0112 1A60     		str	r2, [r3]
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 607              		.loc 2 345 0
 608 0114 0723     		movs	r3, #7
 609 0116 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 610              		.loc 2 284 0
 611 0118 01E0     		b	.L33
 612              	.L24:
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 613              		.loc 2 350 0
 614 011a 1123     		movs	r3, #17
 615 011c 3B61     		str	r3, [r7, #16]
 616              	.L33:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 617              		.loc 2 353 0
 618 011e 3B69     		ldr	r3, [r7, #16]
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 619              		.loc 2 354 0
 620 0120 1800     		movs	r0, r3
 621 0122 BD46     		mov	sp, r7
 622 0124 07B0     		add	sp, sp, #28
 623              		@ sp needed
 624 0126 90BD     		pop	{r4, r7, pc}
 625              	.L36:
 626              		.align	2
 627              	.L35:
 628 0128 10010B40 		.word	1074462992
 629 012c 3F3F0000 		.word	16191
 630 0130 08000340 		.word	1073938440
 631 0134 0A0B0000 		.word	2826
 632 0138 00286BEE 		.word	-294967296
 633 013c 1C000000 		.word	compensateRunningStatus.4886
 634 0140 18000340 		.word	1073938456
 635 0144 1C000340 		.word	1073938460
 636 0148 60D10000 		.word	53600
 637 014c 00000000 		.word	cydelayFreqHz
 638 0150 0D030000 		.word	781
 639 0154 350C0000 		.word	3125
 640              		.cfi_endproc
 641              	.LFE6:
 642              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 643              		.section	.text.CySysClkIloEnabled,"ax",%progbits
 644              		.align	2
 645              		.code	16
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 31


 646              		.thumb_func
 647              		.type	CySysClkIloEnabled, %function
 648              	CySysClkIloEnabled:
 649              	.LFB7:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 650              		.loc 2 371 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654 0000 80B5     		push	{r7, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 00AF     		add	r7, sp, #0
 659              		.cfi_def_cfa_register 7
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 660              		.loc 2 373 0
 661 0004 044B     		ldr	r3, .L41
 662 0006 1B68     		ldr	r3, [r3]
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 663              		.loc 2 374 0
 664 0008 002B     		cmp	r3, #0
 665 000a 01DA     		bge	.L38
 666              		.loc 2 374 0 is_stmt 0 discriminator 1
 667 000c 0123     		movs	r3, #1
 373:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 668              		.loc 2 373 0 is_stmt 1 discriminator 1
 669 000e 00E0     		b	.L40
 670              	.L38:
 671              		.loc 2 374 0 discriminator 2
 672 0010 0023     		movs	r3, #0
 673              	.L40:
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 674              		.loc 2 376 0 discriminator 1
 675 0012 1800     		movs	r0, r3
 676 0014 BD46     		mov	sp, r7
 677              		@ sp needed
 678 0016 80BD     		pop	{r7, pc}
 679              	.L42:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 32


 680              		.align	2
 681              	.L41:
 682 0018 04010B40 		.word	1074462980
 683              		.cfi_endproc
 684              	.LFE7:
 685              		.size	CySysClkIloEnabled, .-CySysClkIloEnabled
 686              		.section	.text.CySysClkIloTrim,"ax",%progbits
 687              		.align	2
 688              		.global	CySysClkIloTrim
 689              		.code	16
 690              		.thumb_func
 691              		.type	CySysClkIloTrim, %function
 692              	CySysClkIloTrim:
 693              	.LFB8:
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 33


 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 694              		.loc 2 450 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 24
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 80B5     		push	{r7, lr}
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 86B0     		sub	sp, sp, #24
 703              		.cfi_def_cfa_offset 32
 704 0004 00AF     		add	r7, sp, #0
 705              		.cfi_def_cfa_register 7
 706 0006 7860     		str	r0, [r7, #4]
 707 0008 3960     		str	r1, [r7]
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 708              		.loc 2 451 0
 709 000a 0523     		movs	r3, #5
 710 000c 7B61     		str	r3, [r7, #20]
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 711              		.loc 2 457 0
 712 000e 3E4B     		ldr	r3, .L61
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 34


 713 0010 1B68     		ldr	r3, [r3]
 714 0012 3E4A     		ldr	r2, .L61+4
 715 0014 1340     		ands	r3, r2
 716 0016 BB60     		str	r3, [r7, #8]
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 717              		.loc 2 460 0
 718 0018 BA68     		ldr	r2, [r7, #8]
 719 001a 8023     		movs	r3, #128
 720 001c 5B00     		lsls	r3, r3, #1
 721 001e 9A42     		cmp	r2, r3
 722 0020 00D0     		beq	.LCB565
 723 0022 69E0     		b	.L44	@long jump
 724              	.LCB565:
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 725              		.loc 2 461 0 discriminator 1
 726 0024 3A4B     		ldr	r3, .L61+8
 727 0026 1B68     		ldr	r3, [r3]
 460:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 728              		.loc 2 460 0 discriminator 1
 729 0028 3A4A     		ldr	r2, .L61+12
 730 002a 9342     		cmp	r3, r2
 731 002c 00D0     		beq	.LCB570
 732 002e 63E0     		b	.L44	@long jump
 733              	.LCB570:
 734              		.loc 2 461 0
 735 0030 3B68     		ldr	r3, [r7]
 736 0032 002B     		cmp	r3, #0
 737 0034 60D0     		beq	.L44
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 738              		.loc 2 464 0
 739 0036 7B68     		ldr	r3, [r7, #4]
 740 0038 002B     		cmp	r3, #0
 741 003a 3DD1     		bne	.L45
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 742              		.loc 2 466 0
 743 003c 364B     		ldr	r3, .L61+16
 744 003e 1B68     		ldr	r3, [r3]
 745 0040 9B0A     		lsrs	r3, r3, #10
 746 0042 3B61     		str	r3, [r7, #16]
 747              	.L50:
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 748              		.loc 2 470 0
 749 0044 354A     		ldr	r2, .L61+20
 750 0046 344B     		ldr	r3, .L61+16
 751 0048 1B68     		ldr	r3, [r3]
 752 004a 9B0A     		lsrs	r3, r3, #10
 753 004c 1360     		str	r3, [r2]
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 35


 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 754              		.loc 2 473 0
 755 004e 05E0     		b	.L46
 756              	.L48:
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 757              		.loc 2 475 0
 758 0050 3B69     		ldr	r3, [r7, #16]
 759 0052 013B     		subs	r3, r3, #1
 760 0054 3B61     		str	r3, [r7, #16]
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 761              		.loc 2 476 0
 762 0056 3B69     		ldr	r3, [r7, #16]
 763 0058 002B     		cmp	r3, #0
 764 005a 04D0     		beq	.L60
 765              	.L46:
 473:Generated_Source\PSoC4/CyLFClk.c ****                 {
 766              		.loc 2 473 0
 767 005c 2F4B     		ldr	r3, .L61+20
 768 005e 1B68     		ldr	r3, [r3]
 769 0060 002B     		cmp	r3, #0
 770 0062 F5DA     		bge	.L48
 771 0064 00E0     		b	.L47
 772              	.L60:
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 773              		.loc 2 478 0
 774 0066 C046     		nop
 775              	.L47:
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 776              		.loc 2 481 0
 777 0068 3B68     		ldr	r3, [r7]
 778 006a 1800     		movs	r0, r3
 779 006c FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 780 0070 0200     		movs	r2, r0
 781 0072 2B4B     		ldr	r3, .L61+24
 782 0074 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 783              		.loc 2 482 0
 784 0076 7B69     		ldr	r3, [r7, #20]
 785 0078 013B     		subs	r3, r3, #1
 786 007a 7B61     		str	r3, [r7, #20]
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 787              		.loc 2 485 0
 788 007c 284B     		ldr	r3, .L61+24
 789 007e 1B68     		ldr	r3, [r3]
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 790              		.loc 2 487 0
 791 0080 002B     		cmp	r3, #0
 792 0082 06D0     		beq	.L49
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 793              		.loc 2 486 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 36


 794 0084 264B     		ldr	r3, .L61+24
 795 0086 1B68     		ldr	r3, [r3]
 485:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 796              		.loc 2 485 0
 797 0088 112B     		cmp	r3, #17
 798 008a 02D0     		beq	.L49
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 799              		.loc 2 486 0
 800 008c 7B69     		ldr	r3, [r7, #20]
 801 008e 002B     		cmp	r3, #0
 802 0090 D8D1     		bne	.L50
 803              	.L49:
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 804              		.loc 2 489 0
 805 0092 234B     		ldr	r3, .L61+24
 806 0094 1B68     		ldr	r3, [r3]
 807 0096 002B     		cmp	r3, #0
 808 0098 02D1     		bne	.L51
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 809              		.loc 2 491 0
 810 009a 0023     		movs	r3, #0
 811 009c FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 812              		.loc 2 464 0
 813 009e 2DE0     		b	.L58
 814              	.L51:
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 815              		.loc 2 495 0
 816 00a0 7B69     		ldr	r3, [r7, #20]
 817 00a2 002B     		cmp	r3, #0
 818 00a4 05D1     		bne	.L53
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 819              		.loc 2 497 0
 820 00a6 1E4B     		ldr	r3, .L61+24
 821 00a8 0022     		movs	r2, #0
 822 00aa 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 823              		.loc 2 498 0
 824 00ac 1023     		movs	r3, #16
 825 00ae FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 826              		.loc 2 464 0
 827 00b0 24E0     		b	.L58
 828              	.L53:
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 829              		.loc 2 502 0
 830 00b2 1123     		movs	r3, #17
 831 00b4 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 37


 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 832              		.loc 2 464 0
 833 00b6 21E0     		b	.L58
 834              	.L45:
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 835              		.loc 2 509 0
 836 00b8 194B     		ldr	r3, .L61+24
 837 00ba 1B68     		ldr	r3, [r3]
 838 00bc 002B     		cmp	r3, #0
 839 00be 10D0     		beq	.L55
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 840              		.loc 2 512 0
 841 00c0 164B     		ldr	r3, .L61+20
 842 00c2 1B68     		ldr	r3, [r3]
 843 00c4 002B     		cmp	r3, #0
 844 00c6 09DA     		bge	.L56
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 845              		.loc 2 514 0
 846 00c8 3B68     		ldr	r3, [r7]
 847 00ca 1800     		movs	r0, r3
 848 00cc FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 849 00d0 0300     		movs	r3, r0
 850 00d2 FB60     		str	r3, [r7, #12]
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 851              		.loc 2 515 0
 852 00d4 124B     		ldr	r3, .L61+24
 853 00d6 0022     		movs	r2, #0
 854 00d8 1A60     		str	r2, [r3]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 855              		.loc 2 464 0
 856 00da 0FE0     		b	.L58
 857              	.L56:
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 858              		.loc 2 519 0
 859 00dc 0723     		movs	r3, #7
 860 00de FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 861              		.loc 2 464 0
 862 00e0 0CE0     		b	.L58
 863              	.L55:
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 38


 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 864              		.loc 2 525 0
 865 00e2 0E4A     		ldr	r2, .L61+20
 866 00e4 0C4B     		ldr	r3, .L61+16
 867 00e6 1B68     		ldr	r3, [r3]
 868 00e8 9B0A     		lsrs	r3, r3, #10
 869 00ea 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 870              		.loc 2 526 0
 871 00ec 0C4B     		ldr	r3, .L61+24
 872 00ee 0122     		movs	r2, #1
 873 00f0 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 874              		.loc 2 527 0
 875 00f2 0723     		movs	r3, #7
 876 00f4 FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 877              		.loc 2 464 0
 878 00f6 01E0     		b	.L58
 879              	.L44:
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 880              		.loc 2 533 0
 881 00f8 1123     		movs	r3, #17
 882 00fa FB60     		str	r3, [r7, #12]
 883              	.L58:
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 884              		.loc 2 536 0
 885 00fc FB68     		ldr	r3, [r7, #12]
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 886              		.loc 2 537 0
 887 00fe 1800     		movs	r0, r3
 888 0100 BD46     		mov	sp, r7
 889 0102 06B0     		add	sp, sp, #24
 890              		@ sp needed
 891 0104 80BD     		pop	{r7, pc}
 892              	.L62:
 893 0106 C046     		.align	2
 894              	.L61:
 895 0108 10010B40 		.word	1074462992
 896 010c 3F3F0000 		.word	16191
 897 0110 08000340 		.word	1073938440
 898 0114 0A0B0000 		.word	2826
 899 0118 00000000 		.word	cydelayFreqHz
 900 011c 18000340 		.word	1073938456
 901 0120 20000000 		.word	trimRunningStatus.4898
 902              		.cfi_endproc
 903              	.LFE8:
 904              		.size	CySysClkIloTrim, .-CySysClkIloTrim
 905              		.global	__aeabi_idiv
 906              		.section	.text.CySysClkIloUpdateTrimReg,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 39


 907              		.align	2
 908              		.global	CySysClkIloUpdateTrimReg
 909              		.code	16
 910              		.thumb_func
 911              		.type	CySysClkIloUpdateTrimReg, %function
 912              	CySysClkIloUpdateTrimReg:
 913              	.LFB9:
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 914              		.loc 2 572 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 32
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918 0000 80B5     		push	{r7, lr}
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 7, -8
 921              		.cfi_offset 14, -4
 922 0002 88B0     		sub	sp, sp, #32
 923              		.cfi_def_cfa_offset 40
 924 0004 00AF     		add	r7, sp, #0
 925              		.cfi_def_cfa_register 7
 926 0006 7860     		str	r0, [r7, #4]
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 40


 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 927              		.loc 2 579 0
 928 0008 374B     		ldr	r3, .L73
 929 000a 1B68     		ldr	r3, [r3]
 930 000c 002B     		cmp	r3, #0
 931 000e 64D0     		beq	.L64
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 932              		.loc 2 581 0
 933 0010 354B     		ldr	r3, .L73
 934 0012 1A68     		ldr	r2, [r3]
 935 0014 354B     		ldr	r3, .L73+4
 936 0016 1B68     		ldr	r3, [r3]
 937 0018 5A43     		muls	r2, r3
 938 001a 344B     		ldr	r3, .L73+4
 939 001c 1B68     		ldr	r3, [r3]
 940 001e 9B0A     		lsrs	r3, r3, #10
 941 0020 1900     		movs	r1, r3
 942 0022 1000     		movs	r0, r2
 943 0024 FFF7FEFF 		bl	__aeabi_uidiv
 944 0028 0300     		movs	r3, r0
 945 002a 7B61     		str	r3, [r7, #20]
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 946              		.loc 2 585 0
 947 002c 7B69     		ldr	r3, [r7, #20]
 948 002e 304A     		ldr	r2, .L73+8
 949 0030 9446     		mov	ip, r2
 950 0032 6344     		add	r3, r3, ip
 951 0034 FA22     		movs	r2, #250
 952 0036 9200     		lsls	r2, r2, #2
 953 0038 5A43     		muls	r2, r3
 954 003a FA23     		movs	r3, #250
 955 003c D901     		lsls	r1, r3, #7
 956 003e 1000     		movs	r0, r2
 957 0040 FFF7FEFF 		bl	__aeabi_idiv
 958 0044 0300     		movs	r3, r0
 959 0046 3B61     		str	r3, [r7, #16]
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 960              		.loc 2 589 0
 961 0048 3B69     		ldr	r3, [r7, #16]
 962 004a DA17     		asrs	r2, r3, #31
 963 004c 9B18     		adds	r3, r3, r2
 964 004e 5340     		eors	r3, r2
 965 0050 382B     		cmp	r3, #56
 966 0052 3CD9     		bls	.L65
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 41


 967              		.loc 2 591 0
 968 0054 3B69     		ldr	r3, [r7, #16]
 969 0056 002B     		cmp	r3, #0
 970 0058 0DDD     		ble	.L66
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 971              		.loc 2 593 0
 972 005a 3A69     		ldr	r2, [r7, #16]
 973 005c 1300     		movs	r3, r2
 974 005e 9B00     		lsls	r3, r3, #2
 975 0060 9B18     		adds	r3, r3, r2
 976 0062 5B00     		lsls	r3, r3, #1
 977 0064 7133     		adds	r3, r3, #113
 978 0066 FF33     		adds	r3, r3, #255
 979 0068 2249     		ldr	r1, .L73+12
 980 006a 1800     		movs	r0, r3
 981 006c FFF7FEFF 		bl	__aeabi_idiv
 982 0070 0300     		movs	r3, r0
 983 0072 FB61     		str	r3, [r7, #28]
 984 0074 0CE0     		b	.L67
 985              	.L66:
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 986              		.loc 2 598 0
 987 0076 3A69     		ldr	r2, [r7, #16]
 988 0078 1300     		movs	r3, r2
 989 007a 9B00     		lsls	r3, r3, #2
 990 007c 9B18     		adds	r3, r3, r2
 991 007e 5B00     		lsls	r3, r3, #1
 992 0080 713B     		subs	r3, r3, #113
 993 0082 FF3B     		subs	r3, r3, #255
 994 0084 1B49     		ldr	r1, .L73+12
 995 0086 1800     		movs	r0, r3
 996 0088 FFF7FEFF 		bl	__aeabi_idiv
 997 008c 0300     		movs	r3, r0
 998 008e FB61     		str	r3, [r7, #28]
 999              	.L67:
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 1000              		.loc 2 601 0
 1001 0090 194B     		ldr	r3, .L73+16
 1002 0092 1B68     		ldr	r3, [r3]
 1003 0094 0F22     		movs	r2, #15
 1004 0096 1340     		ands	r3, r2
 1005 0098 FB60     		str	r3, [r7, #12]
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 1006              		.loc 2 602 0
 1007 009a FA68     		ldr	r2, [r7, #12]
 1008 009c FB69     		ldr	r3, [r7, #28]
 1009 009e D31A     		subs	r3, r2, r3
 1010 00a0 FB61     		str	r3, [r7, #28]
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 42


 1011              		.loc 2 604 0
 1012 00a2 FB69     		ldr	r3, [r7, #28]
 1013 00a4 0F2B     		cmp	r3, #15
 1014 00a6 01DD     		ble	.L68
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 1015              		.loc 2 606 0
 1016 00a8 0F23     		movs	r3, #15
 1017 00aa FB61     		str	r3, [r7, #28]
 1018              	.L68:
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 1019              		.loc 2 608 0
 1020 00ac FB69     		ldr	r3, [r7, #28]
 1021 00ae 002B     		cmp	r3, #0
 1022 00b0 01DA     		bge	.L69
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 1023              		.loc 2 610 0
 1024 00b2 0023     		movs	r3, #0
 1025 00b4 FB61     		str	r3, [r7, #28]
 1026              	.L69:
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 1027              		.loc 2 612 0
 1028 00b6 104B     		ldr	r3, .L73+16
 1029 00b8 0F4A     		ldr	r2, .L73+16
 1030 00ba 1268     		ldr	r2, [r2]
 1031 00bc 0F21     		movs	r1, #15
 1032 00be 8A43     		bics	r2, r1
 1033 00c0 1100     		movs	r1, r2
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 1034              		.loc 2 613 0
 1035 00c2 FA69     		ldr	r2, [r7, #28]
 612:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 1036              		.loc 2 612 0
 1037 00c4 0A43     		orrs	r2, r1
 1038 00c6 1A60     		str	r2, [r3]
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 1039              		.loc 2 614 0
 1040 00c8 0723     		movs	r3, #7
 1041 00ca BB61     		str	r3, [r7, #24]
 1042 00cc 07E0     		b	.L71
 1043              	.L65:
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 1044              		.loc 2 619 0
 1045 00ce 7B68     		ldr	r3, [r7, #4]
 1046 00d0 3A69     		ldr	r2, [r7, #16]
 1047 00d2 1A60     		str	r2, [r3]
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 1048              		.loc 2 620 0
 1049 00d4 0023     		movs	r3, #0
 1050 00d6 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 43


 1051 00d8 01E0     		b	.L71
 1052              	.L64:
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 1053              		.loc 2 625 0
 1054 00da 1123     		movs	r3, #17
 1055 00dc BB61     		str	r3, [r7, #24]
 1056              	.L71:
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 1057              		.loc 2 627 0
 1058 00de BB69     		ldr	r3, [r7, #24]
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 1059              		.loc 2 628 0
 1060 00e0 1800     		movs	r0, r3
 1061 00e2 BD46     		mov	sp, r7
 1062 00e4 08B0     		add	sp, sp, #32
 1063              		@ sp needed
 1064 00e6 80BD     		pop	{r7, pc}
 1065              	.L74:
 1066              		.align	2
 1067              	.L73:
 1068 00e8 1C000340 		.word	1073938460
 1069 00ec 00000000 		.word	cydelayFreqHz
 1070 00f0 0083FFFF 		.word	-32000
 1071 00f4 E1020000 		.word	737
 1072 00f8 24FF0B40 		.word	1074528036
 1073              		.cfi_endproc
 1074              	.LFE9:
 1075              		.size	CySysClkIloUpdateTrimReg, .-CySysClkIloUpdateTrimReg
 1076              		.section	.text.CySysClkIloRestoreFactoryTrim,"ax",%progbits
 1077              		.align	2
 1078              		.global	CySysClkIloRestoreFactoryTrim
 1079              		.code	16
 1080              		.thumb_func
 1081              		.type	CySysClkIloRestoreFactoryTrim, %function
 1082              	CySysClkIloRestoreFactoryTrim:
 1083              	.LFB10:
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 44


 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 1084              		.loc 2 649 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 8
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088 0000 80B5     		push	{r7, lr}
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 82B0     		sub	sp, sp, #8
 1093              		.cfi_def_cfa_offset 16
 1094 0004 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 1096              		.loc 2 650 0
 1097 0006 0023     		movs	r3, #0
 1098 0008 7B60     		str	r3, [r7, #4]
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 1099              		.loc 2 653 0
 1100 000a 0E4B     		ldr	r3, .L79
 1101 000c 1B88     		ldrh	r3, [r3]
 1102 000e 9BB2     		uxth	r3, r3
 1103 0010 F02B     		cmp	r3, #240
 1104 0012 0ED0     		beq	.L76
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 1105              		.loc 2 655 0
 1106 0014 0C4B     		ldr	r3, .L79+4
 1107 0016 0C4A     		ldr	r2, .L79+4
 1108 0018 1268     		ldr	r2, [r2]
 1109 001a 0F21     		movs	r1, #15
 1110 001c 8A43     		bics	r2, r1
 1111 001e 1100     		movs	r1, r2
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 1112              		.loc 2 656 0
 1113 0020 084A     		ldr	r2, .L79
 1114 0022 1288     		ldrh	r2, [r2]
 1115 0024 92B2     		uxth	r2, r2
 1116 0026 1000     		movs	r0, r2
 1117 0028 0F22     		movs	r2, #15
 1118 002a 0240     		ands	r2, r0
 655:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 1119              		.loc 2 655 0
 1120 002c 0A43     		orrs	r2, r1
 1121 002e 1A60     		str	r2, [r3]
 1122 0030 02E0     		b	.L77
 1123              	.L76:
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 45


 1124              		.loc 2 660 0
 1125 0032 0123     		movs	r3, #1
 1126 0034 5B42     		rsbs	r3, r3, #0
 1127 0036 7B60     		str	r3, [r7, #4]
 1128              	.L77:
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 1129              		.loc 2 663 0
 1130 0038 7B68     		ldr	r3, [r7, #4]
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 1131              		.loc 2 664 0
 1132 003a 1800     		movs	r0, r3
 1133 003c BD46     		mov	sp, r7
 1134 003e 02B0     		add	sp, sp, #8
 1135              		@ sp needed
 1136 0040 80BD     		pop	{r7, pc}
 1137              	.L80:
 1138 0042 C046     		.align	2
 1139              	.L79:
 1140 0044 00000000 		.word	defaultIloTrimRegValue
 1141 0048 24FF0B40 		.word	1074528036
 1142              		.cfi_endproc
 1143              	.LFE10:
 1144              		.size	CySysClkIloRestoreFactoryTrim, .-CySysClkIloRestoreFactoryTrim
 1145              		.section	.text.CySysClkGetLfclkSource,"ax",%progbits
 1146              		.align	2
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	CySysClkGetLfclkSource, %function
 1150              	CySysClkGetLfclkSource:
 1151              	.LFB11:
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 1152              		.loc 2 686 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 46


 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156 0000 80B5     		push	{r7, lr}
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 82B0     		sub	sp, sp, #8
 1161              		.cfi_def_cfa_offset 16
 1162 0004 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 1164              		.loc 2 688 0
 1165 0006 054B     		ldr	r3, .L83
 1166 0008 1B68     		ldr	r3, [r3]
 1167 000a 9B0F     		lsrs	r3, r3, #30
 1168 000c 9B07     		lsls	r3, r3, #30
 1169 000e 7B60     		str	r3, [r7, #4]
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 1170              		.loc 2 689 0
 1171 0010 7B68     		ldr	r3, [r7, #4]
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 1172              		.loc 2 690 0
 1173 0012 1800     		movs	r0, r3
 1174 0014 BD46     		mov	sp, r7
 1175 0016 02B0     		add	sp, sp, #8
 1176              		@ sp needed
 1177 0018 80BD     		pop	{r7, pc}
 1178              	.L84:
 1179 001a C046     		.align	2
 1180              	.L83:
 1181 001c 0C020B40 		.word	1074463244
 1182              		.cfi_endproc
 1183              	.LFE11:
 1184              		.size	CySysClkGetLfclkSource, .-CySysClkGetLfclkSource
 1185              		.section	.text.CySysClkSetLfclkSource,"ax",%progbits
 1186              		.align	2
 1187              		.global	CySysClkSetLfclkSource
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	CySysClkSetLfclkSource, %function
 1191              	CySysClkSetLfclkSource:
 1192              	.LFB12:
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 47


 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 1193              		.loc 2 735 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 16
 1196              		@ frame_needed = 1, uses_anonymous_args = 0
 1197 0000 90B5     		push	{r4, r7, lr}
 1198              		.cfi_def_cfa_offset 12
 1199              		.cfi_offset 4, -12
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 85B0     		sub	sp, sp, #20
 1203              		.cfi_def_cfa_offset 32
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 7860     		str	r0, [r7, #4]
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 1207              		.loc 2 738 0
 1208 0008 FFF7FEFF 		bl	CySysClkGetLfclkSource
 1209 000c 0200     		movs	r2, r0
 1210 000e 7B68     		ldr	r3, [r7, #4]
 1211 0010 9A42     		cmp	r2, r3
 1212 0012 19D0     		beq	.L87
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1213              		.loc 2 740 0
 1214 0014 0F23     		movs	r3, #15
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 48


 1215 0016 FC18     		adds	r4, r7, r3
 1216 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 1217 001c 0300     		movs	r3, r0
 1218 001e 2370     		strb	r3, [r4]
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 1219              		.loc 2 741 0
 1220 0020 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 1221              		.loc 2 742 0
 1222 0024 0A4B     		ldr	r3, .L88
 1223 0026 0A4A     		ldr	r2, .L88
 1224 0028 1268     		ldr	r2, [r2]
 1225 002a 9200     		lsls	r2, r2, #2
 1226 002c 9108     		lsrs	r1, r2, #2
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 1227              		.loc 2 743 0
 1228 002e 7A68     		ldr	r2, [r7, #4]
 1229 0030 920F     		lsrs	r2, r2, #30
 1230 0032 9207     		lsls	r2, r2, #30
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 1231              		.loc 2 742 0
 1232 0034 0A43     		orrs	r2, r1
 1233 0036 1A60     		str	r2, [r3]
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 1234              		.loc 2 744 0
 1235 0038 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1236              		.loc 2 745 0
 1237 003c 0F23     		movs	r3, #15
 1238 003e FB18     		adds	r3, r7, r3
 1239 0040 1B78     		ldrb	r3, [r3]
 1240 0042 1800     		movs	r0, r3
 1241 0044 FFF7FEFF 		bl	CyExitCriticalSection
 1242              	.L87:
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 1243              		.loc 2 747 0
 1244 0048 C046     		nop
 1245 004a BD46     		mov	sp, r7
 1246 004c 05B0     		add	sp, sp, #20
 1247              		@ sp needed
 1248 004e 90BD     		pop	{r4, r7, pc}
 1249              	.L89:
 1250              		.align	2
 1251              	.L88:
 1252 0050 0C020B40 		.word	1074463244
 1253              		.cfi_endproc
 1254              	.LFE12:
 1255              		.size	CySysClkSetLfclkSource, .-CySysClkSetLfclkSource
 1256              		.section	.text.CySysClkWcoStart,"ax",%progbits
 1257              		.align	2
 1258              		.global	CySysClkWcoStart
 1259              		.code	16
 1260              		.thumb_func
 1261              		.type	CySysClkWcoStart, %function
 1262              	CySysClkWcoStart:
 1263              	.LFB13:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 49


 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 1264              		.loc 2 772 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 1, uses_anonymous_args = 0
 1268 0000 80B5     		push	{r7, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
 1272 0002 00AF     		add	r7, sp, #0
 1273              		.cfi_def_cfa_register 7
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 1274              		.loc 2 773 0
 1275 0004 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1276              		.loc 2 774 0
 1277 0008 044B     		ldr	r3, .L91
 1278 000a 044A     		ldr	r2, .L91
 1279 000c 1268     		ldr	r2, [r2]
 1280 000e 8021     		movs	r1, #128
 1281 0010 0906     		lsls	r1, r1, #24
 1282 0012 0A43     		orrs	r2, r1
 1283 0014 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 1284              		.loc 2 775 0
 1285 0016 C046     		nop
 1286 0018 BD46     		mov	sp, r7
 1287              		@ sp needed
 1288 001a 80BD     		pop	{r7, pc}
 1289              	.L92:
 1290              		.align	2
 1291              	.L91:
 1292 001c 00F02E40 		.word	1076817920
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 50


 1293              		.cfi_endproc
 1294              	.LFE13:
 1295              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 1296              		.section	.text.CySysClkWcoStop,"ax",%progbits
 1297              		.align	2
 1298              		.global	CySysClkWcoStop
 1299              		.code	16
 1300              		.thumb_func
 1301              		.type	CySysClkWcoStop, %function
 1302              	CySysClkWcoStop:
 1303              	.LFB14:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 1304              		.loc 2 790 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 8
 1307              		@ frame_needed = 1, uses_anonymous_args = 0
 1308 0000 90B5     		push	{r4, r7, lr}
 1309              		.cfi_def_cfa_offset 12
 1310              		.cfi_offset 4, -12
 1311              		.cfi_offset 7, -8
 1312              		.cfi_offset 14, -4
 1313 0002 83B0     		sub	sp, sp, #12
 1314              		.cfi_def_cfa_offset 24
 1315 0004 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1317              		.loc 2 795 0
 1318 0006 FFF7FEFF 		bl	CySysClkWcoEnabled
 1319 000a 031E     		subs	r3, r0, #0
 1320 000c 21D0     		beq	.L96
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 1321              		.loc 2 798 0
 1322 000e FFF7FEFF 		bl	CySysClkGetLfclkSource
 1323 0012 0200     		movs	r2, r0
 1324 0014 8023     		movs	r3, #128
 1325 0016 DB05     		lsls	r3, r3, #23
 1326 0018 9A42     		cmp	r2, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 51


 1327 001a 14D1     		bne	.L95
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 1328              		.loc 2 800 0
 1329 001c FC1D     		adds	r4, r7, #7
 1330 001e FFF7FEFF 		bl	CyEnterCriticalSection
 1331 0022 0300     		movs	r3, r0
 1332 0024 2370     		strb	r3, [r4]
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 1333              		.loc 2 801 0
 1334 0026 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1335              		.loc 2 802 0
 1336 002a 0C4B     		ldr	r3, .L97
 1337 002c 0B4A     		ldr	r2, .L97
 1338 002e 1268     		ldr	r2, [r2]
 1339 0030 5200     		lsls	r2, r2, #1
 1340 0032 5208     		lsrs	r2, r2, #1
 1341 0034 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 1342              		.loc 2 803 0
 1343 0036 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 1344              		.loc 2 804 0
 1345 003a FB1D     		adds	r3, r7, #7
 1346 003c 1B78     		ldrb	r3, [r3]
 1347 003e 1800     		movs	r0, r3
 1348 0040 FFF7FEFF 		bl	CyExitCriticalSection
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 1349              		.loc 2 812 0
 1350 0044 05E0     		b	.L96
 1351              	.L95:
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 1352              		.loc 2 809 0
 1353 0046 054B     		ldr	r3, .L97
 1354 0048 044A     		ldr	r2, .L97
 1355 004a 1268     		ldr	r2, [r2]
 1356 004c 5200     		lsls	r2, r2, #1
 1357 004e 5208     		lsrs	r2, r2, #1
 1358 0050 1A60     		str	r2, [r3]
 1359              	.L96:
 1360              		.loc 2 812 0
 1361 0052 C046     		nop
 1362 0054 BD46     		mov	sp, r7
 1363 0056 03B0     		add	sp, sp, #12
 1364              		@ sp needed
 1365 0058 90BD     		pop	{r4, r7, pc}
 1366              	.L98:
 1367 005a C046     		.align	2
 1368              	.L97:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 52


 1369 005c 00F02E40 		.word	1076817920
 1370              		.cfi_endproc
 1371              	.LFE14:
 1372              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 1373              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 1374              		.align	2
 1375              		.global	CySysClkWcoEnabled
 1376              		.code	16
 1377              		.thumb_func
 1378              		.type	CySysClkWcoEnabled, %function
 1379              	CySysClkWcoEnabled:
 1380              	.LFB15:
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 1381              		.loc 2 825 0
 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 0
 1384              		@ frame_needed = 1, uses_anonymous_args = 0
 1385 0000 80B5     		push	{r7, lr}
 1386              		.cfi_def_cfa_offset 8
 1387              		.cfi_offset 7, -8
 1388              		.cfi_offset 14, -4
 1389 0002 00AF     		add	r7, sp, #0
 1390              		.cfi_def_cfa_register 7
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 1391              		.loc 2 826 0
 1392 0004 044B     		ldr	r3, .L103
 1393 0006 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 1394              		.loc 2 827 0
 1395 0008 002B     		cmp	r3, #0
 1396 000a 01DA     		bge	.L100
 1397              		.loc 2 827 0 is_stmt 0 discriminator 1
 1398 000c 0123     		movs	r3, #1
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 1399              		.loc 2 826 0 is_stmt 1 discriminator 1
 1400 000e 00E0     		b	.L102
 1401              	.L100:
 1402              		.loc 2 827 0 discriminator 2
 1403 0010 0023     		movs	r3, #0
 1404              	.L102:
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 1405              		.loc 2 829 0 discriminator 1
 1406 0012 1800     		movs	r0, r3
 1407 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 53


 1408              		@ sp needed
 1409 0016 80BD     		pop	{r7, pc}
 1410              	.L104:
 1411              		.align	2
 1412              	.L103:
 1413 0018 00F02E40 		.word	1076817920
 1414              		.cfi_endproc
 1415              	.LFE15:
 1416              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 1417              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 1418              		.align	2
 1419              		.global	CySysClkWcoSetPowerMode
 1420              		.code	16
 1421              		.thumb_func
 1422              		.type	CySysClkWcoSetPowerMode, %function
 1423              	CySysClkWcoSetPowerMode:
 1424              	.LFB16:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 1425              		.loc 2 852 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 16
 1428              		@ frame_needed = 1, uses_anonymous_args = 0
 1429 0000 80B5     		push	{r7, lr}
 1430              		.cfi_def_cfa_offset 8
 1431              		.cfi_offset 7, -8
 1432              		.cfi_offset 14, -4
 1433 0002 84B0     		sub	sp, sp, #16
 1434              		.cfi_def_cfa_offset 24
 1435 0004 00AF     		add	r7, sp, #0
 1436              		.cfi_def_cfa_register 7
 1437 0006 7860     		str	r0, [r7, #4]
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 1438              		.loc 2 855 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 54


 1439 0008 0C4B     		ldr	r3, .L112
 1440 000a 1B68     		ldr	r3, [r3]
 1441 000c 0122     		movs	r2, #1
 1442 000e 1340     		ands	r3, r2
 1443 0010 FB60     		str	r3, [r7, #12]
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 1444              		.loc 2 857 0
 1445 0012 7B68     		ldr	r3, [r7, #4]
 1446 0014 002B     		cmp	r3, #0
 1447 0016 02D0     		beq	.L107
 1448 0018 012B     		cmp	r3, #1
 1449 001a 03D0     		beq	.L108
 1450 001c 05E0     		b	.L111
 1451              	.L107:
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 1452              		.loc 2 860 0
 1453 001e FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1454              		.loc 2 861 0
 1455 0022 06E0     		b	.L109
 1456              	.L108:
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 1457              		.loc 2 865 0
 1458 0024 FFF7FEFF 		bl	CySysClkWcoSetLowPowerMode
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 1459              		.loc 2 866 0
 1460 0028 03E0     		b	.L109
 1461              	.L111:
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1462              		.loc 2 870 0
 1463 002a 0020     		movs	r0, #0
 1464 002c FFF7FEFF 		bl	CyHalt
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1465              		.loc 2 871 0
 1466 0030 C046     		nop
 1467              	.L109:
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 1468              		.loc 2 874 0
 1469 0032 FB68     		ldr	r3, [r7, #12]
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 1470              		.loc 2 875 0
 1471 0034 1800     		movs	r0, r3
 1472 0036 BD46     		mov	sp, r7
 1473 0038 04B0     		add	sp, sp, #16
 1474              		@ sp needed
 1475 003a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 55


 1476              	.L113:
 1477              		.align	2
 1478              	.L112:
 1479 003c 00F02E40 		.word	1076817920
 1480              		.cfi_endproc
 1481              	.LFE16:
 1482              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 1483              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 1484              		.align	2
 1485              		.global	CySysClkWcoClockOutSelect
 1486              		.code	16
 1487              		.thumb_func
 1488              		.type	CySysClkWcoClockOutSelect, %function
 1489              	CySysClkWcoClockOutSelect:
 1490              	.LFB17:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 56


 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 1491              		.loc 2 919 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495 0000 80B5     		push	{r7, lr}
 1496              		.cfi_def_cfa_offset 8
 1497              		.cfi_offset 7, -8
 1498              		.cfi_offset 14, -4
 1499 0002 82B0     		sub	sp, sp, #8
 1500              		.cfi_def_cfa_offset 16
 1501 0004 00AF     		add	r7, sp, #0
 1502              		.cfi_def_cfa_register 7
 1503 0006 7860     		str	r0, [r7, #4]
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1504              		.loc 2 920 0
 1505 0008 FFF7FEFF 		bl	CySysClkWcoEnabled
 1506 000c 031E     		subs	r3, r0, #0
 1507 000e 10D0     		beq	.L117
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 1508              		.loc 2 922 0
 1509 0010 7B68     		ldr	r3, [r7, #4]
 1510 0012 012B     		cmp	r3, #1
 1511 0014 0AD8     		bhi	.L116
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 1512              		.loc 2 924 0
 1513 0016 094B     		ldr	r3, .L118
 1514 0018 084A     		ldr	r2, .L118
 1515 001a 1268     		ldr	r2, [r2]
 1516 001c 0421     		movs	r1, #4
 1517 001e 8A43     		bics	r2, r1
 1518 0020 1100     		movs	r1, r2
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1519              		.loc 2 925 0
 1520 0022 7A68     		ldr	r2, [r7, #4]
 1521 0024 9200     		lsls	r2, r2, #2
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1522              		.loc 2 924 0
 1523 0026 0A43     		orrs	r2, r1
 1524 0028 1A60     		str	r2, [r3]
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 1525              		.loc 2 932 0
 1526 002a 02E0     		b	.L117
 1527              	.L116:
 929:Generated_Source\PSoC4/CyLFClk.c ****             }
 1528              		.loc 2 929 0 discriminator 1
 1529 002c 0020     		movs	r0, #0
 1530 002e FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 57


 1531              	.L117:
 1532              		.loc 2 932 0
 1533 0032 C046     		nop
 1534 0034 BD46     		mov	sp, r7
 1535 0036 02B0     		add	sp, sp, #8
 1536              		@ sp needed
 1537 0038 80BD     		pop	{r7, pc}
 1538              	.L119:
 1539 003a C046     		.align	2
 1540              	.L118:
 1541 003c 00F02E40 		.word	1076817920
 1542              		.cfi_endproc
 1543              	.LFE17:
 1544              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 1545              		.section	.text.CySysWdtLock,"ax",%progbits
 1546              		.align	2
 1547              		.global	CySysWdtLock
 1548              		.code	16
 1549              		.thumb_func
 1550              		.type	CySysWdtLock, %function
 1551              	CySysWdtLock:
 1552              	.LFB18:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 1553              		.loc 2 949 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 8
 1556              		@ frame_needed = 1, uses_anonymous_args = 0
 1557 0000 90B5     		push	{r4, r7, lr}
 1558              		.cfi_def_cfa_offset 12
 1559              		.cfi_offset 4, -12
 1560              		.cfi_offset 7, -8
 1561              		.cfi_offset 14, -4
 1562 0002 83B0     		sub	sp, sp, #12
 1563              		.cfi_def_cfa_offset 24
 1564 0004 00AF     		add	r7, sp, #0
 1565              		.cfi_def_cfa_register 7
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1566              		.loc 2 951 0
 1567 0006 FC1D     		adds	r4, r7, #7
 1568 0008 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 58


 1569 000c 0300     		movs	r3, r0
 1570 000e 2370     		strb	r3, [r4]
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 1571              		.loc 2 953 0
 1572 0010 074B     		ldr	r3, .L121
 1573 0012 074A     		ldr	r2, .L121
 1574 0014 1268     		ldr	r2, [r2]
 1575 0016 C021     		movs	r1, #192
 1576 0018 0902     		lsls	r1, r1, #8
 1577 001a 0A43     		orrs	r2, r1
 1578 001c 1A60     		str	r2, [r3]
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1579              		.loc 2 956 0
 1580 001e FB1D     		adds	r3, r7, #7
 1581 0020 1B78     		ldrb	r3, [r3]
 1582 0022 1800     		movs	r0, r3
 1583 0024 FFF7FEFF 		bl	CyExitCriticalSection
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 1584              		.loc 2 957 0
 1585 0028 C046     		nop
 1586 002a BD46     		mov	sp, r7
 1587 002c 03B0     		add	sp, sp, #12
 1588              		@ sp needed
 1589 002e 90BD     		pop	{r4, r7, pc}
 1590              	.L122:
 1591              		.align	2
 1592              	.L121:
 1593 0030 00010B40 		.word	1074462976
 1594              		.cfi_endproc
 1595              	.LFE18:
 1596              		.size	CySysWdtLock, .-CySysWdtLock
 1597              		.section	.text.CySysWdtLocked,"ax",%progbits
 1598              		.align	2
 1599              		.code	16
 1600              		.thumb_func
 1601              		.type	CySysWdtLocked, %function
 1602              	CySysWdtLocked:
 1603              	.LFB19:
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 1604              		.loc 2 970 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 59


 1607              		@ frame_needed = 1, uses_anonymous_args = 0
 1608 0000 80B5     		push	{r7, lr}
 1609              		.cfi_def_cfa_offset 8
 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
 1612 0002 00AF     		add	r7, sp, #0
 1613              		.cfi_def_cfa_register 7
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 1614              		.loc 2 972 0
 1615 0004 054B     		ldr	r3, .L127
 1616 0006 1A68     		ldr	r2, [r3]
 1617 0008 C023     		movs	r3, #192
 1618 000a 1B02     		lsls	r3, r3, #8
 1619 000c 1340     		ands	r3, r2
 1620 000e 01D0     		beq	.L124
 1621              		.loc 2 972 0 is_stmt 0 discriminator 1
 1622 0010 0123     		movs	r3, #1
 1623 0012 00E0     		b	.L126
 1624              	.L124:
 1625              		.loc 2 972 0 discriminator 2
 1626 0014 0023     		movs	r3, #0
 1627              	.L126:
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 1628              		.loc 2 973 0 is_stmt 1 discriminator 5
 1629 0016 1800     		movs	r0, r3
 1630 0018 BD46     		mov	sp, r7
 1631              		@ sp needed
 1632 001a 80BD     		pop	{r7, pc}
 1633              	.L128:
 1634              		.align	2
 1635              	.L127:
 1636 001c 00010B40 		.word	1074462976
 1637              		.cfi_endproc
 1638              	.LFE19:
 1639              		.size	CySysWdtLocked, .-CySysWdtLocked
 1640              		.section	.text.CySysWdtUnlock,"ax",%progbits
 1641              		.align	2
 1642              		.global	CySysWdtUnlock
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	CySysWdtUnlock, %function
 1646              	CySysWdtUnlock:
 1647              	.LFB20:
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 1648              		.loc 2 984 0
 1649              		.cfi_startproc
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 60


 1650              		@ args = 0, pretend = 0, frame = 8
 1651              		@ frame_needed = 1, uses_anonymous_args = 0
 1652 0000 90B5     		push	{r4, r7, lr}
 1653              		.cfi_def_cfa_offset 12
 1654              		.cfi_offset 4, -12
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0002 83B0     		sub	sp, sp, #12
 1658              		.cfi_def_cfa_offset 24
 1659 0004 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1661              		.loc 2 986 0
 1662 0006 FC1D     		adds	r4, r7, #7
 1663 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1664 000c 0300     		movs	r3, r0
 1665 000e 2370     		strb	r3, [r4]
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1666              		.loc 2 989 0
 1667 0010 0D4B     		ldr	r3, .L130
 1668 0012 0D4A     		ldr	r2, .L130
 1669 0014 1268     		ldr	r2, [r2]
 1670 0016 0D49     		ldr	r1, .L130+4
 1671 0018 0A40     		ands	r2, r1
 1672 001a 8021     		movs	r1, #128
 1673 001c C901     		lsls	r1, r1, #7
 1674 001e 0A43     		orrs	r2, r1
 1675 0020 1A60     		str	r2, [r3]
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1676              		.loc 2 992 0
 1677 0022 094B     		ldr	r3, .L130
 1678 0024 084A     		ldr	r2, .L130
 1679 0026 1268     		ldr	r2, [r2]
 1680 0028 0849     		ldr	r1, .L130+4
 1681 002a 0A40     		ands	r2, r1
 1682 002c 8021     		movs	r1, #128
 1683 002e 0902     		lsls	r1, r1, #8
 1684 0030 0A43     		orrs	r2, r1
 1685 0032 1A60     		str	r2, [r3]
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1686              		.loc 2 995 0
 1687 0034 FB1D     		adds	r3, r7, #7
 1688 0036 1B78     		ldrb	r3, [r3]
 1689 0038 1800     		movs	r0, r3
 1690 003a FFF7FEFF 		bl	CyExitCriticalSection
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 1691              		.loc 2 996 0
 1692 003e C046     		nop
 1693 0040 BD46     		mov	sp, r7
 1694 0042 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 61


 1695              		@ sp needed
 1696 0044 90BD     		pop	{r4, r7, pc}
 1697              	.L131:
 1698 0046 C046     		.align	2
 1699              	.L130:
 1700 0048 00010B40 		.word	1074462976
 1701 004c FF3FFFFF 		.word	-49153
 1702              		.cfi_endproc
 1703              	.LFE20:
 1704              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 1705              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 1706              		.align	2
 1707              		.global	CySysWdtGetEnabledStatus
 1708              		.code	16
 1709              		.thumb_func
 1710              		.type	CySysWdtGetEnabledStatus, %function
 1711              	CySysWdtGetEnabledStatus:
 1712              	.LFB21:
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
 1713              		.loc 2 1018 0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 8
 1716              		@ frame_needed = 1, uses_anonymous_args = 0
 1717 0000 80B5     		push	{r7, lr}
 1718              		.cfi_def_cfa_offset 8
 1719              		.cfi_offset 7, -8
 1720              		.cfi_offset 14, -4
 1721 0002 82B0     		sub	sp, sp, #8
 1722              		.cfi_def_cfa_offset 16
 1723 0004 00AF     		add	r7, sp, #0
 1724              		.cfi_def_cfa_register 7
 1725 0006 7860     		str	r0, [r7, #4]
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1726              		.loc 2 1019 0
 1727 0008 7B68     		ldr	r3, [r7, #4]
 1728 000a 022B     		cmp	r3, #2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 62


 1729 000c 02D9     		bls	.L133
 1730              		.loc 2 1019 0 is_stmt 0 discriminator 1
 1731 000e 0020     		movs	r0, #0
 1732 0010 FFF7FEFF 		bl	CyHalt
 1733              	.L133:
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 1734              		.loc 2 1020 0 is_stmt 1
 1735 0014 064B     		ldr	r3, .L135
 1736 0016 1A68     		ldr	r2, [r3]
 1737 0018 7B68     		ldr	r3, [r7, #4]
 1738 001a DB00     		lsls	r3, r3, #3
 1739 001c 0133     		adds	r3, r3, #1
 1740 001e DA40     		lsrs	r2, r2, r3
 1741 0020 1300     		movs	r3, r2
 1742 0022 0122     		movs	r2, #1
 1743 0024 1340     		ands	r3, r2
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
 1744              		.loc 2 1021 0
 1745 0026 1800     		movs	r0, r3
 1746 0028 BD46     		mov	sp, r7
 1747 002a 02B0     		add	sp, sp, #8
 1748              		@ sp needed
 1749 002c 80BD     		pop	{r7, pc}
 1750              	.L136:
 1751 002e C046     		.align	2
 1752              	.L135:
 1753 0030 10020B40 		.word	1074463248
 1754              		.cfi_endproc
 1755              	.LFE21:
 1756              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 1757              		.section	.text.CySysWdtSetMode,"ax",%progbits
 1758              		.align	2
 1759              		.global	CySysWdtSetMode
 1760              		.code	16
 1761              		.thumb_func
 1762              		.type	CySysWdtSetMode, %function
 1763              	CySysWdtSetMode:
 1764              	.LFB22:
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 63


1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
 1765              		.loc 2 1048 0
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 16
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 80B5     		push	{r7, lr}
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 84B0     		sub	sp, sp, #16
 1774              		.cfi_def_cfa_offset 24
 1775 0004 00AF     		add	r7, sp, #0
 1776              		.cfi_def_cfa_register 7
 1777 0006 7860     		str	r0, [r7, #4]
 1778 0008 3960     		str	r1, [r7]
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1779              		.loc 2 1051 0
 1780 000a 7B68     		ldr	r3, [r7, #4]
 1781 000c 022B     		cmp	r3, #2
 1782 000e 02D9     		bls	.L138
 1783              		.loc 2 1051 0 is_stmt 0 discriminator 1
 1784 0010 0020     		movs	r0, #0
 1785 0012 FFF7FEFF 		bl	CyHalt
 1786              	.L138:
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1787              		.loc 2 1053 0 is_stmt 1
 1788 0016 7B68     		ldr	r3, [r7, #4]
 1789 0018 1800     		movs	r0, r3
 1790 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1791 001e 031E     		subs	r3, r0, #0
 1792 0020 16D1     		bne	.L140
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 1793              		.loc 2 1055 0
 1794 0022 0D4B     		ldr	r3, .L141
 1795 0024 1B68     		ldr	r3, [r3]
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1796              		.loc 2 1056 0
 1797 0026 7A68     		ldr	r2, [r7, #4]
 1798 0028 D200     		lsls	r2, r2, #3
 1799 002a 0321     		movs	r1, #3
 1800 002c 9140     		lsls	r1, r1, r2
 1801 002e 0A00     		movs	r2, r1
 1802 0030 D243     		mvns	r2, r2
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1803              		.loc 2 1055 0
 1804 0032 1340     		ands	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 64


 1805 0034 FB60     		str	r3, [r7, #12]
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 1806              		.loc 2 1057 0
 1807 0036 3B68     		ldr	r3, [r7]
 1808 0038 0322     		movs	r2, #3
 1809 003a 1A40     		ands	r2, r3
 1810 003c 7B68     		ldr	r3, [r7, #4]
 1811 003e DB00     		lsls	r3, r3, #3
 1812 0040 9A40     		lsls	r2, r2, r3
 1813 0042 1300     		movs	r3, r2
 1814 0044 FA68     		ldr	r2, [r7, #12]
 1815 0046 1343     		orrs	r3, r2
 1816 0048 FB60     		str	r3, [r7, #12]
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1817              		.loc 2 1058 0
 1818 004a 034B     		ldr	r3, .L141
 1819 004c FA68     		ldr	r2, [r7, #12]
 1820 004e 1A60     		str	r2, [r3]
 1821              	.L140:
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
 1822              		.loc 2 1060 0
 1823 0050 C046     		nop
 1824 0052 BD46     		mov	sp, r7
 1825 0054 04B0     		add	sp, sp, #16
 1826              		@ sp needed
 1827 0056 80BD     		pop	{r7, pc}
 1828              	.L142:
 1829              		.align	2
 1830              	.L141:
 1831 0058 0C020B40 		.word	1074463244
 1832              		.cfi_endproc
 1833              	.LFE22:
 1834              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 1835              		.section	.text.CySysWdtGetMode,"ax",%progbits
 1836              		.align	2
 1837              		.global	CySysWdtGetMode
 1838              		.code	16
 1839              		.thumb_func
 1840              		.type	CySysWdtGetMode, %function
 1841              	CySysWdtGetMode:
 1842              	.LFB23:
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 65


1076:Generated_Source\PSoC4/CyLFClk.c ****     {
 1843              		.loc 2 1076 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 8
 1846              		@ frame_needed = 1, uses_anonymous_args = 0
 1847 0000 80B5     		push	{r7, lr}
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 7, -8
 1850              		.cfi_offset 14, -4
 1851 0002 82B0     		sub	sp, sp, #8
 1852              		.cfi_def_cfa_offset 16
 1853 0004 00AF     		add	r7, sp, #0
 1854              		.cfi_def_cfa_register 7
 1855 0006 7860     		str	r0, [r7, #4]
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 1856              		.loc 2 1077 0
 1857 0008 054B     		ldr	r3, .L145
 1858 000a 1A68     		ldr	r2, [r3]
 1859 000c 7B68     		ldr	r3, [r7, #4]
 1860 000e DB00     		lsls	r3, r3, #3
 1861 0010 DA40     		lsrs	r2, r2, r3
 1862 0012 1300     		movs	r3, r2
 1863 0014 0322     		movs	r2, #3
 1864 0016 1340     		ands	r3, r2
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
 1865              		.loc 2 1078 0
 1866 0018 1800     		movs	r0, r3
 1867 001a BD46     		mov	sp, r7
 1868 001c 02B0     		add	sp, sp, #8
 1869              		@ sp needed
 1870 001e 80BD     		pop	{r7, pc}
 1871              	.L146:
 1872              		.align	2
 1873              	.L145:
 1874 0020 0C020B40 		.word	1074463244
 1875              		.cfi_endproc
 1876              	.LFE23:
 1877              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 1878              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 1879              		.align	2
 1880              		.global	CySysWdtSetClearOnMatch
 1881              		.code	16
 1882              		.thumb_func
 1883              		.type	CySysWdtSetClearOnMatch, %function
 1884              	CySysWdtSetClearOnMatch:
 1885              	.LFB24:
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 66


1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
 1886              		.loc 2 1105 0
 1887              		.cfi_startproc
 1888              		@ args = 0, pretend = 0, frame = 16
 1889              		@ frame_needed = 1, uses_anonymous_args = 0
 1890 0000 80B5     		push	{r7, lr}
 1891              		.cfi_def_cfa_offset 8
 1892              		.cfi_offset 7, -8
 1893              		.cfi_offset 14, -4
 1894 0002 84B0     		sub	sp, sp, #16
 1895              		.cfi_def_cfa_offset 24
 1896 0004 00AF     		add	r7, sp, #0
 1897              		.cfi_def_cfa_register 7
 1898 0006 7860     		str	r0, [r7, #4]
 1899 0008 3960     		str	r1, [r7]
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1900              		.loc 2 1108 0
 1901 000a 7B68     		ldr	r3, [r7, #4]
 1902 000c 002B     		cmp	r3, #0
 1903 000e 02D0     		beq	.L148
 1904              		.loc 2 1108 0 is_stmt 0 discriminator 2
 1905 0010 7B68     		ldr	r3, [r7, #4]
 1906 0012 012B     		cmp	r3, #1
 1907 0014 01D1     		bne	.L149
 1908              	.L148:
 1909              		.loc 2 1108 0 discriminator 3
 1910 0016 0123     		movs	r3, #1
 1911 0018 00E0     		b	.L150
 1912              	.L149:
 1913              		.loc 2 1108 0 discriminator 4
 1914 001a 0023     		movs	r3, #0
 1915              	.L150:
 1916              		.loc 2 1108 0 discriminator 6
 1917 001c 002B     		cmp	r3, #0
 1918 001e 02D1     		bne	.L151
 1919              		.loc 2 1108 0 discriminator 7
 1920 0020 0020     		movs	r0, #0
 1921 0022 FFF7FEFF 		bl	CyHalt
 1922              	.L151:
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 67


1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1923              		.loc 2 1111 0 is_stmt 1
 1924 0026 7B68     		ldr	r3, [r7, #4]
 1925 0028 1800     		movs	r0, r3
 1926 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1927 002e 031E     		subs	r3, r0, #0
 1928 0030 16D1     		bne	.L153
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 1929              		.loc 2 1113 0
 1930 0032 0D4B     		ldr	r3, .L154
 1931 0034 1B68     		ldr	r3, [r3]
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1932              		.loc 2 1114 0
 1933 0036 7A68     		ldr	r2, [r7, #4]
 1934 0038 D200     		lsls	r2, r2, #3
 1935 003a 0232     		adds	r2, r2, #2
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1936              		.loc 2 1113 0
 1937 003c 0121     		movs	r1, #1
 1938 003e 9140     		lsls	r1, r1, r2
 1939 0040 0A00     		movs	r2, r1
 1940 0042 D243     		mvns	r2, r2
 1941 0044 1340     		ands	r3, r2
 1942 0046 FB60     		str	r3, [r7, #12]
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
 1943              		.loc 2 1117 0
 1944 0048 7B68     		ldr	r3, [r7, #4]
 1945 004a DB00     		lsls	r3, r3, #3
 1946 004c 0233     		adds	r3, r3, #2
 1947 004e 3A68     		ldr	r2, [r7]
 1948 0050 9A40     		lsls	r2, r2, r3
 1949 0052 1300     		movs	r3, r2
 1950 0054 FA68     		ldr	r2, [r7, #12]
 1951 0056 1343     		orrs	r3, r2
 1952 0058 FB60     		str	r3, [r7, #12]
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1953              		.loc 2 1119 0
 1954 005a 034B     		ldr	r3, .L154
 1955 005c FA68     		ldr	r2, [r7, #12]
 1956 005e 1A60     		str	r2, [r3]
 1957              	.L153:
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
 1958              		.loc 2 1121 0
 1959 0060 C046     		nop
 1960 0062 BD46     		mov	sp, r7
 1961 0064 04B0     		add	sp, sp, #16
 1962              		@ sp needed
 1963 0066 80BD     		pop	{r7, pc}
 1964              	.L155:
 1965              		.align	2
 1966              	.L154:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 68


 1967 0068 0C020B40 		.word	1074463244
 1968              		.cfi_endproc
 1969              	.LFE24:
 1970              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 1971              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 1972              		.align	2
 1973              		.global	CySysWdtGetClearOnMatch
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CySysWdtGetClearOnMatch, %function
 1977              	CySysWdtGetClearOnMatch:
 1978              	.LFB25:
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
 1979              		.loc 2 1138 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 8
 1982              		@ frame_needed = 1, uses_anonymous_args = 0
 1983 0000 80B5     		push	{r7, lr}
 1984              		.cfi_def_cfa_offset 8
 1985              		.cfi_offset 7, -8
 1986              		.cfi_offset 14, -4
 1987 0002 82B0     		sub	sp, sp, #8
 1988              		.cfi_def_cfa_offset 16
 1989 0004 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
 1991 0006 7860     		str	r0, [r7, #4]
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1992              		.loc 2 1139 0
 1993 0008 7B68     		ldr	r3, [r7, #4]
 1994 000a 002B     		cmp	r3, #0
 1995 000c 02D0     		beq	.L157
 1996              		.loc 2 1139 0 is_stmt 0 discriminator 2
 1997 000e 7B68     		ldr	r3, [r7, #4]
 1998 0010 012B     		cmp	r3, #1
 1999 0012 01D1     		bne	.L158
 2000              	.L157:
 2001              		.loc 2 1139 0 discriminator 3
 2002 0014 0123     		movs	r3, #1
 2003 0016 00E0     		b	.L159
 2004              	.L158:
 2005              		.loc 2 1139 0 discriminator 4
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 69


 2006 0018 0023     		movs	r3, #0
 2007              	.L159:
 2008              		.loc 2 1139 0 discriminator 6
 2009 001a 002B     		cmp	r3, #0
 2010 001c 02D1     		bne	.L160
 2011              		.loc 2 1139 0 discriminator 7
 2012 001e 0020     		movs	r0, #0
 2013 0020 FFF7FEFF 		bl	CyHalt
 2014              	.L160:
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
 2015              		.loc 2 1142 0 is_stmt 1
 2016 0024 064B     		ldr	r3, .L162
 2017 0026 1A68     		ldr	r2, [r3]
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 2018              		.loc 2 1143 0
 2019 0028 7B68     		ldr	r3, [r7, #4]
 2020 002a DB00     		lsls	r3, r3, #3
 2021 002c 0233     		adds	r3, r3, #2
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 2022              		.loc 2 1142 0
 2023 002e DA40     		lsrs	r2, r2, r3
 2024 0030 1300     		movs	r3, r2
 2025 0032 0122     		movs	r2, #1
 2026 0034 1340     		ands	r3, r2
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
 2027              		.loc 2 1144 0
 2028 0036 1800     		movs	r0, r3
 2029 0038 BD46     		mov	sp, r7
 2030 003a 02B0     		add	sp, sp, #8
 2031              		@ sp needed
 2032 003c 80BD     		pop	{r7, pc}
 2033              	.L163:
 2034 003e C046     		.align	2
 2035              	.L162:
 2036 0040 0C020B40 		.word	1074463244
 2037              		.cfi_endproc
 2038              	.LFE25:
 2039              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 2040              		.section	.text.CySysWdtEnable,"ax",%progbits
 2041              		.align	2
 2042              		.global	CySysWdtEnable
 2043              		.code	16
 2044              		.thumb_func
 2045              		.type	CySysWdtEnable, %function
 2046              	CySysWdtEnable:
 2047              	.LFB26:
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 70


1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
 2048              		.loc 2 1179 0
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 8
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052 0000 80B5     		push	{r7, lr}
 2053              		.cfi_def_cfa_offset 8
 2054              		.cfi_offset 7, -8
 2055              		.cfi_offset 14, -4
 2056 0002 82B0     		sub	sp, sp, #8
 2057              		.cfi_def_cfa_offset 16
 2058 0004 00AF     		add	r7, sp, #0
 2059              		.cfi_def_cfa_register 7
 2060 0006 7860     		str	r0, [r7, #4]
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
 2061              		.loc 2 1184 0
 2062 0008 144B     		ldr	r3, .L172
 2063 000a 144A     		ldr	r2, .L172
 2064 000c 1168     		ldr	r1, [r2]
 2065 000e 7A68     		ldr	r2, [r7, #4]
 2066 0010 0A43     		orrs	r2, r1
 2067 0012 1A60     		str	r2, [r3]
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 2068              		.loc 2 1186 0
 2069 0014 7B68     		ldr	r3, [r7, #4]
 2070 0016 0122     		movs	r2, #1
 2071 0018 1340     		ands	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 71


 2072 001a 05D0     		beq	.L165
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 2073              		.loc 2 1188 0
 2074 001c C046     		nop
 2075              	.L166:
 2076              		.loc 2 1188 0 is_stmt 0 discriminator 1
 2077 001e 0020     		movs	r0, #0
 2078 0020 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2079 0024 031E     		subs	r3, r0, #0
 2080 0026 FAD0     		beq	.L166
 2081              	.L165:
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 2082              		.loc 2 1194 0 is_stmt 1
 2083 0028 7A68     		ldr	r2, [r7, #4]
 2084 002a 8023     		movs	r3, #128
 2085 002c 5B00     		lsls	r3, r3, #1
 2086 002e 1340     		ands	r3, r2
 2087 0030 05D0     		beq	.L167
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2088              		.loc 2 1196 0
 2089 0032 C046     		nop
 2090              	.L168:
 2091              		.loc 2 1196 0 is_stmt 0 discriminator 1
 2092 0034 0120     		movs	r0, #1
 2093 0036 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2094 003a 031E     		subs	r3, r0, #0
 2095 003c FAD0     		beq	.L168
 2096              	.L167:
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 2097              		.loc 2 1202 0 is_stmt 1
 2098 003e 7A68     		ldr	r2, [r7, #4]
 2099 0040 8023     		movs	r3, #128
 2100 0042 5B02     		lsls	r3, r3, #9
 2101 0044 1340     		ands	r3, r2
 2102 0046 05D0     		beq	.L171
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2103              		.loc 2 1204 0
 2104 0048 C046     		nop
 2105              	.L170:
 2106              		.loc 2 1204 0 is_stmt 0 discriminator 1
 2107 004a 0220     		movs	r0, #2
 2108 004c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2109 0050 031E     		subs	r3, r0, #0
 2110 0052 FAD0     		beq	.L170
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 72


 2111              	.L171:
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
 2112              		.loc 2 1209 0 is_stmt 1
 2113 0054 C046     		nop
 2114 0056 BD46     		mov	sp, r7
 2115 0058 02B0     		add	sp, sp, #8
 2116              		@ sp needed
 2117 005a 80BD     		pop	{r7, pc}
 2118              	.L173:
 2119              		.align	2
 2120              	.L172:
 2121 005c 10020B40 		.word	1074463248
 2122              		.cfi_endproc
 2123              	.LFE26:
 2124              		.size	CySysWdtEnable, .-CySysWdtEnable
 2125              		.section	.text.CySysWdtDisable,"ax",%progbits
 2126              		.align	2
 2127              		.global	CySysWdtDisable
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	CySysWdtDisable, %function
 2131              	CySysWdtDisable:
 2132              	.LFB27:
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
 2133              		.loc 2 1227 0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 8
 2136              		@ frame_needed = 1, uses_anonymous_args = 0
 2137 0000 80B5     		push	{r7, lr}
 2138              		.cfi_def_cfa_offset 8
 2139              		.cfi_offset 7, -8
 2140              		.cfi_offset 14, -4
 2141 0002 82B0     		sub	sp, sp, #8
 2142              		.cfi_def_cfa_offset 16
 2143 0004 00AF     		add	r7, sp, #0
 2144              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 73


 2145 0006 7860     		str	r0, [r7, #4]
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
 2146              		.loc 2 1228 0
 2147 0008 FFF7FEFF 		bl	CySysWdtLocked
 2148 000c 031E     		subs	r3, r0, #0
 2149 000e 26D1     		bne	.L181
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
 2150              		.loc 2 1230 0
 2151 0010 154B     		ldr	r3, .L182
 2152 0012 154A     		ldr	r2, .L182
 2153 0014 1268     		ldr	r2, [r2]
 2154 0016 7968     		ldr	r1, [r7, #4]
 2155 0018 C943     		mvns	r1, r1
 2156 001a 0A40     		ands	r2, r1
 2157 001c 1A60     		str	r2, [r3]
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 2158              		.loc 2 1232 0
 2159 001e 7B68     		ldr	r3, [r7, #4]
 2160 0020 0122     		movs	r2, #1
 2161 0022 1340     		ands	r3, r2
 2162 0024 05D0     		beq	.L176
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 2163              		.loc 2 1234 0
 2164 0026 C046     		nop
 2165              	.L177:
 2166              		.loc 2 1234 0 is_stmt 0 discriminator 1
 2167 0028 0020     		movs	r0, #0
 2168 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2169 002e 031E     		subs	r3, r0, #0
 2170 0030 FAD1     		bne	.L177
 2171              	.L176:
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 2172              		.loc 2 1240 0 is_stmt 1
 2173 0032 7A68     		ldr	r2, [r7, #4]
 2174 0034 8023     		movs	r3, #128
 2175 0036 5B00     		lsls	r3, r3, #1
 2176 0038 1340     		ands	r3, r2
 2177 003a 05D0     		beq	.L178
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2178              		.loc 2 1242 0
 2179 003c C046     		nop
 2180              	.L179:
 2181              		.loc 2 1242 0 is_stmt 0 discriminator 1
 2182 003e 0120     		movs	r0, #1
 2183 0040 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2184 0044 031E     		subs	r3, r0, #0
 2185 0046 FAD1     		bne	.L179
 2186              	.L178:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 74


1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 2187              		.loc 2 1248 0 is_stmt 1
 2188 0048 7A68     		ldr	r2, [r7, #4]
 2189 004a 8023     		movs	r3, #128
 2190 004c 5B02     		lsls	r3, r3, #9
 2191 004e 1340     		ands	r3, r2
 2192 0050 05D0     		beq	.L181
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2193              		.loc 2 1250 0
 2194 0052 C046     		nop
 2195              	.L180:
 2196              		.loc 2 1250 0 is_stmt 0 discriminator 1
 2197 0054 0220     		movs	r0, #2
 2198 0056 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2199 005a 031E     		subs	r3, r0, #0
 2200 005c FAD1     		bne	.L180
 2201              	.L181:
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
 2202              		.loc 2 1256 0 is_stmt 1
 2203 005e C046     		nop
 2204 0060 BD46     		mov	sp, r7
 2205 0062 02B0     		add	sp, sp, #8
 2206              		@ sp needed
 2207 0064 80BD     		pop	{r7, pc}
 2208              	.L183:
 2209 0066 C046     		.align	2
 2210              	.L182:
 2211 0068 10020B40 		.word	1074463248
 2212              		.cfi_endproc
 2213              	.LFE27:
 2214              		.size	CySysWdtDisable, .-CySysWdtDisable
 2215              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 2216              		.align	2
 2217              		.global	CySysWdtSetCascade
 2218              		.code	16
 2219              		.thumb_func
 2220              		.type	CySysWdtSetCascade, %function
 2221              	CySysWdtSetCascade:
 2222              	.LFB28:
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 75


1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
 2223              		.loc 2 1286 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 16
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227 0000 90B5     		push	{r4, r7, lr}
 2228              		.cfi_def_cfa_offset 12
 2229              		.cfi_offset 4, -12
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 85B0     		sub	sp, sp, #20
 2233              		.cfi_def_cfa_offset 32
 2234 0004 00AF     		add	r7, sp, #0
 2235              		.cfi_def_cfa_register 7
 2236 0006 7860     		str	r0, [r7, #4]
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
 2237              		.loc 2 1290 0
 2238 0008 0020     		movs	r0, #0
 2239 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2240 000e 0400     		movs	r4, r0
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2241              		.loc 2 1291 0
 2242 0010 0120     		movs	r0, #1
 2243 0012 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2244 0016 0300     		movs	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2245              		.loc 2 1290 0
 2246 0018 1C43     		orrs	r4, r3
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
 2247              		.loc 2 1292 0
 2248 001a 0220     		movs	r0, #2
 2249 001c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 76


 2250 0020 0300     		movs	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2251              		.loc 2 1290 0
 2252 0022 2343     		orrs	r3, r4
 2253 0024 FB60     		str	r3, [r7, #12]
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 2254              		.loc 2 1294 0
 2255 0026 FB68     		ldr	r3, [r7, #12]
 2256 0028 002B     		cmp	r3, #0
 2257 002a 0DD1     		bne	.L186
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2258              		.loc 2 1296 0
 2259 002c 084B     		ldr	r3, .L187
 2260 002e 1B68     		ldr	r3, [r3]
 2261 0030 BB60     		str	r3, [r7, #8]
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 2262              		.loc 2 1297 0
 2263 0032 BB68     		ldr	r3, [r7, #8]
 2264 0034 074A     		ldr	r2, .L187+4
 2265 0036 1340     		ands	r3, r2
 2266 0038 BB60     		str	r3, [r7, #8]
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 2267              		.loc 2 1298 0
 2268 003a BA68     		ldr	r2, [r7, #8]
 2269 003c 7B68     		ldr	r3, [r7, #4]
 2270 003e 1343     		orrs	r3, r2
 2271 0040 BB60     		str	r3, [r7, #8]
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2272              		.loc 2 1299 0
 2273 0042 034B     		ldr	r3, .L187
 2274 0044 BA68     		ldr	r2, [r7, #8]
 2275 0046 1A60     		str	r2, [r3]
 2276              	.L186:
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
 2277              		.loc 2 1301 0
 2278 0048 C046     		nop
 2279 004a BD46     		mov	sp, r7
 2280 004c 05B0     		add	sp, sp, #20
 2281              		@ sp needed
 2282 004e 90BD     		pop	{r4, r7, pc}
 2283              	.L188:
 2284              		.align	2
 2285              	.L187:
 2286 0050 0C020B40 		.word	1074463244
 2287 0054 F7F7FFFF 		.word	-2057
 2288              		.cfi_endproc
 2289              	.LFE28:
 2290              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 2291              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 2292              		.align	2
 2293              		.global	CySysWdtGetCascade
 2294              		.code	16
 2295              		.thumb_func
 2296              		.type	CySysWdtGetCascade, %function
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 77


 2297              	CySysWdtGetCascade:
 2298              	.LFB29:
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
 2299              		.loc 2 1317 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 0
 2302              		@ frame_needed = 1, uses_anonymous_args = 0
 2303 0000 80B5     		push	{r7, lr}
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 00AF     		add	r7, sp, #0
 2308              		.cfi_def_cfa_register 7
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 2309              		.loc 2 1318 0
 2310 0004 034B     		ldr	r3, .L191
 2311 0006 1B68     		ldr	r3, [r3]
 2312 0008 034A     		ldr	r2, .L191+4
 2313 000a 1340     		ands	r3, r2
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
 2314              		.loc 2 1319 0
 2315 000c 1800     		movs	r0, r3
 2316 000e BD46     		mov	sp, r7
 2317              		@ sp needed
 2318 0010 80BD     		pop	{r7, pc}
 2319              	.L192:
 2320 0012 C046     		.align	2
 2321              	.L191:
 2322 0014 0C020B40 		.word	1074463244
 2323 0018 08080000 		.word	2056
 2324              		.cfi_endproc
 2325              	.LFE29:
 2326              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 2327              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 2328              		.align	2
 2329              		.global	CySysWdtSetMatch
 2330              		.code	16
 2331              		.thumb_func
 2332              		.type	CySysWdtSetMatch, %function
 2333              	CySysWdtSetMatch:
 2334              	.LFB30:
1320:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 78


1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
 2335              		.loc 2 1337 0
 2336              		.cfi_startproc
 2337              		@ args = 0, pretend = 0, frame = 16
 2338              		@ frame_needed = 1, uses_anonymous_args = 0
 2339 0000 80B5     		push	{r7, lr}
 2340              		.cfi_def_cfa_offset 8
 2341              		.cfi_offset 7, -8
 2342              		.cfi_offset 14, -4
 2343 0002 84B0     		sub	sp, sp, #16
 2344              		.cfi_def_cfa_offset 24
 2345 0004 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
 2347 0006 7860     		str	r0, [r7, #4]
 2348 0008 3960     		str	r1, [r7]
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2349              		.loc 2 1340 0
 2350 000a 7B68     		ldr	r3, [r7, #4]
 2351 000c 002B     		cmp	r3, #0
 2352 000e 02D0     		beq	.L194
 2353              		.loc 2 1340 0 is_stmt 0 discriminator 2
 2354 0010 7B68     		ldr	r3, [r7, #4]
 2355 0012 012B     		cmp	r3, #1
 2356 0014 01D1     		bne	.L195
 2357              	.L194:
 2358              		.loc 2 1340 0 discriminator 3
 2359 0016 0123     		movs	r3, #1
 2360 0018 00E0     		b	.L196
 2361              	.L195:
 2362              		.loc 2 1340 0 discriminator 4
 2363 001a 0023     		movs	r3, #0
 2364              	.L196:
 2365              		.loc 2 1340 0 discriminator 6
 2366 001c 002B     		cmp	r3, #0
 2367 001e 02D1     		bne	.L197
 2368              		.loc 2 1340 0 discriminator 7
 2369 0020 0020     		movs	r0, #0
 2370 0022 FFF7FEFF 		bl	CyHalt
 2371              	.L197:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 79


1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
 2372              		.loc 2 1344 0 is_stmt 1
 2373 0026 174B     		ldr	r3, .L202
 2374 0028 1B68     		ldr	r3, [r3]
 2375 002a 9B0F     		lsrs	r3, r3, #30
 2376 002c 9B07     		lsls	r3, r3, #30
 2377 002e 01D1     		bne	.L198
 2378              		.loc 2 1344 0 is_stmt 0 discriminator 1
 2379 0030 C923     		movs	r3, #201
 2380 0032 00E0     		b	.L199
 2381              	.L198:
 2382              		.loc 2 1344 0 discriminator 2
 2383 0034 5D23     		movs	r3, #93
 2384              	.L199:
 2385              		.loc 2 1344 0 discriminator 4
 2386 0036 1800     		movs	r0, r3
 2387 0038 FFF7FEFF 		bl	CyDelayUs
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
 2388              		.loc 2 1346 0 is_stmt 1 discriminator 4
 2389 003c 124B     		ldr	r3, .L202+4
 2390 003e 1B68     		ldr	r3, [r3]
 2391 0040 FB60     		str	r3, [r7, #12]
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 2392              		.loc 2 1347 0 discriminator 4
 2393 0042 7B68     		ldr	r3, [r7, #4]
 2394 0044 1B01     		lsls	r3, r3, #4
 2395 0046 114A     		ldr	r2, .L202+8
 2396 0048 9A40     		lsls	r2, r2, r3
 2397 004a 1300     		movs	r3, r2
 2398 004c DA43     		mvns	r2, r3
 2399 004e FB68     		ldr	r3, [r7, #12]
 2400 0050 1340     		ands	r3, r2
 2401 0052 FB60     		str	r3, [r7, #12]
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 2402              		.loc 2 1348 0 discriminator 4
 2403 0054 0C4B     		ldr	r3, .L202+4
 2404 0056 7A68     		ldr	r2, [r7, #4]
 2405 0058 1201     		lsls	r2, r2, #4
 2406 005a 3968     		ldr	r1, [r7]
 2407 005c 9140     		lsls	r1, r1, r2
 2408 005e FA68     		ldr	r2, [r7, #12]
 2409 0060 0A43     		orrs	r2, r1
 2410 0062 1A60     		str	r2, [r3]
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
 2411              		.loc 2 1351 0 discriminator 4
 2412 0064 074B     		ldr	r3, .L202
 2413 0066 1B68     		ldr	r3, [r3]
 2414 0068 9B0F     		lsrs	r3, r3, #30
 2415 006a 9B07     		lsls	r3, r3, #30
 2416 006c 01D1     		bne	.L200
 2417              		.loc 2 1351 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 80


 2418 006e 4323     		movs	r3, #67
 2419 0070 00E0     		b	.L201
 2420              	.L200:
 2421              		.loc 2 1351 0 discriminator 2
 2422 0072 1F23     		movs	r3, #31
 2423              	.L201:
 2424              		.loc 2 1351 0 discriminator 4
 2425 0074 1800     		movs	r0, r3
 2426 0076 FFF7FEFF 		bl	CyDelayUs
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
 2427              		.loc 2 1352 0 is_stmt 1 discriminator 4
 2428 007a C046     		nop
 2429 007c BD46     		mov	sp, r7
 2430 007e 04B0     		add	sp, sp, #16
 2431              		@ sp needed
 2432 0080 80BD     		pop	{r7, pc}
 2433              	.L203:
 2434 0082 C046     		.align	2
 2435              	.L202:
 2436 0084 0C020B40 		.word	1074463244
 2437 0088 08020B40 		.word	1074463240
 2438 008c FFFF0000 		.word	65535
 2439              		.cfi_endproc
 2440              	.LFE30:
 2441              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 2442              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 2443              		.align	2
 2444              		.global	CySysWdtSetToggleBit
 2445              		.code	16
 2446              		.thumb_func
 2447              		.type	CySysWdtSetToggleBit, %function
 2448              	CySysWdtSetToggleBit:
 2449              	.LFB31:
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 81


 2450              		.loc 2 1376 0
 2451              		.cfi_startproc
 2452              		@ args = 0, pretend = 0, frame = 16
 2453              		@ frame_needed = 1, uses_anonymous_args = 0
 2454 0000 80B5     		push	{r7, lr}
 2455              		.cfi_def_cfa_offset 8
 2456              		.cfi_offset 7, -8
 2457              		.cfi_offset 14, -4
 2458 0002 84B0     		sub	sp, sp, #16
 2459              		.cfi_def_cfa_offset 24
 2460 0004 00AF     		add	r7, sp, #0
 2461              		.cfi_def_cfa_register 7
 2462 0006 7860     		str	r0, [r7, #4]
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2463              		.loc 2 1379 0
 2464 0008 0220     		movs	r0, #2
 2465 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2466 000e 031E     		subs	r3, r0, #0
 2467 0010 11D1     		bne	.L206
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2468              		.loc 2 1381 0
 2469 0012 0B4B     		ldr	r3, .L207
 2470 0014 1B68     		ldr	r3, [r3]
 2471 0016 FB60     		str	r3, [r7, #12]
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 2472              		.loc 2 1382 0
 2473 0018 FB68     		ldr	r3, [r7, #12]
 2474 001a 0A4A     		ldr	r2, .L207+4
 2475 001c 1340     		ands	r3, r2
 2476 001e FB60     		str	r3, [r7, #12]
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 2477              		.loc 2 1383 0
 2478 0020 7B68     		ldr	r3, [r7, #4]
 2479 0022 1A06     		lsls	r2, r3, #24
 2480 0024 F823     		movs	r3, #248
 2481 0026 5B05     		lsls	r3, r3, #21
 2482 0028 1340     		ands	r3, r2
 2483 002a FA68     		ldr	r2, [r7, #12]
 2484 002c 1343     		orrs	r3, r2
 2485 002e FB60     		str	r3, [r7, #12]
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2486              		.loc 2 1384 0
 2487 0030 034B     		ldr	r3, .L207
 2488 0032 FA68     		ldr	r2, [r7, #12]
 2489 0034 1A60     		str	r2, [r3]
 2490              	.L206:
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
 2491              		.loc 2 1386 0
 2492 0036 C046     		nop
 2493 0038 BD46     		mov	sp, r7
 2494 003a 04B0     		add	sp, sp, #16
 2495              		@ sp needed
 2496 003c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 82


 2497              	.L208:
 2498 003e C046     		.align	2
 2499              	.L207:
 2500 0040 0C020B40 		.word	1074463244
 2501 0044 FFFFFFE0 		.word	-520093697
 2502              		.cfi_endproc
 2503              	.LFE31:
 2504              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 2505              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 2506              		.align	2
 2507              		.global	CySysWdtGetToggleBit
 2508              		.code	16
 2509              		.thumb_func
 2510              		.type	CySysWdtGetToggleBit, %function
 2511              	CySysWdtGetToggleBit:
 2512              	.LFB32:
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
 2513              		.loc 2 1399 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 1, uses_anonymous_args = 0
 2517 0000 80B5     		push	{r7, lr}
 2518              		.cfi_def_cfa_offset 8
 2519              		.cfi_offset 7, -8
 2520              		.cfi_offset 14, -4
 2521 0002 00AF     		add	r7, sp, #0
 2522              		.cfi_def_cfa_register 7
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 2523              		.loc 2 1400 0
 2524 0004 034B     		ldr	r3, .L211
 2525 0006 1B68     		ldr	r3, [r3]
 2526 0008 1B0E     		lsrs	r3, r3, #24
 2527 000a 1F22     		movs	r2, #31
 2528 000c 1340     		ands	r3, r2
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
 2529              		.loc 2 1401 0
 2530 000e 1800     		movs	r0, r3
 2531 0010 BD46     		mov	sp, r7
 2532              		@ sp needed
 2533 0012 80BD     		pop	{r7, pc}
 2534              	.L212:
 2535              		.align	2
 2536              	.L211:
 2537 0014 0C020B40 		.word	1074463244
 2538              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 83


 2539              	.LFE32:
 2540              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 2541              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 2542              		.align	2
 2543              		.global	CySysWdtGetMatch
 2544              		.code	16
 2545              		.thumb_func
 2546              		.type	CySysWdtGetMatch, %function
 2547              	CySysWdtGetMatch:
 2548              	.LFB33:
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
 2549              		.loc 2 1417 0
 2550              		.cfi_startproc
 2551              		@ args = 0, pretend = 0, frame = 8
 2552              		@ frame_needed = 1, uses_anonymous_args = 0
 2553 0000 80B5     		push	{r7, lr}
 2554              		.cfi_def_cfa_offset 8
 2555              		.cfi_offset 7, -8
 2556              		.cfi_offset 14, -4
 2557 0002 82B0     		sub	sp, sp, #8
 2558              		.cfi_def_cfa_offset 16
 2559 0004 00AF     		add	r7, sp, #0
 2560              		.cfi_def_cfa_register 7
 2561 0006 7860     		str	r0, [r7, #4]
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2562              		.loc 2 1418 0
 2563 0008 7B68     		ldr	r3, [r7, #4]
 2564 000a 002B     		cmp	r3, #0
 2565 000c 02D0     		beq	.L214
 2566              		.loc 2 1418 0 is_stmt 0 discriminator 2
 2567 000e 7B68     		ldr	r3, [r7, #4]
 2568 0010 012B     		cmp	r3, #1
 2569 0012 01D1     		bne	.L215
 2570              	.L214:
 2571              		.loc 2 1418 0 discriminator 3
 2572 0014 0123     		movs	r3, #1
 2573 0016 00E0     		b	.L216
 2574              	.L215:
 2575              		.loc 2 1418 0 discriminator 4
 2576 0018 0023     		movs	r3, #0
 2577              	.L216:
 2578              		.loc 2 1418 0 discriminator 6
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 84


 2579 001a 002B     		cmp	r3, #0
 2580 001c 02D1     		bne	.L217
 2581              		.loc 2 1418 0 discriminator 7
 2582 001e 0020     		movs	r0, #0
 2583 0020 FFF7FEFF 		bl	CyHalt
 2584              	.L217:
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
 2585              		.loc 2 1421 0 is_stmt 1
 2586 0024 054B     		ldr	r3, .L219
 2587 0026 1A68     		ldr	r2, [r3]
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2588              		.loc 2 1422 0
 2589 0028 7B68     		ldr	r3, [r7, #4]
 2590 002a 1B01     		lsls	r3, r3, #4
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2591              		.loc 2 1421 0
 2592 002c DA40     		lsrs	r2, r2, r3
 2593 002e 1300     		movs	r3, r2
 2594 0030 1B04     		lsls	r3, r3, #16
 2595 0032 1B0C     		lsrs	r3, r3, #16
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
 2596              		.loc 2 1423 0
 2597 0034 1800     		movs	r0, r3
 2598 0036 BD46     		mov	sp, r7
 2599 0038 02B0     		add	sp, sp, #8
 2600              		@ sp needed
 2601 003a 80BD     		pop	{r7, pc}
 2602              	.L220:
 2603              		.align	2
 2604              	.L219:
 2605 003c 08020B40 		.word	1074463240
 2606              		.cfi_endproc
 2607              	.LFE33:
 2608              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 2609              		.section	.text.CySysWdtGetCount,"ax",%progbits
 2610              		.align	2
 2611              		.global	CySysWdtGetCount
 2612              		.code	16
 2613              		.thumb_func
 2614              		.type	CySysWdtGetCount, %function
 2615              	CySysWdtGetCount:
 2616              	.LFB34:
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 85


1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
 2617              		.loc 2 1439 0
 2618              		.cfi_startproc
 2619              		@ args = 0, pretend = 0, frame = 16
 2620              		@ frame_needed = 1, uses_anonymous_args = 0
 2621 0000 80B5     		push	{r7, lr}
 2622              		.cfi_def_cfa_offset 8
 2623              		.cfi_offset 7, -8
 2624              		.cfi_offset 14, -4
 2625 0002 84B0     		sub	sp, sp, #16
 2626              		.cfi_def_cfa_offset 24
 2627 0004 00AF     		add	r7, sp, #0
 2628              		.cfi_def_cfa_register 7
 2629 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 2630              		.loc 2 1440 0
 2631 0008 0023     		movs	r3, #0
 2632 000a FB60     		str	r3, [r7, #12]
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 2633              		.loc 2 1442 0
 2634 000c 7B68     		ldr	r3, [r7, #4]
 2635 000e 012B     		cmp	r3, #1
 2636 0010 09D0     		beq	.L223
 2637 0012 02D3     		bcc	.L224
 2638 0014 022B     		cmp	r3, #2
 2639 0016 0BD0     		beq	.L225
 2640 0018 0EE0     		b	.L228
 2641              	.L224:
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
 2642              		.loc 2 1446 0
 2643 001a 0C4B     		ldr	r3, .L229
 2644 001c 1B68     		ldr	r3, [r3]
 2645 001e 1B04     		lsls	r3, r3, #16
 2646 0020 1B0C     		lsrs	r3, r3, #16
 2647 0022 FB60     		str	r3, [r7, #12]
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2648              		.loc 2 1447 0
 2649 0024 0CE0     		b	.L226
 2650              	.L223:
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
 2651              		.loc 2 1451 0
 2652 0026 094B     		ldr	r3, .L229
 2653 0028 1B68     		ldr	r3, [r3]
 2654 002a 1B0C     		lsrs	r3, r3, #16
 2655 002c FB60     		str	r3, [r7, #12]
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2656              		.loc 2 1452 0
 2657 002e 07E0     		b	.L226
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 86


 2658              	.L225:
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
 2659              		.loc 2 1456 0
 2660 0030 074B     		ldr	r3, .L229+4
 2661 0032 1B68     		ldr	r3, [r3]
 2662 0034 FB60     		str	r3, [r7, #12]
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2663              		.loc 2 1457 0
 2664 0036 03E0     		b	.L226
 2665              	.L228:
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2666              		.loc 2 1460 0
 2667 0038 0020     		movs	r0, #0
 2668 003a FFF7FEFF 		bl	CyHalt
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2669              		.loc 2 1461 0
 2670 003e C046     		nop
 2671              	.L226:
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
 2672              		.loc 2 1464 0
 2673 0040 FB68     		ldr	r3, [r7, #12]
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
 2674              		.loc 2 1465 0
 2675 0042 1800     		movs	r0, r3
 2676 0044 BD46     		mov	sp, r7
 2677 0046 04B0     		add	sp, sp, #16
 2678              		@ sp needed
 2679 0048 80BD     		pop	{r7, pc}
 2680              	.L230:
 2681 004a C046     		.align	2
 2682              	.L229:
 2683 004c 00020B40 		.word	1074463232
 2684 0050 04020B40 		.word	1074463236
 2685              		.cfi_endproc
 2686              	.LFE34:
 2687              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 2688              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 2689              		.align	2
 2690              		.global	CySysWdtGetInterruptSource
 2691              		.code	16
 2692              		.thumb_func
 2693              		.type	CySysWdtGetInterruptSource, %function
 2694              	CySysWdtGetInterruptSource:
 2695              	.LFB35:
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 87


1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
 2696              		.loc 2 1482 0
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700 0000 80B5     		push	{r7, lr}
 2701              		.cfi_def_cfa_offset 8
 2702              		.cfi_offset 7, -8
 2703              		.cfi_offset 14, -4
 2704 0002 00AF     		add	r7, sp, #0
 2705              		.cfi_def_cfa_register 7
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 2706              		.loc 2 1483 0
 2707 0004 034B     		ldr	r3, .L233
 2708 0006 1B68     		ldr	r3, [r3]
 2709 0008 034A     		ldr	r2, .L233+4
 2710 000a 1340     		ands	r3, r2
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
 2711              		.loc 2 1484 0
 2712 000c 1800     		movs	r0, r3
 2713 000e BD46     		mov	sp, r7
 2714              		@ sp needed
 2715 0010 80BD     		pop	{r7, pc}
 2716              	.L234:
 2717 0012 C046     		.align	2
 2718              	.L233:
 2719 0014 10020B40 		.word	1074463248
 2720 0018 04040400 		.word	263172
 2721              		.cfi_endproc
 2722              	.LFE35:
 2723              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 2724              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 2725              		.align	2
 2726              		.global	CySysWdtClearInterrupt
 2727              		.code	16
 2728              		.thumb_func
 2729              		.type	CySysWdtClearInterrupt, %function
 2730              	CySysWdtClearInterrupt:
 2731              	.LFB36:
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 88


1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
 2732              		.loc 2 1511 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 16
 2735              		@ frame_needed = 1, uses_anonymous_args = 0
 2736 0000 90B5     		push	{r4, r7, lr}
 2737              		.cfi_def_cfa_offset 12
 2738              		.cfi_offset 4, -12
 2739              		.cfi_offset 7, -8
 2740              		.cfi_offset 14, -4
 2741 0002 85B0     		sub	sp, sp, #20
 2742              		.cfi_def_cfa_offset 32
 2743 0004 00AF     		add	r7, sp, #0
 2744              		.cfi_def_cfa_register 7
 2745 0006 7860     		str	r0, [r7, #4]
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 2746              		.loc 2 1515 0
 2747 0008 0B23     		movs	r3, #11
 2748 000a FC18     		adds	r4, r7, r3
 2749 000c FFF7FEFF 		bl	CyEnterCriticalSection
 2750 0010 0300     		movs	r3, r0
 2751 0012 2370     		strb	r3, [r4]
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
 2752              		.loc 2 1517 0
 2753 0014 FFF7FEFF 		bl	CySysWdtLocked
 2754 0018 031E     		subs	r3, r0, #0
 2755 001a 04D0     		beq	.L236
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
 2756              		.loc 2 1519 0
 2757 001c 0123     		movs	r3, #1
 2758 001e FB60     		str	r3, [r7, #12]
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
 2759              		.loc 2 1520 0
 2760 0020 FFF7FEFF 		bl	CySysWdtUnlock
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 89


 2761 0024 01E0     		b	.L237
 2762              	.L236:
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
 2763              		.loc 2 1524 0
 2764 0026 0023     		movs	r3, #0
 2765 0028 FB60     		str	r3, [r7, #12]
 2766              	.L237:
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
 2767              		.loc 2 1528 0
 2768 002a 7B68     		ldr	r3, [r7, #4]
 2769 002c 0D4A     		ldr	r2, .L239
 2770 002e 1340     		ands	r3, r2
 2771 0030 7B60     		str	r3, [r7, #4]
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
 2772              		.loc 2 1532 0
 2773 0032 0D4B     		ldr	r3, .L239+4
 2774 0034 0C4A     		ldr	r2, .L239+4
 2775 0036 1268     		ldr	r2, [r2]
 2776 0038 0C49     		ldr	r1, .L239+8
 2777 003a 1140     		ands	r1, r2
 2778 003c 7A68     		ldr	r2, [r7, #4]
 2779 003e 0A43     		orrs	r2, r1
 2780 0040 1A60     		str	r2, [r3]
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
 2781              		.loc 2 1539 0
 2782 0042 094B     		ldr	r3, .L239+4
 2783 0044 1B68     		ldr	r3, [r3]
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
 2784              		.loc 2 1541 0
 2785 0046 FB68     		ldr	r3, [r7, #12]
 2786 0048 012B     		cmp	r3, #1
 2787 004a 01D1     		bne	.L238
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
 2788              		.loc 2 1543 0
 2789 004c FFF7FEFF 		bl	CySysWdtLock
 2790              	.L238:
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 2791              		.loc 2 1546 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 90


 2792 0050 0B23     		movs	r3, #11
 2793 0052 FB18     		adds	r3, r7, r3
 2794 0054 1B78     		ldrb	r3, [r3]
 2795 0056 1800     		movs	r0, r3
 2796 0058 FFF7FEFF 		bl	CyExitCriticalSection
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
 2797              		.loc 2 1547 0
 2798 005c C046     		nop
 2799 005e BD46     		mov	sp, r7
 2800 0060 05B0     		add	sp, sp, #20
 2801              		@ sp needed
 2802 0062 90BD     		pop	{r4, r7, pc}
 2803              	.L240:
 2804              		.align	2
 2805              	.L239:
 2806 0064 04040400 		.word	263172
 2807 0068 10020B40 		.word	1074463248
 2808 006c FBFBFBFF 		.word	-263173
 2809              		.cfi_endproc
 2810              	.LFE36:
 2811              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 2812              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 2813              		.align	2
 2814              		.global	CySysWdtResetCounters
 2815              		.code	16
 2816              		.thumb_func
 2817              		.type	CySysWdtResetCounters, %function
 2818              	CySysWdtResetCounters:
 2819              	.LFB37:
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
 2820              		.loc 2 1569 0
 2821              		.cfi_startproc
 2822              		@ args = 0, pretend = 0, frame = 8
 2823              		@ frame_needed = 1, uses_anonymous_args = 0
 2824 0000 80B5     		push	{r7, lr}
 2825              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 91


 2826              		.cfi_offset 7, -8
 2827              		.cfi_offset 14, -4
 2828 0002 82B0     		sub	sp, sp, #8
 2829              		.cfi_def_cfa_offset 16
 2830 0004 00AF     		add	r7, sp, #0
 2831              		.cfi_def_cfa_register 7
 2832 0006 7860     		str	r0, [r7, #4]
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
 2833              		.loc 2 1571 0
 2834 0008 084B     		ldr	r3, .L243
 2835 000a 084A     		ldr	r2, .L243
 2836 000c 1168     		ldr	r1, [r2]
 2837 000e 7A68     		ldr	r2, [r7, #4]
 2838 0010 0748     		ldr	r0, .L243+4
 2839 0012 0240     		ands	r2, r0
 2840 0014 0A43     		orrs	r2, r1
 2841 0016 1A60     		str	r2, [r3]
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
 2842              		.loc 2 1573 0
 2843 0018 C046     		nop
 2844              	.L242:
 2845              		.loc 2 1573 0 is_stmt 0 discriminator 1
 2846 001a 044B     		ldr	r3, .L243
 2847 001c 1B68     		ldr	r3, [r3]
 2848 001e 044A     		ldr	r2, .L243+4
 2849 0020 1340     		ands	r3, r2
 2850 0022 FAD1     		bne	.L242
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
 2851              		.loc 2 1577 0 is_stmt 1
 2852 0024 C046     		nop
 2853 0026 BD46     		mov	sp, r7
 2854 0028 02B0     		add	sp, sp, #8
 2855              		@ sp needed
 2856 002a 80BD     		pop	{r7, pc}
 2857              	.L244:
 2858              		.align	2
 2859              	.L243:
 2860 002c 10020B40 		.word	1074463248
 2861 0030 08080800 		.word	526344
 2862              		.cfi_endproc
 2863              	.LFE37:
 2864              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 2865              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 2866              		.align	2
 2867              		.global	CySysWdtSetInterruptCallback
 2868              		.code	16
 2869              		.thumb_func
 2870              		.type	CySysWdtSetInterruptCallback, %function
 2871              	CySysWdtSetInterruptCallback:
 2872              	.LFB38:
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 92


1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
 2873              		.loc 2 1595 0
 2874              		.cfi_startproc
 2875              		@ args = 0, pretend = 0, frame = 16
 2876              		@ frame_needed = 1, uses_anonymous_args = 0
 2877 0000 80B5     		push	{r7, lr}
 2878              		.cfi_def_cfa_offset 8
 2879              		.cfi_offset 7, -8
 2880              		.cfi_offset 14, -4
 2881 0002 84B0     		sub	sp, sp, #16
 2882              		.cfi_def_cfa_offset 24
 2883 0004 00AF     		add	r7, sp, #0
 2884              		.cfi_def_cfa_register 7
 2885 0006 7860     		str	r0, [r7, #4]
 2886 0008 3960     		str	r1, [r7]
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 2887              		.loc 2 1596 0
 2888 000a 0023     		movs	r3, #0
 2889 000c FB60     		str	r3, [r7, #12]
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2890              		.loc 2 1598 0
 2891 000e 7B68     		ldr	r3, [r7, #4]
 2892 0010 022B     		cmp	r3, #2
 2893 0012 0AD8     		bhi	.L246
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
 2894              		.loc 2 1600 0
 2895 0014 094B     		ldr	r3, .L249
 2896 0016 7A68     		ldr	r2, [r7, #4]
 2897 0018 9200     		lsls	r2, r2, #2
 2898 001a D358     		ldr	r3, [r2, r3]
 2899 001c FB60     		str	r3, [r7, #12]
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 2900              		.loc 2 1601 0
 2901 001e 074B     		ldr	r3, .L249
 2902 0020 7A68     		ldr	r2, [r7, #4]
 2903 0022 9200     		lsls	r2, r2, #2
 2904 0024 3968     		ldr	r1, [r7]
 2905 0026 D150     		str	r1, [r2, r3]
 2906 0028 02E0     		b	.L247
 2907              	.L246:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 93


1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2908              		.loc 2 1605 0 discriminator 1
 2909 002a 0020     		movs	r0, #0
 2910 002c FFF7FEFF 		bl	CyHalt
 2911              	.L247:
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
 2912              		.loc 2 1608 0
 2913 0030 FB68     		ldr	r3, [r7, #12]
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
 2914              		.loc 2 1609 0
 2915 0032 1800     		movs	r0, r3
 2916 0034 BD46     		mov	sp, r7
 2917 0036 04B0     		add	sp, sp, #16
 2918              		@ sp needed
 2919 0038 80BD     		pop	{r7, pc}
 2920              	.L250:
 2921 003a C046     		.align	2
 2922              	.L249:
 2923 003c 0C000000 		.word	cySysWdtCallback
 2924              		.cfi_endproc
 2925              	.LFE38:
 2926              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 2927              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 2928              		.align	2
 2929              		.global	CySysWdtGetInterruptCallback
 2930              		.code	16
 2931              		.thumb_func
 2932              		.type	CySysWdtGetInterruptCallback, %function
 2933              	CySysWdtGetInterruptCallback:
 2934              	.LFB39:
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
 2935              		.loc 2 1625 0
 2936              		.cfi_startproc
 2937              		@ args = 0, pretend = 0, frame = 16
 2938              		@ frame_needed = 1, uses_anonymous_args = 0
 2939 0000 80B5     		push	{r7, lr}
 2940              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 94


 2941              		.cfi_offset 7, -8
 2942              		.cfi_offset 14, -4
 2943 0002 84B0     		sub	sp, sp, #16
 2944              		.cfi_def_cfa_offset 24
 2945 0004 00AF     		add	r7, sp, #0
 2946              		.cfi_def_cfa_register 7
 2947 0006 7860     		str	r0, [r7, #4]
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 2948              		.loc 2 1626 0
 2949 0008 0023     		movs	r3, #0
 2950 000a FB60     		str	r3, [r7, #12]
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2951              		.loc 2 1628 0
 2952 000c 7B68     		ldr	r3, [r7, #4]
 2953 000e 022B     		cmp	r3, #2
 2954 0010 05D8     		bhi	.L252
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
 2955              		.loc 2 1630 0
 2956 0012 074B     		ldr	r3, .L255
 2957 0014 7A68     		ldr	r2, [r7, #4]
 2958 0016 9200     		lsls	r2, r2, #2
 2959 0018 D358     		ldr	r3, [r2, r3]
 2960 001a FB60     		str	r3, [r7, #12]
 2961 001c 02E0     		b	.L253
 2962              	.L252:
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2963              		.loc 2 1634 0 discriminator 1
 2964 001e 0020     		movs	r0, #0
 2965 0020 FFF7FEFF 		bl	CyHalt
 2966              	.L253:
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
 2967              		.loc 2 1637 0
 2968 0024 FB68     		ldr	r3, [r7, #12]
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
 2969              		.loc 2 1638 0
 2970 0026 1800     		movs	r0, r3
 2971 0028 BD46     		mov	sp, r7
 2972 002a 04B0     		add	sp, sp, #16
 2973              		@ sp needed
 2974 002c 80BD     		pop	{r7, pc}
 2975              	.L256:
 2976 002e C046     		.align	2
 2977              	.L255:
 2978 0030 0C000000 		.word	cySysWdtCallback
 2979              		.cfi_endproc
 2980              	.LFE39:
 2981              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 2982              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 2983              		.align	2
 2984              		.global	CySysWdtEnableCounterIsr
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 95


 2985              		.code	16
 2986              		.thumb_func
 2987              		.type	CySysWdtEnableCounterIsr, %function
 2988              	CySysWdtEnableCounterIsr:
 2989              	.LFB40:
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
 2990              		.loc 2 1654 0
 2991              		.cfi_startproc
 2992              		@ args = 0, pretend = 0, frame = 8
 2993              		@ frame_needed = 1, uses_anonymous_args = 0
 2994 0000 80B5     		push	{r7, lr}
 2995              		.cfi_def_cfa_offset 8
 2996              		.cfi_offset 7, -8
 2997              		.cfi_offset 14, -4
 2998 0002 82B0     		sub	sp, sp, #8
 2999              		.cfi_def_cfa_offset 16
 3000 0004 00AF     		add	r7, sp, #0
 3001              		.cfi_def_cfa_register 7
 3002 0006 7860     		str	r0, [r7, #4]
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 3003              		.loc 2 1655 0
 3004 0008 7B68     		ldr	r3, [r7, #4]
 3005 000a 022B     		cmp	r3, #2
 3006 000c 13D8     		bhi	.L258
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
 3007              		.loc 2 1657 0
 3008 000e 0D4B     		ldr	r3, .L261
 3009 0010 7A68     		ldr	r2, [r7, #4]
 3010 0012 9200     		lsls	r2, r2, #2
 3011 0014 D358     		ldr	r3, [r2, r3]
 3012 0016 DA43     		mvns	r2, r3
 3013 0018 0B4B     		ldr	r3, .L261+4
 3014 001a 1B68     		ldr	r3, [r3]
 3015 001c 1A40     		ands	r2, r3
 3016 001e 0A4B     		ldr	r3, .L261+4
 3017 0020 1A60     		str	r2, [r3]
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 3018              		.loc 2 1658 0
 3019 0022 084B     		ldr	r3, .L261
 3020 0024 7A68     		ldr	r2, [r7, #4]
 3021 0026 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 96


 3022 0028 D258     		ldr	r2, [r2, r3]
 3023 002a 084B     		ldr	r3, .L261+8
 3024 002c 1B68     		ldr	r3, [r3]
 3025 002e 1A43     		orrs	r2, r3
 3026 0030 064B     		ldr	r3, .L261+8
 3027 0032 1A60     		str	r2, [r3]
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
 3028              		.loc 2 1664 0
 3029 0034 02E0     		b	.L260
 3030              	.L258:
1662:Generated_Source\PSoC4/CyLFClk.c ****         }
 3031              		.loc 2 1662 0 discriminator 1
 3032 0036 0020     		movs	r0, #0
 3033 0038 FFF7FEFF 		bl	CyHalt
 3034              	.L260:
 3035              		.loc 2 1664 0
 3036 003c C046     		nop
 3037 003e BD46     		mov	sp, r7
 3038 0040 02B0     		add	sp, sp, #8
 3039              		@ sp needed
 3040 0042 80BD     		pop	{r7, pc}
 3041              	.L262:
 3042              		.align	2
 3043              	.L261:
 3044 0044 00000000 		.word	counterIntMaskTbl
 3045 0048 08000000 		.word	disableServicedIsr
 3046 004c 04000000 		.word	wdtIsrMask
 3047              		.cfi_endproc
 3048              	.LFE40:
 3049              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 3050              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 3051              		.align	2
 3052              		.global	CySysWdtDisableCounterIsr
 3053              		.code	16
 3054              		.thumb_func
 3055              		.type	CySysWdtDisableCounterIsr, %function
 3056              	CySysWdtDisableCounterIsr:
 3057              	.LFB41:
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
 3058              		.loc 2 1677 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 97


 3059              		.cfi_startproc
 3060              		@ args = 0, pretend = 0, frame = 8
 3061              		@ frame_needed = 1, uses_anonymous_args = 0
 3062 0000 80B5     		push	{r7, lr}
 3063              		.cfi_def_cfa_offset 8
 3064              		.cfi_offset 7, -8
 3065              		.cfi_offset 14, -4
 3066 0002 82B0     		sub	sp, sp, #8
 3067              		.cfi_def_cfa_offset 16
 3068 0004 00AF     		add	r7, sp, #0
 3069              		.cfi_def_cfa_register 7
 3070 0006 7860     		str	r0, [r7, #4]
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 3071              		.loc 2 1678 0
 3072 0008 7B68     		ldr	r3, [r7, #4]
 3073 000a 022B     		cmp	r3, #2
 3074 000c 0AD8     		bhi	.L264
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
 3075              		.loc 2 1680 0
 3076 000e 094B     		ldr	r3, .L267
 3077 0010 7A68     		ldr	r2, [r7, #4]
 3078 0012 9200     		lsls	r2, r2, #2
 3079 0014 D358     		ldr	r3, [r2, r3]
 3080 0016 DA43     		mvns	r2, r3
 3081 0018 074B     		ldr	r3, .L267+4
 3082 001a 1B68     		ldr	r3, [r3]
 3083 001c 1A40     		ands	r2, r3
 3084 001e 064B     		ldr	r3, .L267+4
 3085 0020 1A60     		str	r2, [r3]
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
 3086              		.loc 2 1686 0
 3087 0022 02E0     		b	.L266
 3088              	.L264:
1684:Generated_Source\PSoC4/CyLFClk.c ****         }
 3089              		.loc 2 1684 0 discriminator 1
 3090 0024 0020     		movs	r0, #0
 3091 0026 FFF7FEFF 		bl	CyHalt
 3092              	.L266:
 3093              		.loc 2 1686 0
 3094 002a C046     		nop
 3095 002c BD46     		mov	sp, r7
 3096 002e 02B0     		add	sp, sp, #8
 3097              		@ sp needed
 3098 0030 80BD     		pop	{r7, pc}
 3099              	.L268:
 3100 0032 C046     		.align	2
 3101              	.L267:
 3102 0034 00000000 		.word	counterIntMaskTbl
 3103 0038 04000000 		.word	wdtIsrMask
 3104              		.cfi_endproc
 3105              	.LFE41:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 98


 3106              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 3107              		.section	.text.CySysWdtIsr,"ax",%progbits
 3108              		.align	2
 3109              		.global	CySysWdtIsr
 3110              		.code	16
 3111              		.thumb_func
 3112              		.type	CySysWdtIsr, %function
 3113              	CySysWdtIsr:
 3114              	.LFB42:
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
 3115              		.loc 2 1710 0
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 0
 3118              		@ frame_needed = 1, uses_anonymous_args = 0
 3119 0000 80B5     		push	{r7, lr}
 3120              		.cfi_def_cfa_offset 8
 3121              		.cfi_offset 7, -8
 3122              		.cfi_offset 14, -4
 3123 0002 00AF     		add	r7, sp, #0
 3124              		.cfi_def_cfa_register 7
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 3125              		.loc 2 1711 0
 3126 0004 344B     		ldr	r3, .L277
 3127 0006 1B68     		ldr	r3, [r3]
 3128 0008 0422     		movs	r2, #4
 3129 000a 1340     		ands	r3, r2
 3130 000c 1FD0     		beq	.L270
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
 3131              		.loc 2 1713 0
 3132 000e 334B     		ldr	r3, .L277+4
 3133 0010 1B68     		ldr	r3, [r3]
 3134 0012 0422     		movs	r2, #4
 3135 0014 1340     		ands	r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 99


 3136 0016 17D0     		beq	.L271
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
 3137              		.loc 2 1715 0
 3138 0018 314B     		ldr	r3, .L277+8
 3139 001a 1B68     		ldr	r3, [r3]
 3140 001c 0422     		movs	r2, #4
 3141 001e 1340     		ands	r3, r2
 3142 0020 DA43     		mvns	r2, r3
 3143 0022 2E4B     		ldr	r3, .L277+4
 3144 0024 1B68     		ldr	r3, [r3]
 3145 0026 1A40     		ands	r2, r3
 3146 0028 2C4B     		ldr	r3, .L277+4
 3147 002a 1A60     		str	r2, [r3]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 3148              		.loc 2 1716 0
 3149 002c 2C4B     		ldr	r3, .L277+8
 3150 002e 1B68     		ldr	r3, [r3]
 3151 0030 0422     		movs	r2, #4
 3152 0032 9343     		bics	r3, r2
 3153 0034 1A00     		movs	r2, r3
 3154 0036 2A4B     		ldr	r3, .L277+8
 3155 0038 1A60     		str	r2, [r3]
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 3156              		.loc 2 1717 0
 3157 003a 2A4B     		ldr	r3, .L277+12
 3158 003c 1B68     		ldr	r3, [r3]
 3159 003e 002B     		cmp	r3, #0
 3160 0040 02D0     		beq	.L271
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
 3161              		.loc 2 1719 0
 3162 0042 284B     		ldr	r3, .L277+12
 3163 0044 1B68     		ldr	r3, [r3]
 3164 0046 9847     		blx	r3
 3165              	.L271:
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3166              		.loc 2 1722 0
 3167 0048 0420     		movs	r0, #4
 3168 004a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3169              	.L270:
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
 3170              		.loc 2 1725 0
 3171 004e 224B     		ldr	r3, .L277
 3172 0050 1A68     		ldr	r2, [r3]
 3173 0052 8023     		movs	r3, #128
 3174 0054 DB00     		lsls	r3, r3, #3
 3175 0056 1340     		ands	r3, r2
 3176 0058 22D0     		beq	.L272
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
 3177              		.loc 2 1727 0
 3178 005a 204B     		ldr	r3, .L277+4
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 100


 3179 005c 1A68     		ldr	r2, [r3]
 3180 005e 8023     		movs	r3, #128
 3181 0060 DB00     		lsls	r3, r3, #3
 3182 0062 1340     		ands	r3, r2
 3183 0064 17D0     		beq	.L273
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
 3184              		.loc 2 1729 0
 3185 0066 1E4B     		ldr	r3, .L277+8
 3186 0068 1A68     		ldr	r2, [r3]
 3187 006a 8023     		movs	r3, #128
 3188 006c DB00     		lsls	r3, r3, #3
 3189 006e 1340     		ands	r3, r2
 3190 0070 DA43     		mvns	r2, r3
 3191 0072 1A4B     		ldr	r3, .L277+4
 3192 0074 1B68     		ldr	r3, [r3]
 3193 0076 1A40     		ands	r2, r3
 3194 0078 184B     		ldr	r3, .L277+4
 3195 007a 1A60     		str	r2, [r3]
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
 3196              		.loc 2 1730 0
 3197 007c 184B     		ldr	r3, .L277+8
 3198 007e 1B68     		ldr	r3, [r3]
 3199 0080 194A     		ldr	r2, .L277+16
 3200 0082 1A40     		ands	r2, r3
 3201 0084 164B     		ldr	r3, .L277+8
 3202 0086 1A60     		str	r2, [r3]
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 3203              		.loc 2 1731 0
 3204 0088 164B     		ldr	r3, .L277+12
 3205 008a 5B68     		ldr	r3, [r3, #4]
 3206 008c 002B     		cmp	r3, #0
 3207 008e 02D0     		beq	.L273
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
 3208              		.loc 2 1733 0
 3209 0090 144B     		ldr	r3, .L277+12
 3210 0092 5B68     		ldr	r3, [r3, #4]
 3211 0094 9847     		blx	r3
 3212              	.L273:
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3213              		.loc 2 1736 0
 3214 0096 8023     		movs	r3, #128
 3215 0098 DB00     		lsls	r3, r3, #3
 3216 009a 1800     		movs	r0, r3
 3217 009c FFF7FEFF 		bl	CySysWdtClearInterrupt
 3218              	.L272:
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
 3219              		.loc 2 1739 0
 3220 00a0 0D4B     		ldr	r3, .L277
 3221 00a2 1A68     		ldr	r2, [r3]
 3222 00a4 8023     		movs	r3, #128
 3223 00a6 DB02     		lsls	r3, r3, #11
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 101


 3224 00a8 1340     		ands	r3, r2
 3225 00aa 11D0     		beq	.L276
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
 3226              		.loc 2 1741 0
 3227 00ac 0B4B     		ldr	r3, .L277+4
 3228 00ae 1A68     		ldr	r2, [r3]
 3229 00b0 8023     		movs	r3, #128
 3230 00b2 DB02     		lsls	r3, r3, #11
 3231 00b4 1340     		ands	r3, r2
 3232 00b6 06D0     		beq	.L275
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
 3233              		.loc 2 1743 0
 3234 00b8 0A4B     		ldr	r3, .L277+12
 3235 00ba 9B68     		ldr	r3, [r3, #8]
 3236 00bc 002B     		cmp	r3, #0
 3237 00be 02D0     		beq	.L275
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
 3238              		.loc 2 1745 0
 3239 00c0 084B     		ldr	r3, .L277+12
 3240 00c2 9B68     		ldr	r3, [r3, #8]
 3241 00c4 9847     		blx	r3
 3242              	.L275:
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
 3243              		.loc 2 1748 0
 3244 00c6 8023     		movs	r3, #128
 3245 00c8 DB02     		lsls	r3, r3, #11
 3246 00ca 1800     		movs	r0, r3
 3247 00cc FFF7FEFF 		bl	CySysWdtClearInterrupt
 3248              	.L276:
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
 3249              		.loc 2 1750 0
 3250 00d0 C046     		nop
 3251 00d2 BD46     		mov	sp, r7
 3252              		@ sp needed
 3253 00d4 80BD     		pop	{r7, pc}
 3254              	.L278:
 3255 00d6 C046     		.align	2
 3256              	.L277:
 3257 00d8 10020B40 		.word	1074463248
 3258 00dc 04000000 		.word	wdtIsrMask
 3259 00e0 08000000 		.word	disableServicedIsr
 3260 00e4 0C000000 		.word	cySysWdtCallback
 3261 00e8 FFFBFFFF 		.word	-1025
 3262              		.cfi_endproc
 3263              	.LFE42:
 3264              		.size	CySysWdtIsr, .-CySysWdtIsr
 3265              		.section	.text.CySysWatchdogFeed,"ax",%progbits
 3266              		.align	2
 3267              		.global	CySysWatchdogFeed
 3268              		.code	16
 3269              		.thumb_func
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 102


 3270              		.type	CySysWatchdogFeed, %function
 3271              	CySysWatchdogFeed:
 3272              	.LFB43:
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
 3273              		.loc 2 1775 0
 3274              		.cfi_startproc
 3275              		@ args = 0, pretend = 0, frame = 8
 3276              		@ frame_needed = 1, uses_anonymous_args = 0
 3277 0000 80B5     		push	{r7, lr}
 3278              		.cfi_def_cfa_offset 8
 3279              		.cfi_offset 7, -8
 3280              		.cfi_offset 14, -4
 3281 0002 82B0     		sub	sp, sp, #8
 3282              		.cfi_def_cfa_offset 16
 3283 0004 00AF     		add	r7, sp, #0
 3284              		.cfi_def_cfa_register 7
 3285 0006 7860     		str	r0, [r7, #4]
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 3286              		.loc 2 1776 0
 3287 0008 7B68     		ldr	r3, [r7, #4]
 3288 000a 002B     		cmp	r3, #0
 3289 000c 18D1     		bne	.L280
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
 3290              		.loc 2 1778 0
 3291 000e 7B68     		ldr	r3, [r7, #4]
 3292 0010 1800     		movs	r0, r3
 3293 0012 FFF7FEFF 		bl	CySysWdtGetMode
 3294 0016 0300     		movs	r3, r0
 3295 0018 032B     		cmp	r3, #3
 3296 001a 03D1     		bne	.L281
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 103


 3297              		.loc 2 1780 0
 3298 001c 0420     		movs	r0, #4
 3299 001e FFF7FEFF 		bl	CySysWdtClearInterrupt
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
 3300              		.loc 2 1812 0
 3301 0022 2EE0     		b	.L284
 3302              	.L281:
1782:Generated_Source\PSoC4/CyLFClk.c ****             {
 3303              		.loc 2 1782 0
 3304 0024 7B68     		ldr	r3, [r7, #4]
 3305 0026 1800     		movs	r0, r3
 3306 0028 FFF7FEFF 		bl	CySysWdtGetMode
 3307 002c 0300     		movs	r3, r0
 3308 002e 022B     		cmp	r3, #2
 3309 0030 27D1     		bne	.L284
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3310              		.loc 2 1784 0
 3311 0032 0820     		movs	r0, #8
 3312 0034 FFF7FEFF 		bl	CySysWdtResetCounters
1785:Generated_Source\PSoC4/CyLFClk.c ****             }
 3313              		.loc 2 1785 0
 3314 0038 0420     		movs	r0, #4
 3315 003a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3316              		.loc 2 1812 0
 3317 003e 20E0     		b	.L284
 3318              	.L280:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 104


1792:Generated_Source\PSoC4/CyLFClk.c ****         {
 3319              		.loc 2 1792 0
 3320 0040 7B68     		ldr	r3, [r7, #4]
 3321 0042 012B     		cmp	r3, #1
 3322 0044 1DD1     		bne	.L284
1794:Generated_Source\PSoC4/CyLFClk.c ****             {
 3323              		.loc 2 1794 0
 3324 0046 7B68     		ldr	r3, [r7, #4]
 3325 0048 1800     		movs	r0, r3
 3326 004a FFF7FEFF 		bl	CySysWdtGetMode
 3327 004e 0300     		movs	r3, r0
 3328 0050 032B     		cmp	r3, #3
 3329 0052 05D1     		bne	.L283
1796:Generated_Source\PSoC4/CyLFClk.c ****             }
 3330              		.loc 2 1796 0
 3331 0054 8023     		movs	r3, #128
 3332 0056 DB00     		lsls	r3, r3, #3
 3333 0058 1800     		movs	r0, r3
 3334 005a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3335              		.loc 2 1812 0
 3336 005e 10E0     		b	.L284
 3337              	.L283:
1798:Generated_Source\PSoC4/CyLFClk.c ****             {
 3338              		.loc 2 1798 0
 3339 0060 7B68     		ldr	r3, [r7, #4]
 3340 0062 1800     		movs	r0, r3
 3341 0064 FFF7FEFF 		bl	CySysWdtGetMode
 3342 0068 0300     		movs	r3, r0
 3343 006a 022B     		cmp	r3, #2
 3344 006c 09D1     		bne	.L284
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3345              		.loc 2 1800 0
 3346 006e 8023     		movs	r3, #128
 3347 0070 1B01     		lsls	r3, r3, #4
 3348 0072 1800     		movs	r0, r3
 3349 0074 FFF7FEFF 		bl	CySysWdtResetCounters
1801:Generated_Source\PSoC4/CyLFClk.c ****             }
 3350              		.loc 2 1801 0
 3351 0078 8023     		movs	r3, #128
 3352 007a DB00     		lsls	r3, r3, #3
 3353 007c 1800     		movs	r0, r3
 3354 007e FFF7FEFF 		bl	CySysWdtClearInterrupt
 3355              	.L284:
 3356              		.loc 2 1812 0
 3357 0082 C046     		nop
 3358 0084 BD46     		mov	sp, r7
 3359 0086 02B0     		add	sp, sp, #8
 3360              		@ sp needed
 3361 0088 80BD     		pop	{r7, pc}
 3362              		.cfi_endproc
 3363              	.LFE43:
 3364              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 3365 008a C046     		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 3366              		.align	2
 3367              		.code	16
 3368              		.thumb_func
 3369              		.type	CySysClkLfclkPosedgeCatch, %function
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 105


 3370              	CySysClkLfclkPosedgeCatch:
 3371              	.LFB44:
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
 3372              		.loc 2 1841 0
 3373              		.cfi_startproc
 3374              		@ args = 0, pretend = 0, frame = 8
 3375              		@ frame_needed = 1, uses_anonymous_args = 0
 3376 0000 80B5     		push	{r7, lr}
 3377              		.cfi_def_cfa_offset 8
 3378              		.cfi_offset 7, -8
 3379              		.cfi_offset 14, -4
 3380 0002 82B0     		sub	sp, sp, #8
 3381              		.cfi_def_cfa_offset 16
 3382 0004 00AF     		add	r7, sp, #0
 3383              		.cfi_def_cfa_register 7
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 3384              		.loc 2 1845 0
 3385 0006 0020     		movs	r0, #0
 3386 0008 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3387 000c 031E     		subs	r3, r0, #0
 3388 000e 03D0     		beq	.L286
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3389              		.loc 2 1847 0
 3390 0010 1E4B     		ldr	r3, .L291
 3391 0012 0022     		movs	r2, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 106


 3392 0014 1A60     		str	r2, [r3]
 3393 0016 24E0     		b	.L287
 3394              	.L286:
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 3395              		.loc 2 1849 0
 3396 0018 0120     		movs	r0, #1
 3397 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3398 001e 031E     		subs	r3, r0, #0
 3399 0020 03D0     		beq	.L288
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
 3400              		.loc 2 1851 0
 3401 0022 1A4B     		ldr	r3, .L291
 3402 0024 0122     		movs	r2, #1
 3403 0026 1A60     		str	r2, [r3]
 3404 0028 1BE0     		b	.L287
 3405              	.L288:
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 3406              		.loc 2 1853 0
 3407 002a 0220     		movs	r0, #2
 3408 002c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3409 0030 031E     		subs	r3, r0, #0
 3410 0032 03D0     		beq	.L289
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
 3411              		.loc 2 1855 0
 3412 0034 154B     		ldr	r3, .L291
 3413 0036 0222     		movs	r2, #2
 3414 0038 1A60     		str	r2, [r3]
 3415 003a 12E0     		b	.L287
 3416              	.L289:
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
 3417              		.loc 2 1860 0
 3418 003c 144B     		ldr	r3, .L291+4
 3419 003e 0122     		movs	r2, #1
 3420 0040 1A60     		str	r2, [r3]
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3421              		.loc 2 1861 0
 3422 0042 124B     		ldr	r3, .L291
 3423 0044 0022     		movs	r2, #0
 3424 0046 1A60     		str	r2, [r3]
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
 3425              		.loc 2 1863 0
 3426 0048 0020     		movs	r0, #0
 3427 004a FFF7FEFF 		bl	CySysWdtGetMode
 3428 004e 0200     		movs	r2, r0
 3429 0050 104B     		ldr	r3, .L291+8
 3430 0052 1A60     		str	r2, [r3]
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 3431              		.loc 2 1864 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 107


 3432 0054 0021     		movs	r1, #0
 3433 0056 0020     		movs	r0, #0
 3434 0058 FFF7FEFF 		bl	CySysWdtSetMode
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 3435              		.loc 2 1865 0
 3436 005c 0120     		movs	r0, #1
 3437 005e FFF7FEFF 		bl	CySysWdtEnable
 3438              	.L287:
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
 3439              		.loc 2 1868 0
 3440 0062 0A4B     		ldr	r3, .L291
 3441 0064 1B68     		ldr	r3, [r3]
 3442 0066 1800     		movs	r0, r3
 3443 0068 FFF7FEFF 		bl	CySysWdtGetCount
 3444 006c 0300     		movs	r3, r0
 3445 006e 7B60     		str	r3, [r7, #4]
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 3446              		.loc 2 1869 0
 3447 0070 C046     		nop
 3448              	.L290:
 3449              		.loc 2 1869 0 is_stmt 0 discriminator 1
 3450 0072 064B     		ldr	r3, .L291
 3451 0074 1B68     		ldr	r3, [r3]
 3452 0076 1800     		movs	r0, r3
 3453 0078 FFF7FEFF 		bl	CySysWdtGetCount
 3454 007c 0200     		movs	r2, r0
 3455 007e 7B68     		ldr	r3, [r7, #4]
 3456 0080 9A42     		cmp	r2, r3
 3457 0082 F6D0     		beq	.L290
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
 3458              		.loc 2 1873 0 is_stmt 1
 3459 0084 C046     		nop
 3460 0086 BD46     		mov	sp, r7
 3461 0088 02B0     		add	sp, sp, #8
 3462              		@ sp needed
 3463 008a 80BD     		pop	{r7, pc}
 3464              	.L292:
 3465              		.align	2
 3466              	.L291:
 3467 008c 24000000 		.word	lfclkPosedgeEnabledWdtCounter.5072
 3468 0090 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3469 0094 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3470              		.cfi_endproc
 3471              	.LFE44:
 3472              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 3473              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 3474              		.align	2
 3475              		.code	16
 3476              		.thumb_func
 3477              		.type	CySysClkLfclkPosedgeRestore, %function
 3478              	CySysClkLfclkPosedgeRestore:
 3479              	.LFB45:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 108


1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
 3480              		.loc 2 1895 0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 0
 3483              		@ frame_needed = 1, uses_anonymous_args = 0
 3484 0000 80B5     		push	{r7, lr}
 3485              		.cfi_def_cfa_offset 8
 3486              		.cfi_offset 7, -8
 3487              		.cfi_offset 14, -4
 3488 0002 00AF     		add	r7, sp, #0
 3489              		.cfi_def_cfa_register 7
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 3490              		.loc 2 1896 0
 3491 0004 0A4B     		ldr	r3, .L296
 3492 0006 1B68     		ldr	r3, [r3]
 3493 0008 002B     		cmp	r3, #0
 3494 000a 0ED0     		beq	.L295
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 3495              		.loc 2 1899 0
 3496 000c 094B     		ldr	r3, .L296+4
 3497 000e 094A     		ldr	r2, .L296+4
 3498 0010 1268     		ldr	r2, [r2]
 3499 0012 0121     		movs	r1, #1
 3500 0014 8A43     		bics	r2, r1
 3501 0016 1A60     		str	r2, [r3]
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 3502              		.loc 2 1900 0
 3503 0018 074B     		ldr	r3, .L296+8
 3504 001a 1B68     		ldr	r3, [r3]
 3505 001c 1900     		movs	r1, r3
 3506 001e 0020     		movs	r0, #0
 3507 0020 FFF7FEFF 		bl	CySysWdtSetMode
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 3508              		.loc 2 1901 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 109


 3509 0024 024B     		ldr	r3, .L296
 3510 0026 0022     		movs	r2, #0
 3511 0028 1A60     		str	r2, [r3]
 3512              	.L295:
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
 3513              		.loc 2 1903 0
 3514 002a C046     		nop
 3515 002c BD46     		mov	sp, r7
 3516              		@ sp needed
 3517 002e 80BD     		pop	{r7, pc}
 3518              	.L297:
 3519              		.align	2
 3520              	.L296:
 3521 0030 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3522 0034 10020B40 		.word	1074463248
 3523 0038 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3524              		.cfi_endproc
 3525              	.LFE45:
 3526              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 3527              		.section	.text.CySysTimerDelay,"ax",%progbits
 3528              		.align	2
 3529              		.global	CySysTimerDelay
 3530              		.code	16
 3531              		.thumb_func
 3532              		.type	CySysTimerDelay, %function
 3533              	CySysTimerDelay:
 3534              	.LFB46:
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 110


1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 111


1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 112


2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 113


2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 114


2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 115


2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 116


2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 117


2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 118


2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 119


2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 120


2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 121


2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 122


2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 123


2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 124


2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 125


2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 126


2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 127


2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 128


2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 129


3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
 3535              		.loc 2 3032 0
 3536              		.cfi_startproc
 3537              		@ args = 0, pretend = 0, frame = 24
 3538              		@ frame_needed = 1, uses_anonymous_args = 0
 3539 0000 80B5     		push	{r7, lr}
 3540              		.cfi_def_cfa_offset 8
 3541              		.cfi_offset 7, -8
 3542              		.cfi_offset 14, -4
 3543 0002 86B0     		sub	sp, sp, #24
 3544              		.cfi_def_cfa_offset 32
 3545 0004 00AF     		add	r7, sp, #0
 3546              		.cfi_def_cfa_register 7
 3547 0006 F860     		str	r0, [r7, #12]
 3548 0008 7A60     		str	r2, [r7, #4]
 3549 000a 0B23     		movs	r3, #11
 3550 000c FB18     		adds	r3, r7, r3
 3551 000e 0A1C     		adds	r2, r1, #0
 3552 0010 1A70     		strb	r2, [r3]
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3553              		.loc 2 3037 0
 3554 0012 FB68     		ldr	r3, [r7, #12]
 3555 0014 012B     		cmp	r3, #1
 3556 0016 1ED8     		bhi	.L299
 3557              		.loc 2 3037 0 is_stmt 0 discriminator 1
 3558 0018 FB68     		ldr	r3, [r7, #12]
 3559 001a 1800     		movs	r0, r3
 3560 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3561 0020 031E     		subs	r3, r0, #0
 3562 0022 18D1     		bne	.L299
 3563              		.loc 2 3037 0 discriminator 2
 3564 0024 7B68     		ldr	r3, [r7, #4]
 3565 0026 0F4A     		ldr	r2, .L301
 3566 0028 9342     		cmp	r3, r2
 3567 002a 14D8     		bhi	.L299
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 130


3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
 3568              		.loc 2 3040 0 is_stmt 1
 3569 002c FB68     		ldr	r3, [r7, #12]
 3570 002e 1800     		movs	r0, r3
 3571 0030 FFF7FEFF 		bl	CySysWdtGetCount
 3572 0034 0300     		movs	r3, r0
 3573 0036 7B61     		str	r3, [r7, #20]
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 3574              		.loc 2 3041 0
 3575 0038 7A69     		ldr	r2, [r7, #20]
 3576 003a 7B68     		ldr	r3, [r7, #4]
 3577 003c D318     		adds	r3, r2, r3
 3578 003e 1B04     		lsls	r3, r3, #16
 3579 0040 1B0C     		lsrs	r3, r3, #16
 3580 0042 3B61     		str	r3, [r7, #16]
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
 3581              		.loc 2 3043 0
 3582 0044 3A69     		ldr	r2, [r7, #16]
 3583 0046 0B23     		movs	r3, #11
 3584 0048 FB18     		adds	r3, r7, r3
 3585 004a 1978     		ldrb	r1, [r3]
 3586 004c FB68     		ldr	r3, [r7, #12]
 3587 004e 1800     		movs	r0, r3
 3588 0050 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 3589 0054 02E0     		b	.L300
 3590              	.L299:
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3591              		.loc 2 3047 0 discriminator 1
 3592 0056 0020     		movs	r0, #0
 3593 0058 FFF7FEFF 		bl	CyHalt
 3594              	.L300:
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
 3595              		.loc 2 3065 0
 3596 005c C046     		nop
 3597 005e BD46     		mov	sp, r7
 3598 0060 06B0     		add	sp, sp, #24
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 131


 3599              		@ sp needed
 3600 0062 80BD     		pop	{r7, pc}
 3601              	.L302:
 3602              		.align	2
 3603              	.L301:
 3604 0064 FFFF0000 		.word	65535
 3605              		.cfi_endproc
 3606              	.LFE46:
 3607              		.size	CySysTimerDelay, .-CySysTimerDelay
 3608              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 3609              		.align	2
 3610              		.global	CySysTimerDelayUntilMatch
 3611              		.code	16
 3612              		.thumb_func
 3613              		.type	CySysTimerDelayUntilMatch, %function
 3614              	CySysTimerDelayUntilMatch:
 3615              	.LFB47:
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 132


3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 3616              		.loc 2 3161 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 133


 3617              		.cfi_startproc
 3618              		@ args = 0, pretend = 0, frame = 24
 3619              		@ frame_needed = 1, uses_anonymous_args = 0
 3620 0000 80B5     		push	{r7, lr}
 3621              		.cfi_def_cfa_offset 8
 3622              		.cfi_offset 7, -8
 3623              		.cfi_offset 14, -4
 3624 0002 86B0     		sub	sp, sp, #24
 3625              		.cfi_def_cfa_offset 32
 3626 0004 00AF     		add	r7, sp, #0
 3627              		.cfi_def_cfa_register 7
 3628 0006 F860     		str	r0, [r7, #12]
 3629 0008 7A60     		str	r2, [r7, #4]
 3630 000a 0B23     		movs	r3, #11
 3631 000c FB18     		adds	r3, r7, r3
 3632 000e 0A1C     		adds	r2, r1, #0
 3633 0010 1A70     		strb	r2, [r3]
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3634              		.loc 2 3165 0
 3635 0012 FB68     		ldr	r3, [r7, #12]
 3636 0014 012B     		cmp	r3, #1
 3637 0016 3BD8     		bhi	.L304
 3638              		.loc 2 3165 0 is_stmt 0 discriminator 1
 3639 0018 FB68     		ldr	r3, [r7, #12]
 3640 001a 1800     		movs	r0, r3
 3641 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3642 0020 031E     		subs	r3, r0, #0
 3643 0022 35D1     		bne	.L304
 3644              		.loc 2 3165 0 discriminator 2
 3645 0024 7B68     		ldr	r3, [r7, #4]
 3646 0026 1E4A     		ldr	r2, .L310
 3647 0028 9342     		cmp	r3, r2
 3648 002a 31D8     		bhi	.L304
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
 3649              		.loc 2 3168 0 is_stmt 1
 3650 002c 0B23     		movs	r3, #11
 3651 002e FB18     		adds	r3, r7, r3
 3652 0030 1B78     		ldrb	r3, [r3]
 3653 0032 002B     		cmp	r3, #0
 3654 0034 14D1     		bne	.L305
 3655              	.L306:
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3656              		.loc 2 3172 0 discriminator 1
 3657 0036 FB68     		ldr	r3, [r7, #12]
 3658 0038 1800     		movs	r0, r3
 3659 003a FFF7FEFF 		bl	CySysWdtGetCount
 3660 003e 0300     		movs	r3, r0
 3661 0040 7B61     		str	r3, [r7, #20]
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 134


 3662              		.loc 2 3173 0 discriminator 1
 3663 0042 7A69     		ldr	r2, [r7, #20]
 3664 0044 7B68     		ldr	r3, [r7, #4]
 3665 0046 9A42     		cmp	r2, r3
 3666 0048 F5D8     		bhi	.L306
 3667              	.L307:
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3668              		.loc 2 3177 0 discriminator 1
 3669 004a FB68     		ldr	r3, [r7, #12]
 3670 004c 1800     		movs	r0, r3
 3671 004e FFF7FEFF 		bl	CySysWdtGetCount
 3672 0052 0300     		movs	r3, r0
 3673 0054 7B61     		str	r3, [r7, #20]
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 3674              		.loc 2 3178 0 discriminator 1
 3675 0056 7A69     		ldr	r2, [r7, #20]
 3676 0058 7B68     		ldr	r3, [r7, #4]
 3677 005a 9A42     		cmp	r2, r3
 3678 005c F5D3     		bcc	.L307
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3679              		.loc 2 3168 0
 3680 005e 1AE0     		b	.L309
 3681              	.L305:
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
 3682              		.loc 2 3182 0
 3683 0060 104B     		ldr	r3, .L310+4
 3684 0062 FA68     		ldr	r2, [r7, #12]
 3685 0064 9200     		lsls	r2, r2, #2
 3686 0066 D358     		ldr	r3, [r2, r3]
 3687 0068 7B61     		str	r3, [r7, #20]
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 3688              		.loc 2 3183 0
 3689 006a 7A68     		ldr	r2, [r7, #4]
 3690 006c FB68     		ldr	r3, [r7, #12]
 3691 006e 1100     		movs	r1, r2
 3692 0070 1800     		movs	r0, r3
 3693 0072 FFF7FEFF 		bl	CySysWdtSetMatch
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
 3694              		.loc 2 3185 0
 3695 0076 0C4B     		ldr	r3, .L310+8
 3696 0078 1A68     		ldr	r2, [r3]
 3697 007a 7B69     		ldr	r3, [r7, #20]
 3698 007c 1A43     		orrs	r2, r3
 3699 007e 0A4B     		ldr	r3, .L310+8
 3700 0080 1A60     		str	r2, [r3]
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
 3701              		.loc 2 3186 0
 3702 0082 0A4B     		ldr	r3, .L310+12
 3703 0084 1A68     		ldr	r2, [r3]
 3704 0086 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 135


 3705 0088 1A43     		orrs	r2, r3
 3706 008a 084B     		ldr	r3, .L310+12
 3707 008c 1A60     		str	r2, [r3]
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3708              		.loc 2 3168 0
 3709 008e 02E0     		b	.L309
 3710              	.L304:
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3711              		.loc 2 3191 0 discriminator 1
 3712 0090 0020     		movs	r0, #0
 3713 0092 FFF7FEFF 		bl	CyHalt
 3714              	.L309:
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 3715              		.loc 2 3226 0
 3716 0096 C046     		nop
 3717 0098 BD46     		mov	sp, r7
 3718 009a 06B0     		add	sp, sp, #24
 3719              		@ sp needed
 3720 009c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 136


 3721              	.L311:
 3722 009e C046     		.align	2
 3723              	.L310:
 3724 00a0 FFFF0000 		.word	65535
 3725 00a4 00000000 		.word	counterIntMaskTbl
 3726 00a8 08000000 		.word	disableServicedIsr
 3727 00ac 04000000 		.word	wdtIsrMask
 3728              		.cfi_endproc
 3729              	.LFE47:
 3730              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 3731              		.bss
 3732              	iloTrimTrig.4876:
 3733 0018 00       		.space	1
 3734 0019 000000   		.align	2
 3735              	compensateRunningStatus.4886:
 3736 001c 00000000 		.space	4
 3737              		.align	2
 3738              	trimRunningStatus.4898:
 3739 0020 00000000 		.space	4
 3740              		.align	2
 3741              	lfclkPosedgeEnabledWdtCounter.5072:
 3742 0024 00000000 		.space	4
 3743              		.text
 3744              	.Letext0:
 3745              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 3746              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 3747              		.section	.debug_info,"",%progbits
 3748              	.Ldebug_info0:
 3749 0000 AF0A0000 		.4byte	0xaaf
 3750 0004 0400     		.2byte	0x4
 3751 0006 00000000 		.4byte	.Ldebug_abbrev0
 3752 000a 04       		.byte	0x4
 3753 000b 01       		.uleb128 0x1
 3754 000c 57040000 		.4byte	.LASF120
 3755 0010 0C       		.byte	0xc
 3756 0011 24070000 		.4byte	.LASF121
 3757 0015 0E060000 		.4byte	.LASF122
 3758 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3759 001d 00000000 		.4byte	0
 3760 0021 00000000 		.4byte	.Ldebug_line0
 3761 0025 02       		.uleb128 0x2
 3762 0026 01       		.byte	0x1
 3763 0027 06       		.byte	0x6
 3764 0028 68010000 		.4byte	.LASF0
 3765 002c 02       		.uleb128 0x2
 3766 002d 01       		.byte	0x1
 3767 002e 08       		.byte	0x8
 3768 002f 78060000 		.4byte	.LASF1
 3769 0033 02       		.uleb128 0x2
 3770 0034 02       		.byte	0x2
 3771 0035 05       		.byte	0x5
 3772 0036 C2060000 		.4byte	.LASF2
 3773 003a 02       		.uleb128 0x2
 3774 003b 02       		.byte	0x2
 3775 003c 07       		.byte	0x7
 3776 003d B3030000 		.4byte	.LASF3
 3777 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 137


 3778 0042 04       		.byte	0x4
 3779 0043 05       		.byte	0x5
 3780 0044 D2010000 		.4byte	.LASF4
 3781 0048 02       		.uleb128 0x2
 3782 0049 04       		.byte	0x4
 3783 004a 07       		.byte	0x7
 3784 004b 58030000 		.4byte	.LASF5
 3785 004f 02       		.uleb128 0x2
 3786 0050 08       		.byte	0x8
 3787 0051 05       		.byte	0x5
 3788 0052 5A010000 		.4byte	.LASF6
 3789 0056 02       		.uleb128 0x2
 3790 0057 08       		.byte	0x8
 3791 0058 07       		.byte	0x7
 3792 0059 EF000000 		.4byte	.LASF7
 3793 005d 03       		.uleb128 0x3
 3794 005e 04       		.byte	0x4
 3795 005f 05       		.byte	0x5
 3796 0060 696E7400 		.ascii	"int\000"
 3797 0064 02       		.uleb128 0x2
 3798 0065 04       		.byte	0x4
 3799 0066 07       		.byte	0x7
 3800 0067 10030000 		.4byte	.LASF8
 3801 006b 04       		.uleb128 0x4
 3802 006c ED010000 		.4byte	.LASF9
 3803 0070 03       		.byte	0x3
 3804 0071 E401     		.2byte	0x1e4
 3805 0073 2C000000 		.4byte	0x2c
 3806 0077 04       		.uleb128 0x4
 3807 0078 00000000 		.4byte	.LASF10
 3808 007c 03       		.byte	0x3
 3809 007d E501     		.2byte	0x1e5
 3810 007f 3A000000 		.4byte	0x3a
 3811 0083 04       		.uleb128 0x4
 3812 0084 45020000 		.4byte	.LASF11
 3813 0088 03       		.byte	0x3
 3814 0089 E601     		.2byte	0x1e6
 3815 008b 48000000 		.4byte	0x48
 3816 008f 04       		.uleb128 0x4
 3817 0090 9A010000 		.4byte	.LASF12
 3818 0094 03       		.byte	0x3
 3819 0095 E901     		.2byte	0x1e9
 3820 0097 41000000 		.4byte	0x41
 3821 009b 02       		.uleb128 0x2
 3822 009c 04       		.byte	0x4
 3823 009d 04       		.byte	0x4
 3824 009e 8C080000 		.4byte	.LASF13
 3825 00a2 02       		.uleb128 0x2
 3826 00a3 08       		.byte	0x8
 3827 00a4 04       		.byte	0x4
 3828 00a5 FA010000 		.4byte	.LASF14
 3829 00a9 02       		.uleb128 0x2
 3830 00aa 01       		.byte	0x1
 3831 00ab 08       		.byte	0x8
 3832 00ac 98070000 		.4byte	.LASF15
 3833 00b0 04       		.uleb128 0x4
 3834 00b1 92080000 		.4byte	.LASF16
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 138


 3835 00b5 03       		.byte	0x3
 3836 00b6 8602     		.2byte	0x286
 3837 00b8 48000000 		.4byte	0x48
 3838 00bc 05       		.uleb128 0x5
 3839 00bd 77000000 		.4byte	0x77
 3840 00c1 04       		.uleb128 0x4
 3841 00c2 03050000 		.4byte	.LASF17
 3842 00c6 03       		.byte	0x3
 3843 00c7 9002     		.2byte	0x290
 3844 00c9 CD000000 		.4byte	0xcd
 3845 00cd 05       		.uleb128 0x5
 3846 00ce 83000000 		.4byte	0x83
 3847 00d2 06       		.uleb128 0x6
 3848 00d3 04       		.byte	0x4
 3849 00d4 D8000000 		.4byte	0xd8
 3850 00d8 07       		.uleb128 0x7
 3851 00d9 08       		.uleb128 0x8
 3852 00da 01       		.byte	0x1
 3853 00db 2C000000 		.4byte	0x2c
 3854 00df 01       		.byte	0x1
 3855 00e0 1A       		.byte	0x1a
 3856 00e1 F2000000 		.4byte	0xf2
 3857 00e5 09       		.uleb128 0x9
 3858 00e6 A1050000 		.4byte	.LASF18
 3859 00ea 00       		.byte	0
 3860 00eb 09       		.uleb128 0x9
 3861 00ec D2080000 		.4byte	.LASF19
 3862 00f0 01       		.byte	0x1
 3863 00f1 00       		.byte	0
 3864 00f2 0A       		.uleb128 0xa
 3865 00f3 B1010000 		.4byte	.LASF20
 3866 00f7 01       		.byte	0x1
 3867 00f8 1D       		.byte	0x1d
 3868 00f9 D9000000 		.4byte	0xd9
 3869 00fd 0A       		.uleb128 0xa
 3870 00fe 8C010000 		.4byte	.LASF21
 3871 0102 01       		.byte	0x1
 3872 0103 58       		.byte	0x58
 3873 0104 D2000000 		.4byte	0xd2
 3874 0108 02       		.uleb128 0x2
 3875 0109 08       		.byte	0x8
 3876 010a 04       		.byte	0x4
 3877 010b 60050000 		.4byte	.LASF22
 3878 010f 02       		.uleb128 0x2
 3879 0110 04       		.byte	0x4
 3880 0111 07       		.byte	0x7
 3881 0112 57050000 		.4byte	.LASF23
 3882 0116 0B       		.uleb128 0xb
 3883 0117 3E010000 		.4byte	.LASF24
 3884 011b 01       		.byte	0x1
 3885 011c 9202     		.2byte	0x292
 3886 011e 00000000 		.4byte	.LFB0
 3887 0122 4C000000 		.4byte	.LFE0-.LFB0
 3888 0126 01       		.uleb128 0x1
 3889 0127 9C       		.byte	0x9c
 3890 0128 0B       		.uleb128 0xb
 3891 0129 67020000 		.4byte	.LASF25
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 139


 3892 012d 01       		.byte	0x1
 3893 012e AB02     		.2byte	0x2ab
 3894 0130 00000000 		.4byte	.LFB1
 3895 0134 4C000000 		.4byte	.LFE1-.LFB1
 3896 0138 01       		.uleb128 0x1
 3897 0139 9C       		.byte	0x9c
 3898 013a 0C       		.uleb128 0xc
 3899 013b 21040000 		.4byte	.LASF30
 3900 013f 02       		.byte	0x2
 3901 0140 53       		.byte	0x53
 3902 0141 00000000 		.4byte	.LFB2
 3903 0145 1C000000 		.4byte	.LFE2-.LFB2
 3904 0149 01       		.uleb128 0x1
 3905 014a 9C       		.byte	0x9c
 3906 014b 0D       		.uleb128 0xd
 3907 014c 13020000 		.4byte	.LASF26
 3908 0150 02       		.byte	0x2
 3909 0151 6C       		.byte	0x6c
 3910 0152 00000000 		.4byte	.LFB3
 3911 0156 60000000 		.4byte	.LFE3-.LFB3
 3912 015a 01       		.uleb128 0x1
 3913 015b 9C       		.byte	0x9c
 3914 015c 6F010000 		.4byte	0x16f
 3915 0160 0E       		.uleb128 0xe
 3916 0161 7D010000 		.4byte	.LASF28
 3917 0165 02       		.byte	0x2
 3918 0166 6F       		.byte	0x6f
 3919 0167 6B000000 		.4byte	0x6b
 3920 016b 02       		.uleb128 0x2
 3921 016c 91       		.byte	0x91
 3922 016d 6F       		.sleb128 -17
 3923 016e 00       		.byte	0
 3924 016f 0F       		.uleb128 0xf
 3925 0170 B4000000 		.4byte	.LASF27
 3926 0174 02       		.byte	0x2
 3927 0175 A8       		.byte	0xa8
 3928 0176 00000000 		.4byte	.LFB4
 3929 017a 6C000000 		.4byte	.LFE4-.LFB4
 3930 017e 01       		.uleb128 0x1
 3931 017f 9C       		.byte	0x9c
 3932 0180 96010000 		.4byte	0x196
 3933 0184 0E       		.uleb128 0xe
 3934 0185 FC030000 		.4byte	.LASF29
 3935 0189 02       		.byte	0x2
 3936 018a AB       		.byte	0xab
 3937 018b 6B000000 		.4byte	0x6b
 3938 018f 05       		.uleb128 0x5
 3939 0190 03       		.byte	0x3
 3940 0191 18000000 		.4byte	iloTrimTrig.4876
 3941 0195 00       		.byte	0
 3942 0196 0C       		.uleb128 0xc
 3943 0197 4C020000 		.4byte	.LASF31
 3944 019b 02       		.byte	0x2
 3945 019c C9       		.byte	0xc9
 3946 019d 00000000 		.4byte	.LFB5
 3947 01a1 20000000 		.4byte	.LFE5-.LFB5
 3948 01a5 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 140


 3949 01a6 9C       		.byte	0x9c
 3950 01a7 10       		.uleb128 0x10
 3951 01a8 BC080000 		.4byte	.LASF39
 3952 01ac 02       		.byte	0x2
 3953 01ad 0B01     		.2byte	0x10b
 3954 01af B0000000 		.4byte	0xb0
 3955 01b3 00000000 		.4byte	.LFB6
 3956 01b7 58010000 		.4byte	.LFE6-.LFB6
 3957 01bb 01       		.uleb128 0x1
 3958 01bc 9C       		.byte	0x9c
 3959 01bd 2E020000 		.4byte	0x22e
 3960 01c1 11       		.uleb128 0x11
 3961 01c2 4B030000 		.4byte	.LASF32
 3962 01c6 02       		.byte	0x2
 3963 01c7 0B01     		.2byte	0x10b
 3964 01c9 83000000 		.4byte	0x83
 3965 01cd 02       		.uleb128 0x2
 3966 01ce 91       		.byte	0x91
 3967 01cf 5C       		.sleb128 -36
 3968 01d0 11       		.uleb128 0x11
 3969 01d1 01020000 		.4byte	.LASF33
 3970 01d5 02       		.byte	0x2
 3971 01d6 0B01     		.2byte	0x10b
 3972 01d8 2E020000 		.4byte	0x22e
 3973 01dc 02       		.uleb128 0x2
 3974 01dd 91       		.byte	0x91
 3975 01de 58       		.sleb128 -40
 3976 01df 12       		.uleb128 0x12
 3977 01e0 23020000 		.4byte	.LASF34
 3978 01e4 02       		.byte	0x2
 3979 01e5 0D01     		.2byte	0x10d
 3980 01e7 83000000 		.4byte	0x83
 3981 01eb 02       		.uleb128 0x2
 3982 01ec 91       		.byte	0x91
 3983 01ed 6C       		.sleb128 -20
 3984 01ee 12       		.uleb128 0x12
 3985 01ef 2E080000 		.4byte	.LASF35
 3986 01f3 02       		.byte	0x2
 3987 01f4 0E01     		.2byte	0x10e
 3988 01f6 83000000 		.4byte	0x83
 3989 01fa 02       		.uleb128 0x2
 3990 01fb 91       		.byte	0x91
 3991 01fc 60       		.sleb128 -32
 3992 01fd 12       		.uleb128 0x12
 3993 01fe 86060000 		.4byte	.LASF36
 3994 0202 02       		.byte	0x2
 3995 0203 0F01     		.2byte	0x10f
 3996 0205 83000000 		.4byte	0x83
 3997 0209 05       		.uleb128 0x5
 3998 020a 03       		.byte	0x3
 3999 020b 1C000000 		.4byte	compensateRunningStatus.4886
 4000 020f 12       		.uleb128 0x12
 4001 0210 B3050000 		.4byte	.LASF37
 4002 0214 02       		.byte	0x2
 4003 0215 1001     		.2byte	0x110
 4004 0217 83000000 		.4byte	0x83
 4005 021b 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 141


 4006 021c 91       		.byte	0x91
 4007 021d 64       		.sleb128 -28
 4008 021e 12       		.uleb128 0x12
 4009 021f 29050000 		.4byte	.LASF38
 4010 0223 02       		.byte	0x2
 4011 0224 1101     		.2byte	0x111
 4012 0226 B0000000 		.4byte	0xb0
 4013 022a 02       		.uleb128 0x2
 4014 022b 91       		.byte	0x91
 4015 022c 68       		.sleb128 -24
 4016 022d 00       		.byte	0
 4017 022e 06       		.uleb128 0x6
 4018 022f 04       		.byte	0x4
 4019 0230 83000000 		.4byte	0x83
 4020 0234 13       		.uleb128 0x13
 4021 0235 F6060000 		.4byte	.LASF63
 4022 0239 02       		.byte	0x2
 4023 023a 7201     		.2byte	0x172
 4024 023c 83000000 		.4byte	0x83
 4025 0240 00000000 		.4byte	.LFB7
 4026 0244 1C000000 		.4byte	.LFE7-.LFB7
 4027 0248 01       		.uleb128 0x1
 4028 0249 9C       		.byte	0x9c
 4029 024a 10       		.uleb128 0x10
 4030 024b E6060000 		.4byte	.LASF40
 4031 024f 02       		.byte	0x2
 4032 0250 C101     		.2byte	0x1c1
 4033 0252 B0000000 		.4byte	0xb0
 4034 0256 00000000 		.4byte	.LFB8
 4035 025a 24010000 		.4byte	.LFE8-.LFB8
 4036 025e 01       		.uleb128 0x1
 4037 025f 9C       		.byte	0x9c
 4038 0260 D1020000 		.4byte	0x2d1
 4039 0264 11       		.uleb128 0x11
 4040 0265 9D070000 		.4byte	.LASF41
 4041 0269 02       		.byte	0x2
 4042 026a C101     		.2byte	0x1c1
 4043 026c 83000000 		.4byte	0x83
 4044 0270 02       		.uleb128 0x2
 4045 0271 91       		.byte	0x91
 4046 0272 64       		.sleb128 -28
 4047 0273 11       		.uleb128 0x11
 4048 0274 45070000 		.4byte	.LASF42
 4049 0278 02       		.byte	0x2
 4050 0279 C101     		.2byte	0x1c1
 4051 027b D1020000 		.4byte	0x2d1
 4052 027f 02       		.uleb128 0x2
 4053 0280 91       		.byte	0x91
 4054 0281 60       		.sleb128 -32
 4055 0282 12       		.uleb128 0x12
 4056 0283 FE070000 		.4byte	.LASF43
 4057 0287 02       		.byte	0x2
 4058 0288 C301     		.2byte	0x1c3
 4059 028a 83000000 		.4byte	0x83
 4060 028e 02       		.uleb128 0x2
 4061 028f 91       		.byte	0x91
 4062 0290 74       		.sleb128 -12
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 142


 4063 0291 12       		.uleb128 0x12
 4064 0292 E3050000 		.4byte	.LASF44
 4065 0296 02       		.byte	0x2
 4066 0297 C401     		.2byte	0x1c4
 4067 0299 83000000 		.4byte	0x83
 4068 029d 02       		.uleb128 0x2
 4069 029e 91       		.byte	0x91
 4070 029f 70       		.sleb128 -16
 4071 02a0 12       		.uleb128 0x12
 4072 02a1 0C080000 		.4byte	.LASF45
 4073 02a5 02       		.byte	0x2
 4074 02a6 C501     		.2byte	0x1c5
 4075 02a8 83000000 		.4byte	0x83
 4076 02ac 05       		.uleb128 0x5
 4077 02ad 03       		.byte	0x3
 4078 02ae 20000000 		.4byte	trimRunningStatus.4898
 4079 02b2 12       		.uleb128 0x12
 4080 02b3 B3050000 		.4byte	.LASF37
 4081 02b7 02       		.byte	0x2
 4082 02b8 C601     		.2byte	0x1c6
 4083 02ba 83000000 		.4byte	0x83
 4084 02be 02       		.uleb128 0x2
 4085 02bf 91       		.byte	0x91
 4086 02c0 68       		.sleb128 -24
 4087 02c1 12       		.uleb128 0x12
 4088 02c2 29050000 		.4byte	.LASF38
 4089 02c6 02       		.byte	0x2
 4090 02c7 C701     		.2byte	0x1c7
 4091 02c9 B0000000 		.4byte	0xb0
 4092 02cd 02       		.uleb128 0x2
 4093 02ce 91       		.byte	0x91
 4094 02cf 6C       		.sleb128 -20
 4095 02d0 00       		.byte	0
 4096 02d1 06       		.uleb128 0x6
 4097 02d2 04       		.byte	0x4
 4098 02d3 8F000000 		.4byte	0x8f
 4099 02d7 10       		.uleb128 0x10
 4100 02d8 08040000 		.4byte	.LASF46
 4101 02dc 02       		.byte	0x2
 4102 02dd 3B02     		.2byte	0x23b
 4103 02df B0000000 		.4byte	0xb0
 4104 02e3 00000000 		.4byte	.LFB9
 4105 02e7 FC000000 		.4byte	.LFE9-.LFB9
 4106 02eb 01       		.uleb128 0x1
 4107 02ec 9C       		.byte	0x9c
 4108 02ed 4C030000 		.4byte	0x34c
 4109 02f1 11       		.uleb128 0x11
 4110 02f2 45070000 		.4byte	.LASF42
 4111 02f6 02       		.byte	0x2
 4112 02f7 3B02     		.2byte	0x23b
 4113 02f9 D1020000 		.4byte	0x2d1
 4114 02fd 02       		.uleb128 0x2
 4115 02fe 91       		.byte	0x91
 4116 02ff 5C       		.sleb128 -36
 4117 0300 12       		.uleb128 0x12
 4118 0301 55000000 		.4byte	.LASF47
 4119 0305 02       		.byte	0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 143


 4120 0306 3D02     		.2byte	0x23d
 4121 0308 83000000 		.4byte	0x83
 4122 030c 02       		.uleb128 0x2
 4123 030d 91       		.byte	0x91
 4124 030e 6C       		.sleb128 -20
 4125 030f 12       		.uleb128 0x12
 4126 0310 06010000 		.4byte	.LASF48
 4127 0314 02       		.byte	0x2
 4128 0315 3E02     		.2byte	0x23e
 4129 0317 83000000 		.4byte	0x83
 4130 031b 02       		.uleb128 0x2
 4131 031c 91       		.byte	0x91
 4132 031d 64       		.sleb128 -28
 4133 031e 12       		.uleb128 0x12
 4134 031f A0010000 		.4byte	.LASF49
 4135 0323 02       		.byte	0x2
 4136 0324 3F02     		.2byte	0x23f
 4137 0326 8F000000 		.4byte	0x8f
 4138 032a 02       		.uleb128 0x2
 4139 032b 91       		.byte	0x91
 4140 032c 68       		.sleb128 -24
 4141 032d 12       		.uleb128 0x12
 4142 032e AA030000 		.4byte	.LASF50
 4143 0332 02       		.byte	0x2
 4144 0333 4002     		.2byte	0x240
 4145 0335 8F000000 		.4byte	0x8f
 4146 0339 02       		.uleb128 0x2
 4147 033a 91       		.byte	0x91
 4148 033b 74       		.sleb128 -12
 4149 033c 12       		.uleb128 0x12
 4150 033d 2D010000 		.4byte	.LASF51
 4151 0341 02       		.byte	0x2
 4152 0342 4102     		.2byte	0x241
 4153 0344 B0000000 		.4byte	0xb0
 4154 0348 02       		.uleb128 0x2
 4155 0349 91       		.byte	0x91
 4156 034a 70       		.sleb128 -16
 4157 034b 00       		.byte	0
 4158 034c 14       		.uleb128 0x14
 4159 034d 83050000 		.4byte	.LASF52
 4160 0351 02       		.byte	0x2
 4161 0352 8802     		.2byte	0x288
 4162 0354 B0000000 		.4byte	0xb0
 4163 0358 00000000 		.4byte	.LFB10
 4164 035c 4C000000 		.4byte	.LFE10-.LFB10
 4165 0360 01       		.uleb128 0x1
 4166 0361 9C       		.byte	0x9c
 4167 0362 76030000 		.4byte	0x376
 4168 0366 12       		.uleb128 0x12
 4169 0367 29050000 		.4byte	.LASF38
 4170 036b 02       		.byte	0x2
 4171 036c 8A02     		.2byte	0x28a
 4172 036e B0000000 		.4byte	0xb0
 4173 0372 02       		.uleb128 0x2
 4174 0373 91       		.byte	0x91
 4175 0374 74       		.sleb128 -12
 4176 0375 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 144


 4177 0376 15       		.uleb128 0x15
 4178 0377 9D000000 		.4byte	.LASF123
 4179 037b 02       		.byte	0x2
 4180 037c AD02     		.2byte	0x2ad
 4181 037e 83000000 		.4byte	0x83
 4182 0382 00000000 		.4byte	.LFB11
 4183 0386 20000000 		.4byte	.LFE11-.LFB11
 4184 038a 01       		.uleb128 0x1
 4185 038b 9C       		.byte	0x9c
 4186 038c A0030000 		.4byte	0x3a0
 4187 0390 12       		.uleb128 0x12
 4188 0391 07000000 		.4byte	.LASF53
 4189 0395 02       		.byte	0x2
 4190 0396 AF02     		.2byte	0x2af
 4191 0398 83000000 		.4byte	0x83
 4192 039c 02       		.uleb128 0x2
 4193 039d 91       		.byte	0x91
 4194 039e 74       		.sleb128 -12
 4195 039f 00       		.byte	0
 4196 03a0 16       		.uleb128 0x16
 4197 03a1 1D030000 		.4byte	.LASF54
 4198 03a5 02       		.byte	0x2
 4199 03a6 DE02     		.2byte	0x2de
 4200 03a8 00000000 		.4byte	.LFB12
 4201 03ac 54000000 		.4byte	.LFE12-.LFB12
 4202 03b0 01       		.uleb128 0x1
 4203 03b1 9C       		.byte	0x9c
 4204 03b2 D5030000 		.4byte	0x3d5
 4205 03b6 11       		.uleb128 0x11
 4206 03b7 36050000 		.4byte	.LASF55
 4207 03bb 02       		.byte	0x2
 4208 03bc DE02     		.2byte	0x2de
 4209 03be 83000000 		.4byte	0x83
 4210 03c2 02       		.uleb128 0x2
 4211 03c3 91       		.byte	0x91
 4212 03c4 64       		.sleb128 -28
 4213 03c5 12       		.uleb128 0x12
 4214 03c6 7D010000 		.4byte	.LASF28
 4215 03ca 02       		.byte	0x2
 4216 03cb E002     		.2byte	0x2e0
 4217 03cd 6B000000 		.4byte	0x6b
 4218 03d1 02       		.uleb128 0x2
 4219 03d2 91       		.byte	0x91
 4220 03d3 6F       		.sleb128 -17
 4221 03d4 00       		.byte	0
 4222 03d5 17       		.uleb128 0x17
 4223 03d6 43080000 		.4byte	.LASF56
 4224 03da 02       		.byte	0x2
 4225 03db 0303     		.2byte	0x303
 4226 03dd 00000000 		.4byte	.LFB13
 4227 03e1 20000000 		.4byte	.LFE13-.LFB13
 4228 03e5 01       		.uleb128 0x1
 4229 03e6 9C       		.byte	0x9c
 4230 03e7 16       		.uleb128 0x16
 4231 03e8 56070000 		.4byte	.LASF57
 4232 03ec 02       		.byte	0x2
 4233 03ed 1503     		.2byte	0x315
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 145


 4234 03ef 00000000 		.4byte	.LFB14
 4235 03f3 60000000 		.4byte	.LFE14-.LFB14
 4236 03f7 01       		.uleb128 0x1
 4237 03f8 9C       		.byte	0x9c
 4238 03f9 0D040000 		.4byte	0x40d
 4239 03fd 12       		.uleb128 0x12
 4240 03fe 7D010000 		.4byte	.LASF28
 4241 0402 02       		.byte	0x2
 4242 0403 1803     		.2byte	0x318
 4243 0405 6B000000 		.4byte	0x6b
 4244 0409 02       		.uleb128 0x2
 4245 040a 91       		.byte	0x91
 4246 040b 6F       		.sleb128 -17
 4247 040c 00       		.byte	0
 4248 040d 18       		.uleb128 0x18
 4249 040e 1A010000 		.4byte	.LASF80
 4250 0412 02       		.byte	0x2
 4251 0413 3803     		.2byte	0x338
 4252 0415 83000000 		.4byte	0x83
 4253 0419 00000000 		.4byte	.LFB15
 4254 041d 1C000000 		.4byte	.LFE15-.LFB15
 4255 0421 01       		.uleb128 0x1
 4256 0422 9C       		.byte	0x9c
 4257 0423 10       		.uleb128 0x10
 4258 0424 66070000 		.4byte	.LASF58
 4259 0428 02       		.byte	0x2
 4260 0429 5303     		.2byte	0x353
 4261 042b 83000000 		.4byte	0x83
 4262 042f 00000000 		.4byte	.LFB16
 4263 0433 40000000 		.4byte	.LFE16-.LFB16
 4264 0437 01       		.uleb128 0x1
 4265 0438 9C       		.byte	0x9c
 4266 0439 5C040000 		.4byte	0x45c
 4267 043d 11       		.uleb128 0x11
 4268 043e 9D070000 		.4byte	.LASF41
 4269 0442 02       		.byte	0x2
 4270 0443 5303     		.2byte	0x353
 4271 0445 83000000 		.4byte	0x83
 4272 0449 02       		.uleb128 0x2
 4273 044a 91       		.byte	0x91
 4274 044b 6C       		.sleb128 -20
 4275 044c 12       		.uleb128 0x12
 4276 044d 47040000 		.4byte	.LASF59
 4277 0451 02       		.byte	0x2
 4278 0452 5503     		.2byte	0x355
 4279 0454 83000000 		.4byte	0x83
 4280 0458 02       		.uleb128 0x2
 4281 0459 91       		.byte	0x91
 4282 045a 74       		.sleb128 -12
 4283 045b 00       		.byte	0
 4284 045c 16       		.uleb128 0x16
 4285 045d 3D050000 		.4byte	.LASF60
 4286 0461 02       		.byte	0x2
 4287 0462 9603     		.2byte	0x396
 4288 0464 00000000 		.4byte	.LFB17
 4289 0468 40000000 		.4byte	.LFE17-.LFB17
 4290 046c 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 146


 4291 046d 9C       		.byte	0x9c
 4292 046e 82040000 		.4byte	0x482
 4293 0472 11       		.uleb128 0x11
 4294 0473 E4010000 		.4byte	.LASF61
 4295 0477 02       		.byte	0x2
 4296 0478 9603     		.2byte	0x396
 4297 047a 83000000 		.4byte	0x83
 4298 047e 02       		.uleb128 0x2
 4299 047f 91       		.byte	0x91
 4300 0480 74       		.sleb128 -12
 4301 0481 00       		.byte	0
 4302 0482 16       		.uleb128 0x16
 4303 0483 B3070000 		.4byte	.LASF62
 4304 0487 02       		.byte	0x2
 4305 0488 B403     		.2byte	0x3b4
 4306 048a 00000000 		.4byte	.LFB18
 4307 048e 34000000 		.4byte	.LFE18-.LFB18
 4308 0492 01       		.uleb128 0x1
 4309 0493 9C       		.byte	0x9c
 4310 0494 A8040000 		.4byte	0x4a8
 4311 0498 12       		.uleb128 0x12
 4312 0499 7D010000 		.4byte	.LASF28
 4313 049d 02       		.byte	0x2
 4314 049e B603     		.2byte	0x3b6
 4315 04a0 6B000000 		.4byte	0x6b
 4316 04a4 02       		.uleb128 0x2
 4317 04a5 91       		.byte	0x91
 4318 04a6 6F       		.sleb128 -17
 4319 04a7 00       		.byte	0
 4320 04a8 13       		.uleb128 0x13
 4321 04a9 69060000 		.4byte	.LASF64
 4322 04ad 02       		.byte	0x2
 4323 04ae C903     		.2byte	0x3c9
 4324 04b0 83000000 		.4byte	0x83
 4325 04b4 00000000 		.4byte	.LFB19
 4326 04b8 20000000 		.4byte	.LFE19-.LFB19
 4327 04bc 01       		.uleb128 0x1
 4328 04bd 9C       		.byte	0x9c
 4329 04be 16       		.uleb128 0x16
 4330 04bf 46000000 		.4byte	.LASF65
 4331 04c3 02       		.byte	0x2
 4332 04c4 D703     		.2byte	0x3d7
 4333 04c6 00000000 		.4byte	.LFB20
 4334 04ca 50000000 		.4byte	.LFE20-.LFB20
 4335 04ce 01       		.uleb128 0x1
 4336 04cf 9C       		.byte	0x9c
 4337 04d0 E4040000 		.4byte	0x4e4
 4338 04d4 12       		.uleb128 0x12
 4339 04d5 7D010000 		.4byte	.LASF28
 4340 04d9 02       		.byte	0x2
 4341 04da D903     		.2byte	0x3d9
 4342 04dc 6B000000 		.4byte	0x6b
 4343 04e0 02       		.uleb128 0x2
 4344 04e1 91       		.byte	0x91
 4345 04e2 6F       		.sleb128 -17
 4346 04e3 00       		.byte	0
 4347 04e4 10       		.uleb128 0x10
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 147


 4348 04e5 C6030000 		.4byte	.LASF66
 4349 04e9 02       		.byte	0x2
 4350 04ea F903     		.2byte	0x3f9
 4351 04ec 83000000 		.4byte	0x83
 4352 04f0 00000000 		.4byte	.LFB21
 4353 04f4 34000000 		.4byte	.LFE21-.LFB21
 4354 04f8 01       		.uleb128 0x1
 4355 04f9 9C       		.byte	0x9c
 4356 04fa 0E050000 		.4byte	0x50e
 4357 04fe 11       		.uleb128 0x11
 4358 04ff 65000000 		.4byte	.LASF67
 4359 0503 02       		.byte	0x2
 4360 0504 F903     		.2byte	0x3f9
 4361 0506 83000000 		.4byte	0x83
 4362 050a 02       		.uleb128 0x2
 4363 050b 91       		.byte	0x91
 4364 050c 74       		.sleb128 -12
 4365 050d 00       		.byte	0
 4366 050e 16       		.uleb128 0x16
 4367 050f 36000000 		.4byte	.LASF68
 4368 0513 02       		.byte	0x2
 4369 0514 1704     		.2byte	0x417
 4370 0516 00000000 		.4byte	.LFB22
 4371 051a 5C000000 		.4byte	.LFE22-.LFB22
 4372 051e 01       		.uleb128 0x1
 4373 051f 9C       		.byte	0x9c
 4374 0520 52050000 		.4byte	0x552
 4375 0524 11       		.uleb128 0x11
 4376 0525 65000000 		.4byte	.LASF67
 4377 0529 02       		.byte	0x2
 4378 052a 1704     		.2byte	0x417
 4379 052c 83000000 		.4byte	0x83
 4380 0530 02       		.uleb128 0x2
 4381 0531 91       		.byte	0x91
 4382 0532 6C       		.sleb128 -20
 4383 0533 11       		.uleb128 0x11
 4384 0534 9D070000 		.4byte	.LASF41
 4385 0538 02       		.byte	0x2
 4386 0539 1704     		.2byte	0x417
 4387 053b 83000000 		.4byte	0x83
 4388 053f 02       		.uleb128 0x2
 4389 0540 91       		.byte	0x91
 4390 0541 68       		.sleb128 -24
 4391 0542 12       		.uleb128 0x12
 4392 0543 61080000 		.4byte	.LASF69
 4393 0547 02       		.byte	0x2
 4394 0548 1904     		.2byte	0x419
 4395 054a 83000000 		.4byte	0x83
 4396 054e 02       		.uleb128 0x2
 4397 054f 91       		.byte	0x91
 4398 0550 74       		.sleb128 -12
 4399 0551 00       		.byte	0
 4400 0552 14       		.uleb128 0x14
 4401 0553 1E080000 		.4byte	.LASF70
 4402 0557 02       		.byte	0x2
 4403 0558 3304     		.2byte	0x433
 4404 055a 83000000 		.4byte	0x83
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 148


 4405 055e 00000000 		.4byte	.LFB23
 4406 0562 24000000 		.4byte	.LFE23-.LFB23
 4407 0566 01       		.uleb128 0x1
 4408 0567 9C       		.byte	0x9c
 4409 0568 7C050000 		.4byte	0x57c
 4410 056c 11       		.uleb128 0x11
 4411 056d 65000000 		.4byte	.LASF67
 4412 0571 02       		.byte	0x2
 4413 0572 3304     		.2byte	0x433
 4414 0574 83000000 		.4byte	0x83
 4415 0578 02       		.uleb128 0x2
 4416 0579 91       		.byte	0x91
 4417 057a 74       		.sleb128 -12
 4418 057b 00       		.byte	0
 4419 057c 16       		.uleb128 0x16
 4420 057d D3070000 		.4byte	.LASF71
 4421 0581 02       		.byte	0x2
 4422 0582 5004     		.2byte	0x450
 4423 0584 00000000 		.4byte	.LFB24
 4424 0588 6C000000 		.4byte	.LFE24-.LFB24
 4425 058c 01       		.uleb128 0x1
 4426 058d 9C       		.byte	0x9c
 4427 058e C0050000 		.4byte	0x5c0
 4428 0592 11       		.uleb128 0x11
 4429 0593 65000000 		.4byte	.LASF67
 4430 0597 02       		.byte	0x2
 4431 0598 5004     		.2byte	0x450
 4432 059a 83000000 		.4byte	0x83
 4433 059e 02       		.uleb128 0x2
 4434 059f 91       		.byte	0x91
 4435 05a0 6C       		.sleb128 -20
 4436 05a1 11       		.uleb128 0x11
 4437 05a2 F3010000 		.4byte	.LASF72
 4438 05a6 02       		.byte	0x2
 4439 05a7 5004     		.2byte	0x450
 4440 05a9 83000000 		.4byte	0x83
 4441 05ad 02       		.uleb128 0x2
 4442 05ae 91       		.byte	0x91
 4443 05af 68       		.sleb128 -24
 4444 05b0 12       		.uleb128 0x12
 4445 05b1 61080000 		.4byte	.LASF69
 4446 05b5 02       		.byte	0x2
 4447 05b6 5204     		.2byte	0x452
 4448 05b8 83000000 		.4byte	0x83
 4449 05bc 02       		.uleb128 0x2
 4450 05bd 91       		.byte	0x91
 4451 05be 74       		.sleb128 -12
 4452 05bf 00       		.byte	0
 4453 05c0 10       		.uleb128 0x10
 4454 05c1 F8020000 		.4byte	.LASF73
 4455 05c5 02       		.byte	0x2
 4456 05c6 7104     		.2byte	0x471
 4457 05c8 83000000 		.4byte	0x83
 4458 05cc 00000000 		.4byte	.LFB25
 4459 05d0 44000000 		.4byte	.LFE25-.LFB25
 4460 05d4 01       		.uleb128 0x1
 4461 05d5 9C       		.byte	0x9c
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 149


 4462 05d6 EA050000 		.4byte	0x5ea
 4463 05da 11       		.uleb128 0x11
 4464 05db 65000000 		.4byte	.LASF67
 4465 05df 02       		.byte	0x2
 4466 05e0 7104     		.2byte	0x471
 4467 05e2 83000000 		.4byte	0x83
 4468 05e6 02       		.uleb128 0x2
 4469 05e7 91       		.byte	0x91
 4470 05e8 74       		.sleb128 -12
 4471 05e9 00       		.byte	0
 4472 05ea 16       		.uleb128 0x16
 4473 05eb C0020000 		.4byte	.LASF74
 4474 05ef 02       		.byte	0x2
 4475 05f0 9A04     		.2byte	0x49a
 4476 05f2 00000000 		.4byte	.LFB26
 4477 05f6 60000000 		.4byte	.LFE26-.LFB26
 4478 05fa 01       		.uleb128 0x1
 4479 05fb 9C       		.byte	0x9c
 4480 05fc 10060000 		.4byte	0x610
 4481 0600 11       		.uleb128 0x11
 4482 0601 EC020000 		.4byte	.LASF75
 4483 0605 02       		.byte	0x2
 4484 0606 9A04     		.2byte	0x49a
 4485 0608 83000000 		.4byte	0x83
 4486 060c 02       		.uleb128 0x2
 4487 060d 91       		.byte	0x91
 4488 060e 74       		.sleb128 -12
 4489 060f 00       		.byte	0
 4490 0610 16       		.uleb128 0x16
 4491 0611 D6060000 		.4byte	.LASF76
 4492 0615 02       		.byte	0x2
 4493 0616 CA04     		.2byte	0x4ca
 4494 0618 00000000 		.4byte	.LFB27
 4495 061c 6C000000 		.4byte	.LFE27-.LFB27
 4496 0620 01       		.uleb128 0x1
 4497 0621 9C       		.byte	0x9c
 4498 0622 36060000 		.4byte	0x636
 4499 0626 11       		.uleb128 0x11
 4500 0627 EC020000 		.4byte	.LASF75
 4501 062b 02       		.byte	0x2
 4502 062c CA04     		.2byte	0x4ca
 4503 062e 83000000 		.4byte	0x83
 4504 0632 02       		.uleb128 0x2
 4505 0633 91       		.byte	0x91
 4506 0634 74       		.sleb128 -12
 4507 0635 00       		.byte	0
 4508 0636 16       		.uleb128 0x16
 4509 0637 EB070000 		.4byte	.LASF77
 4510 063b 02       		.byte	0x2
 4511 063c 0505     		.2byte	0x505
 4512 063e 00000000 		.4byte	.LFB28
 4513 0642 58000000 		.4byte	.LFE28-.LFB28
 4514 0646 01       		.uleb128 0x1
 4515 0647 9C       		.byte	0x9c
 4516 0648 7A060000 		.4byte	0x67a
 4517 064c 11       		.uleb128 0x11
 4518 064d F7040000 		.4byte	.LASF78
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 150


 4519 0651 02       		.byte	0x2
 4520 0652 0505     		.2byte	0x505
 4521 0654 83000000 		.4byte	0x83
 4522 0658 02       		.uleb128 0x2
 4523 0659 91       		.byte	0x91
 4524 065a 64       		.sleb128 -28
 4525 065b 12       		.uleb128 0x12
 4526 065c 61080000 		.4byte	.LASF69
 4527 0660 02       		.byte	0x2
 4528 0661 0705     		.2byte	0x507
 4529 0663 83000000 		.4byte	0x83
 4530 0667 02       		.uleb128 0x2
 4531 0668 91       		.byte	0x91
 4532 0669 68       		.sleb128 -24
 4533 066a 12       		.uleb128 0x12
 4534 066b A0020000 		.4byte	.LASF79
 4535 066f 02       		.byte	0x2
 4536 0670 0805     		.2byte	0x508
 4537 0672 83000000 		.4byte	0x83
 4538 0676 02       		.uleb128 0x2
 4539 0677 91       		.byte	0x91
 4540 0678 6C       		.sleb128 -20
 4541 0679 00       		.byte	0
 4542 067a 18       		.uleb128 0x18
 4543 067b 8A000000 		.4byte	.LASF81
 4544 067f 02       		.byte	0x2
 4545 0680 2405     		.2byte	0x524
 4546 0682 83000000 		.4byte	0x83
 4547 0686 00000000 		.4byte	.LFB29
 4548 068a 1C000000 		.4byte	.LFE29-.LFB29
 4549 068e 01       		.uleb128 0x1
 4550 068f 9C       		.byte	0x9c
 4551 0690 16       		.uleb128 0x16
 4552 0691 8F020000 		.4byte	.LASF82
 4553 0695 02       		.byte	0x2
 4554 0696 3805     		.2byte	0x538
 4555 0698 00000000 		.4byte	.LFB30
 4556 069c 90000000 		.4byte	.LFE30-.LFB30
 4557 06a0 01       		.uleb128 0x1
 4558 06a1 9C       		.byte	0x9c
 4559 06a2 D4060000 		.4byte	0x6d4
 4560 06a6 11       		.uleb128 0x11
 4561 06a7 65000000 		.4byte	.LASF67
 4562 06ab 02       		.byte	0x2
 4563 06ac 3805     		.2byte	0x538
 4564 06ae 83000000 		.4byte	0x83
 4565 06b2 02       		.uleb128 0x2
 4566 06b3 91       		.byte	0x91
 4567 06b4 6C       		.sleb128 -20
 4568 06b5 11       		.uleb128 0x11
 4569 06b6 7D050000 		.4byte	.LASF83
 4570 06ba 02       		.byte	0x2
 4571 06bb 3805     		.2byte	0x538
 4572 06bd 83000000 		.4byte	0x83
 4573 06c1 02       		.uleb128 0x2
 4574 06c2 91       		.byte	0x91
 4575 06c3 68       		.sleb128 -24
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 151


 4576 06c4 12       		.uleb128 0x12
 4577 06c5 DB010000 		.4byte	.LASF84
 4578 06c9 02       		.byte	0x2
 4579 06ca 3A05     		.2byte	0x53a
 4580 06cc 83000000 		.4byte	0x83
 4581 06d0 02       		.uleb128 0x2
 4582 06d1 91       		.byte	0x91
 4583 06d2 74       		.sleb128 -12
 4584 06d3 00       		.byte	0
 4585 06d4 16       		.uleb128 0x16
 4586 06d5 32040000 		.4byte	.LASF85
 4587 06d9 02       		.byte	0x2
 4588 06da 5F05     		.2byte	0x55f
 4589 06dc 00000000 		.4byte	.LFB31
 4590 06e0 48000000 		.4byte	.LFE31-.LFB31
 4591 06e4 01       		.uleb128 0x1
 4592 06e5 9C       		.byte	0x9c
 4593 06e6 09070000 		.4byte	0x709
 4594 06ea 11       		.uleb128 0x11
 4595 06eb CD010000 		.4byte	.LASF86
 4596 06ef 02       		.byte	0x2
 4597 06f0 5F05     		.2byte	0x55f
 4598 06f2 83000000 		.4byte	0x83
 4599 06f6 02       		.uleb128 0x2
 4600 06f7 91       		.byte	0x91
 4601 06f8 6C       		.sleb128 -20
 4602 06f9 12       		.uleb128 0x12
 4603 06fa 61080000 		.4byte	.LASF69
 4604 06fe 02       		.byte	0x2
 4605 06ff 6105     		.2byte	0x561
 4606 0701 83000000 		.4byte	0x83
 4607 0705 02       		.uleb128 0x2
 4608 0706 91       		.byte	0x91
 4609 0707 74       		.sleb128 -12
 4610 0708 00       		.byte	0
 4611 0709 18       		.uleb128 0x18
 4612 070a A7080000 		.4byte	.LASF87
 4613 070e 02       		.byte	0x2
 4614 070f 7605     		.2byte	0x576
 4615 0711 83000000 		.4byte	0x83
 4616 0715 00000000 		.4byte	.LFB32
 4617 0719 18000000 		.4byte	.LFE32-.LFB32
 4618 071d 01       		.uleb128 0x1
 4619 071e 9C       		.byte	0x9c
 4620 071f 10       		.uleb128 0x10
 4621 0720 6C050000 		.4byte	.LASF88
 4622 0724 02       		.byte	0x2
 4623 0725 8805     		.2byte	0x588
 4624 0727 83000000 		.4byte	0x83
 4625 072b 00000000 		.4byte	.LFB33
 4626 072f 40000000 		.4byte	.LFE33-.LFB33
 4627 0733 01       		.uleb128 0x1
 4628 0734 9C       		.byte	0x9c
 4629 0735 49070000 		.4byte	0x749
 4630 0739 11       		.uleb128 0x11
 4631 073a 65000000 		.4byte	.LASF67
 4632 073e 02       		.byte	0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 152


 4633 073f 8805     		.2byte	0x588
 4634 0741 83000000 		.4byte	0x83
 4635 0745 02       		.uleb128 0x2
 4636 0746 91       		.byte	0x91
 4637 0747 74       		.sleb128 -12
 4638 0748 00       		.byte	0
 4639 0749 10       		.uleb128 0x10
 4640 074a A2070000 		.4byte	.LASF89
 4641 074e 02       		.byte	0x2
 4642 074f 9E05     		.2byte	0x59e
 4643 0751 83000000 		.4byte	0x83
 4644 0755 00000000 		.4byte	.LFB34
 4645 0759 54000000 		.4byte	.LFE34-.LFB34
 4646 075d 01       		.uleb128 0x1
 4647 075e 9C       		.byte	0x9c
 4648 075f 82070000 		.4byte	0x782
 4649 0763 11       		.uleb128 0x11
 4650 0764 65000000 		.4byte	.LASF67
 4651 0768 02       		.byte	0x2
 4652 0769 9E05     		.2byte	0x59e
 4653 076b 83000000 		.4byte	0x83
 4654 076f 02       		.uleb128 0x2
 4655 0770 91       		.byte	0x91
 4656 0771 6C       		.sleb128 -20
 4657 0772 12       		.uleb128 0x12
 4658 0773 DB010000 		.4byte	.LASF84
 4659 0777 02       		.byte	0x2
 4660 0778 A005     		.2byte	0x5a0
 4661 077a 83000000 		.4byte	0x83
 4662 077e 02       		.uleb128 0x2
 4663 077f 91       		.byte	0x91
 4664 0780 74       		.sleb128 -12
 4665 0781 00       		.byte	0
 4666 0782 18       		.uleb128 0x18
 4667 0783 09070000 		.4byte	.LASF90
 4668 0787 02       		.byte	0x2
 4669 0788 C905     		.2byte	0x5c9
 4670 078a 83000000 		.4byte	0x83
 4671 078e 00000000 		.4byte	.LFB35
 4672 0792 1C000000 		.4byte	.LFE35-.LFB35
 4673 0796 01       		.uleb128 0x1
 4674 0797 9C       		.byte	0x9c
 4675 0798 16       		.uleb128 0x16
 4676 0799 F7050000 		.4byte	.LASF91
 4677 079d 02       		.byte	0x2
 4678 079e E605     		.2byte	0x5e6
 4679 07a0 00000000 		.4byte	.LFB36
 4680 07a4 70000000 		.4byte	.LFE36-.LFB36
 4681 07a8 01       		.uleb128 0x1
 4682 07a9 9C       		.byte	0x9c
 4683 07aa DC070000 		.4byte	0x7dc
 4684 07ae 11       		.uleb128 0x11
 4685 07af EC020000 		.4byte	.LASF75
 4686 07b3 02       		.byte	0x2
 4687 07b4 E605     		.2byte	0x5e6
 4688 07b6 83000000 		.4byte	0x83
 4689 07ba 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 153


 4690 07bb 91       		.byte	0x91
 4691 07bc 64       		.sleb128 -28
 4692 07bd 12       		.uleb128 0x12
 4693 07be 7D010000 		.4byte	.LASF28
 4694 07c2 02       		.byte	0x2
 4695 07c3 E805     		.2byte	0x5e8
 4696 07c5 6B000000 		.4byte	0x6b
 4697 07c9 02       		.uleb128 0x2
 4698 07ca 91       		.byte	0x91
 4699 07cb 6B       		.sleb128 -21
 4700 07cc 12       		.uleb128 0x12
 4701 07cd 54080000 		.4byte	.LASF92
 4702 07d1 02       		.byte	0x2
 4703 07d2 E905     		.2byte	0x5e9
 4704 07d4 83000000 		.4byte	0x83
 4705 07d8 02       		.uleb128 0x2
 4706 07d9 91       		.byte	0x91
 4707 07da 6C       		.sleb128 -20
 4708 07db 00       		.byte	0
 4709 07dc 19       		.uleb128 0x19
 4710 07dd CD050000 		.4byte	.LASF93
 4711 07e1 02       		.byte	0x2
 4712 07e2 2006     		.2byte	0x620
 4713 07e4 00000000 		.4byte	.LFB37
 4714 07e8 34000000 		.4byte	.LFE37-.LFB37
 4715 07ec 01       		.uleb128 0x1
 4716 07ed 9C       		.byte	0x9c
 4717 07ee 02080000 		.4byte	0x802
 4718 07f2 11       		.uleb128 0x11
 4719 07f3 38020000 		.4byte	.LASF94
 4720 07f7 02       		.byte	0x2
 4721 07f8 2006     		.2byte	0x620
 4722 07fa 83000000 		.4byte	0x83
 4723 07fe 02       		.uleb128 0x2
 4724 07ff 91       		.byte	0x91
 4725 0800 74       		.sleb128 -12
 4726 0801 00       		.byte	0
 4727 0802 10       		.uleb128 0x10
 4728 0803 CF020000 		.4byte	.LASF95
 4729 0807 02       		.byte	0x2
 4730 0808 3A06     		.2byte	0x63a
 4731 080a FD000000 		.4byte	0xfd
 4732 080e 00000000 		.4byte	.LFB38
 4733 0812 40000000 		.4byte	.LFE38-.LFB38
 4734 0816 01       		.uleb128 0x1
 4735 0817 9C       		.byte	0x9c
 4736 0818 4A080000 		.4byte	0x84a
 4737 081c 11       		.uleb128 0x11
 4738 081d 65000000 		.4byte	.LASF67
 4739 0821 02       		.byte	0x2
 4740 0822 3A06     		.2byte	0x63a
 4741 0824 83000000 		.4byte	0x83
 4742 0828 02       		.uleb128 0x2
 4743 0829 91       		.byte	0x91
 4744 082a 6C       		.sleb128 -20
 4745 082b 11       		.uleb128 0x11
 4746 082c 74010000 		.4byte	.LASF96
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 154


 4747 0830 02       		.byte	0x2
 4748 0831 3A06     		.2byte	0x63a
 4749 0833 FD000000 		.4byte	0xfd
 4750 0837 02       		.uleb128 0x2
 4751 0838 91       		.byte	0x91
 4752 0839 68       		.sleb128 -24
 4753 083a 12       		.uleb128 0x12
 4754 083b 82020000 		.4byte	.LASF97
 4755 083f 02       		.byte	0x2
 4756 0840 3C06     		.2byte	0x63c
 4757 0842 FD000000 		.4byte	0xfd
 4758 0846 02       		.uleb128 0x2
 4759 0847 91       		.byte	0x91
 4760 0848 74       		.sleb128 -12
 4761 0849 00       		.byte	0
 4762 084a 10       		.uleb128 0x10
 4763 084b DF030000 		.4byte	.LASF98
 4764 084f 02       		.byte	0x2
 4765 0850 5806     		.2byte	0x658
 4766 0852 FD000000 		.4byte	0xfd
 4767 0856 00000000 		.4byte	.LFB39
 4768 085a 34000000 		.4byte	.LFE39-.LFB39
 4769 085e 01       		.uleb128 0x1
 4770 085f 9C       		.byte	0x9c
 4771 0860 83080000 		.4byte	0x883
 4772 0864 11       		.uleb128 0x11
 4773 0865 65000000 		.4byte	.LASF67
 4774 0869 02       		.byte	0x2
 4775 086a 5806     		.2byte	0x658
 4776 086c 83000000 		.4byte	0x83
 4777 0870 02       		.uleb128 0x2
 4778 0871 91       		.byte	0x91
 4779 0872 6C       		.sleb128 -20
 4780 0873 12       		.uleb128 0x12
 4781 0874 3F030000 		.4byte	.LASF99
 4782 0878 02       		.byte	0x2
 4783 0879 5A06     		.2byte	0x65a
 4784 087b FD000000 		.4byte	0xfd
 4785 087f 02       		.uleb128 0x2
 4786 0880 91       		.byte	0x91
 4787 0881 74       		.sleb128 -12
 4788 0882 00       		.byte	0
 4789 0883 16       		.uleb128 0x16
 4790 0884 91030000 		.4byte	.LASF100
 4791 0888 02       		.byte	0x2
 4792 0889 7506     		.2byte	0x675
 4793 088b 00000000 		.4byte	.LFB40
 4794 088f 50000000 		.4byte	.LFE40-.LFB40
 4795 0893 01       		.uleb128 0x1
 4796 0894 9C       		.byte	0x9c
 4797 0895 A9080000 		.4byte	0x8a9
 4798 0899 11       		.uleb128 0x11
 4799 089a 65000000 		.4byte	.LASF67
 4800 089e 02       		.byte	0x2
 4801 089f 7506     		.2byte	0x675
 4802 08a1 83000000 		.4byte	0x83
 4803 08a5 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 155


 4804 08a6 91       		.byte	0x91
 4805 08a7 74       		.sleb128 -12
 4806 08a8 00       		.byte	0
 4807 08a9 16       		.uleb128 0x16
 4808 08aa 7E070000 		.4byte	.LASF101
 4809 08ae 02       		.byte	0x2
 4810 08af 8C06     		.2byte	0x68c
 4811 08b1 00000000 		.4byte	.LFB41
 4812 08b5 3C000000 		.4byte	.LFE41-.LFB41
 4813 08b9 01       		.uleb128 0x1
 4814 08ba 9C       		.byte	0x9c
 4815 08bb CF080000 		.4byte	0x8cf
 4816 08bf 11       		.uleb128 0x11
 4817 08c0 65000000 		.4byte	.LASF67
 4818 08c4 02       		.byte	0x2
 4819 08c5 8C06     		.2byte	0x68c
 4820 08c7 83000000 		.4byte	0x83
 4821 08cb 02       		.uleb128 0x2
 4822 08cc 91       		.byte	0x91
 4823 08cd 74       		.sleb128 -12
 4824 08ce 00       		.byte	0
 4825 08cf 17       		.uleb128 0x17
 4826 08d0 9B080000 		.4byte	.LASF102
 4827 08d4 02       		.byte	0x2
 4828 08d5 AD06     		.2byte	0x6ad
 4829 08d7 00000000 		.4byte	.LFB42
 4830 08db EC000000 		.4byte	.LFE42-.LFB42
 4831 08df 01       		.uleb128 0x1
 4832 08e0 9C       		.byte	0x9c
 4833 08e1 16       		.uleb128 0x16
 4834 08e2 E5040000 		.4byte	.LASF103
 4835 08e6 02       		.byte	0x2
 4836 08e7 EE06     		.2byte	0x6ee
 4837 08e9 00000000 		.4byte	.LFB43
 4838 08ed 8A000000 		.4byte	.LFE43-.LFB43
 4839 08f1 01       		.uleb128 0x1
 4840 08f2 9C       		.byte	0x9c
 4841 08f3 07090000 		.4byte	0x907
 4842 08f7 11       		.uleb128 0x11
 4843 08f8 65000000 		.4byte	.LASF67
 4844 08fc 02       		.byte	0x2
 4845 08fd EE06     		.2byte	0x6ee
 4846 08ff 83000000 		.4byte	0x83
 4847 0903 02       		.uleb128 0x2
 4848 0904 91       		.byte	0x91
 4849 0905 74       		.sleb128 -12
 4850 0906 00       		.byte	0
 4851 0907 1A       		.uleb128 0x1a
 4852 0908 70000000 		.4byte	.LASF124
 4853 090c 02       		.byte	0x2
 4854 090d 3007     		.2byte	0x730
 4855 090f 00000000 		.4byte	.LFB44
 4856 0913 98000000 		.4byte	.LFE44-.LFB44
 4857 0917 01       		.uleb128 0x1
 4858 0918 9C       		.byte	0x9c
 4859 0919 3F090000 		.4byte	0x93f
 4860 091d 12       		.uleb128 0x12
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 156


 4861 091e 34030000 		.4byte	.LASF104
 4862 0922 02       		.byte	0x2
 4863 0923 3207     		.2byte	0x732
 4864 0925 83000000 		.4byte	0x83
 4865 0929 02       		.uleb128 0x2
 4866 092a 91       		.byte	0x91
 4867 092b 74       		.sleb128 -12
 4868 092c 12       		.uleb128 0x12
 4869 092d 9E060000 		.4byte	.LASF105
 4870 0931 02       		.byte	0x2
 4871 0932 3307     		.2byte	0x733
 4872 0934 83000000 		.4byte	0x83
 4873 0938 05       		.uleb128 0x5
 4874 0939 03       		.byte	0x3
 4875 093a 24000000 		.4byte	lfclkPosedgeEnabledWdtCounter.5072
 4876 093e 00       		.byte	0
 4877 093f 1B       		.uleb128 0x1b
 4878 0940 75030000 		.4byte	.LASF106
 4879 0944 02       		.byte	0x2
 4880 0945 6607     		.2byte	0x766
 4881 0947 00000000 		.4byte	.LFB45
 4882 094b 3C000000 		.4byte	.LFE45-.LFB45
 4883 094f 01       		.uleb128 0x1
 4884 0950 9C       		.byte	0x9c
 4885 0951 16       		.uleb128 0x16
 4886 0952 59060000 		.4byte	.LASF107
 4887 0956 02       		.byte	0x2
 4888 0957 D70B     		.2byte	0xbd7
 4889 0959 00000000 		.4byte	.LFB46
 4890 095d 68000000 		.4byte	.LFE46-.LFB46
 4891 0961 01       		.uleb128 0x1
 4892 0962 9C       		.byte	0x9c
 4893 0963 B3090000 		.4byte	0x9b3
 4894 0967 11       		.uleb128 0x11
 4895 0968 65000000 		.4byte	.LASF67
 4896 096c 02       		.byte	0x2
 4897 096d D70B     		.2byte	0xbd7
 4898 096f 83000000 		.4byte	0x83
 4899 0973 02       		.uleb128 0x2
 4900 0974 91       		.byte	0x91
 4901 0975 6C       		.sleb128 -20
 4902 0976 11       		.uleb128 0x11
 4903 0977 CC060000 		.4byte	.LASF108
 4904 097b 02       		.byte	0x2
 4905 097c D70B     		.2byte	0xbd7
 4906 097e F2000000 		.4byte	0xf2
 4907 0982 02       		.uleb128 0x2
 4908 0983 91       		.byte	0x91
 4909 0984 6B       		.sleb128 -21
 4910 0985 11       		.uleb128 0x11
 4911 0986 BC060000 		.4byte	.LASF109
 4912 098a 02       		.byte	0x2
 4913 098b D70B     		.2byte	0xbd7
 4914 098d 83000000 		.4byte	0x83
 4915 0991 02       		.uleb128 0x2
 4916 0992 91       		.byte	0x91
 4917 0993 64       		.sleb128 -28
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 157


 4918 0994 12       		.uleb128 0x12
 4919 0995 DB010000 		.4byte	.LASF84
 4920 0999 02       		.byte	0x2
 4921 099a D90B     		.2byte	0xbd9
 4922 099c 83000000 		.4byte	0x83
 4923 09a0 02       		.uleb128 0x2
 4924 09a1 91       		.byte	0x91
 4925 09a2 74       		.sleb128 -12
 4926 09a3 12       		.uleb128 0x12
 4927 09a4 6A030000 		.4byte	.LASF110
 4928 09a8 02       		.byte	0x2
 4929 09a9 DA0B     		.2byte	0xbda
 4930 09ab 83000000 		.4byte	0x83
 4931 09af 02       		.uleb128 0x2
 4932 09b0 91       		.byte	0x91
 4933 09b1 70       		.sleb128 -16
 4934 09b2 00       		.byte	0
 4935 09b3 16       		.uleb128 0x16
 4936 09b4 3F060000 		.4byte	.LASF111
 4937 09b8 02       		.byte	0x2
 4938 09b9 580C     		.2byte	0xc58
 4939 09bb 00000000 		.4byte	.LFB47
 4940 09bf B0000000 		.4byte	.LFE47-.LFB47
 4941 09c3 01       		.uleb128 0x1
 4942 09c4 9C       		.byte	0x9c
 4943 09c5 060A0000 		.4byte	0xa06
 4944 09c9 11       		.uleb128 0x11
 4945 09ca 65000000 		.4byte	.LASF67
 4946 09ce 02       		.byte	0x2
 4947 09cf 580C     		.2byte	0xc58
 4948 09d1 83000000 		.4byte	0x83
 4949 09d5 02       		.uleb128 0x2
 4950 09d6 91       		.byte	0x91
 4951 09d7 6C       		.sleb128 -20
 4952 09d8 11       		.uleb128 0x11
 4953 09d9 CC060000 		.4byte	.LASF108
 4954 09dd 02       		.byte	0x2
 4955 09de 580C     		.2byte	0xc58
 4956 09e0 F2000000 		.4byte	0xf2
 4957 09e4 02       		.uleb128 0x2
 4958 09e5 91       		.byte	0x91
 4959 09e6 6B       		.sleb128 -21
 4960 09e7 11       		.uleb128 0x11
 4961 09e8 7D050000 		.4byte	.LASF83
 4962 09ec 02       		.byte	0x2
 4963 09ed 580C     		.2byte	0xc58
 4964 09ef 83000000 		.4byte	0x83
 4965 09f3 02       		.uleb128 0x2
 4966 09f4 91       		.byte	0x91
 4967 09f5 64       		.sleb128 -28
 4968 09f6 12       		.uleb128 0x12
 4969 09f7 20050000 		.4byte	.LASF112
 4970 09fb 02       		.byte	0x2
 4971 09fc 5A0C     		.2byte	0xc5a
 4972 09fe 83000000 		.4byte	0x83
 4973 0a02 02       		.uleb128 0x2
 4974 0a03 91       		.byte	0x91
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 158


 4975 0a04 74       		.sleb128 -12
 4976 0a05 00       		.byte	0
 4977 0a06 0E       		.uleb128 0xe
 4978 0a07 09050000 		.4byte	.LASF113
 4979 0a0b 02       		.byte	0x2
 4980 0a0c 1D       		.byte	0x1d
 4981 0a0d BC000000 		.4byte	0xbc
 4982 0a11 05       		.uleb128 0x5
 4983 0a12 03       		.byte	0x3
 4984 0a13 00000000 		.4byte	defaultIloTrimRegValue
 4985 0a17 0E       		.uleb128 0xe
 4986 0a18 D0000000 		.4byte	.LASF114
 4987 0a1c 02       		.byte	0x2
 4988 0a1d 22       		.byte	0x22
 4989 0a1e 83000000 		.4byte	0x83
 4990 0a22 05       		.uleb128 0x5
 4991 0a23 03       		.byte	0x3
 4992 0a24 00000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 4993 0a28 0E       		.uleb128 0xe
 4994 0a29 70080000 		.4byte	.LASF115
 4995 0a2d 02       		.byte	0x2
 4996 0a2e 23       		.byte	0x23
 4997 0a2f 83000000 		.4byte	0x83
 4998 0a33 05       		.uleb128 0x5
 4999 0a34 03       		.byte	0x3
 5000 0a35 04000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 5001 0a39 0E       		.uleb128 0xe
 5002 0a3a C0070000 		.4byte	.LASF116
 5003 0a3e 02       		.byte	0x2
 5004 0a3f 25       		.byte	0x25
 5005 0a40 CD000000 		.4byte	0xcd
 5006 0a44 05       		.uleb128 0x5
 5007 0a45 03       		.byte	0x3
 5008 0a46 08000000 		.4byte	disableServicedIsr
 5009 0a4a 0E       		.uleb128 0xe
 5010 0a4b B5020000 		.4byte	.LASF117
 5011 0a4f 02       		.byte	0x2
 5012 0a50 26       		.byte	0x26
 5013 0a51 CD000000 		.4byte	0xcd
 5014 0a55 05       		.uleb128 0x5
 5015 0a56 03       		.byte	0x3
 5016 0a57 04000000 		.4byte	wdtIsrMask
 5017 0a5b 1C       		.uleb128 0x1c
 5018 0a5c 6B0A0000 		.4byte	0xa6b
 5019 0a60 6B0A0000 		.4byte	0xa6b
 5020 0a64 1D       		.uleb128 0x1d
 5021 0a65 0F010000 		.4byte	0x10f
 5022 0a69 02       		.byte	0x2
 5023 0a6a 00       		.byte	0
 5024 0a6b 1E       		.uleb128 0x1e
 5025 0a6c 83000000 		.4byte	0x83
 5026 0a70 0E       		.uleb128 0xe
 5027 0a71 13000000 		.4byte	.LASF118
 5028 0a75 02       		.byte	0x2
 5029 0a76 2A       		.byte	0x2a
 5030 0a77 810A0000 		.4byte	0xa81
 5031 0a7b 05       		.uleb128 0x5
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 159


 5032 0a7c 03       		.byte	0x3
 5033 0a7d 00000000 		.4byte	counterIntMaskTbl
 5034 0a81 1E       		.uleb128 0x1e
 5035 0a82 5B0A0000 		.4byte	0xa5b
 5036 0a86 1C       		.uleb128 0x1c
 5037 0a87 FD000000 		.4byte	0xfd
 5038 0a8b 960A0000 		.4byte	0xa96
 5039 0a8f 1D       		.uleb128 0x1d
 5040 0a90 0F010000 		.4byte	0x10f
 5041 0a94 02       		.byte	0x2
 5042 0a95 00       		.byte	0
 5043 0a96 0E       		.uleb128 0xe
 5044 0a97 25000000 		.4byte	.LASF119
 5045 0a9b 02       		.byte	0x2
 5046 0a9c 44       		.byte	0x44
 5047 0a9d 860A0000 		.4byte	0xa86
 5048 0aa1 05       		.uleb128 0x5
 5049 0aa2 03       		.byte	0x3
 5050 0aa3 0C000000 		.4byte	cySysWdtCallback
 5051 0aa7 1F       		.uleb128 0x1f
 5052 0aa8 BF050000 		.4byte	.LASF125
 5053 0aac 04       		.byte	0x4
 5054 0aad D4       		.byte	0xd4
 5055 0aae 83000000 		.4byte	0x83
 5056 0ab2 00       		.byte	0
 5057              		.section	.debug_abbrev,"",%progbits
 5058              	.Ldebug_abbrev0:
 5059 0000 01       		.uleb128 0x1
 5060 0001 11       		.uleb128 0x11
 5061 0002 01       		.byte	0x1
 5062 0003 25       		.uleb128 0x25
 5063 0004 0E       		.uleb128 0xe
 5064 0005 13       		.uleb128 0x13
 5065 0006 0B       		.uleb128 0xb
 5066 0007 03       		.uleb128 0x3
 5067 0008 0E       		.uleb128 0xe
 5068 0009 1B       		.uleb128 0x1b
 5069 000a 0E       		.uleb128 0xe
 5070 000b 55       		.uleb128 0x55
 5071 000c 17       		.uleb128 0x17
 5072 000d 11       		.uleb128 0x11
 5073 000e 01       		.uleb128 0x1
 5074 000f 10       		.uleb128 0x10
 5075 0010 17       		.uleb128 0x17
 5076 0011 00       		.byte	0
 5077 0012 00       		.byte	0
 5078 0013 02       		.uleb128 0x2
 5079 0014 24       		.uleb128 0x24
 5080 0015 00       		.byte	0
 5081 0016 0B       		.uleb128 0xb
 5082 0017 0B       		.uleb128 0xb
 5083 0018 3E       		.uleb128 0x3e
 5084 0019 0B       		.uleb128 0xb
 5085 001a 03       		.uleb128 0x3
 5086 001b 0E       		.uleb128 0xe
 5087 001c 00       		.byte	0
 5088 001d 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 160


 5089 001e 03       		.uleb128 0x3
 5090 001f 24       		.uleb128 0x24
 5091 0020 00       		.byte	0
 5092 0021 0B       		.uleb128 0xb
 5093 0022 0B       		.uleb128 0xb
 5094 0023 3E       		.uleb128 0x3e
 5095 0024 0B       		.uleb128 0xb
 5096 0025 03       		.uleb128 0x3
 5097 0026 08       		.uleb128 0x8
 5098 0027 00       		.byte	0
 5099 0028 00       		.byte	0
 5100 0029 04       		.uleb128 0x4
 5101 002a 16       		.uleb128 0x16
 5102 002b 00       		.byte	0
 5103 002c 03       		.uleb128 0x3
 5104 002d 0E       		.uleb128 0xe
 5105 002e 3A       		.uleb128 0x3a
 5106 002f 0B       		.uleb128 0xb
 5107 0030 3B       		.uleb128 0x3b
 5108 0031 05       		.uleb128 0x5
 5109 0032 49       		.uleb128 0x49
 5110 0033 13       		.uleb128 0x13
 5111 0034 00       		.byte	0
 5112 0035 00       		.byte	0
 5113 0036 05       		.uleb128 0x5
 5114 0037 35       		.uleb128 0x35
 5115 0038 00       		.byte	0
 5116 0039 49       		.uleb128 0x49
 5117 003a 13       		.uleb128 0x13
 5118 003b 00       		.byte	0
 5119 003c 00       		.byte	0
 5120 003d 06       		.uleb128 0x6
 5121 003e 0F       		.uleb128 0xf
 5122 003f 00       		.byte	0
 5123 0040 0B       		.uleb128 0xb
 5124 0041 0B       		.uleb128 0xb
 5125 0042 49       		.uleb128 0x49
 5126 0043 13       		.uleb128 0x13
 5127 0044 00       		.byte	0
 5128 0045 00       		.byte	0
 5129 0046 07       		.uleb128 0x7
 5130 0047 15       		.uleb128 0x15
 5131 0048 00       		.byte	0
 5132 0049 27       		.uleb128 0x27
 5133 004a 19       		.uleb128 0x19
 5134 004b 00       		.byte	0
 5135 004c 00       		.byte	0
 5136 004d 08       		.uleb128 0x8
 5137 004e 04       		.uleb128 0x4
 5138 004f 01       		.byte	0x1
 5139 0050 0B       		.uleb128 0xb
 5140 0051 0B       		.uleb128 0xb
 5141 0052 49       		.uleb128 0x49
 5142 0053 13       		.uleb128 0x13
 5143 0054 3A       		.uleb128 0x3a
 5144 0055 0B       		.uleb128 0xb
 5145 0056 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 161


 5146 0057 0B       		.uleb128 0xb
 5147 0058 01       		.uleb128 0x1
 5148 0059 13       		.uleb128 0x13
 5149 005a 00       		.byte	0
 5150 005b 00       		.byte	0
 5151 005c 09       		.uleb128 0x9
 5152 005d 28       		.uleb128 0x28
 5153 005e 00       		.byte	0
 5154 005f 03       		.uleb128 0x3
 5155 0060 0E       		.uleb128 0xe
 5156 0061 1C       		.uleb128 0x1c
 5157 0062 0B       		.uleb128 0xb
 5158 0063 00       		.byte	0
 5159 0064 00       		.byte	0
 5160 0065 0A       		.uleb128 0xa
 5161 0066 16       		.uleb128 0x16
 5162 0067 00       		.byte	0
 5163 0068 03       		.uleb128 0x3
 5164 0069 0E       		.uleb128 0xe
 5165 006a 3A       		.uleb128 0x3a
 5166 006b 0B       		.uleb128 0xb
 5167 006c 3B       		.uleb128 0x3b
 5168 006d 0B       		.uleb128 0xb
 5169 006e 49       		.uleb128 0x49
 5170 006f 13       		.uleb128 0x13
 5171 0070 00       		.byte	0
 5172 0071 00       		.byte	0
 5173 0072 0B       		.uleb128 0xb
 5174 0073 2E       		.uleb128 0x2e
 5175 0074 00       		.byte	0
 5176 0075 03       		.uleb128 0x3
 5177 0076 0E       		.uleb128 0xe
 5178 0077 3A       		.uleb128 0x3a
 5179 0078 0B       		.uleb128 0xb
 5180 0079 3B       		.uleb128 0x3b
 5181 007a 05       		.uleb128 0x5
 5182 007b 27       		.uleb128 0x27
 5183 007c 19       		.uleb128 0x19
 5184 007d 11       		.uleb128 0x11
 5185 007e 01       		.uleb128 0x1
 5186 007f 12       		.uleb128 0x12
 5187 0080 06       		.uleb128 0x6
 5188 0081 40       		.uleb128 0x40
 5189 0082 18       		.uleb128 0x18
 5190 0083 9742     		.uleb128 0x2117
 5191 0085 19       		.uleb128 0x19
 5192 0086 00       		.byte	0
 5193 0087 00       		.byte	0
 5194 0088 0C       		.uleb128 0xc
 5195 0089 2E       		.uleb128 0x2e
 5196 008a 00       		.byte	0
 5197 008b 3F       		.uleb128 0x3f
 5198 008c 19       		.uleb128 0x19
 5199 008d 03       		.uleb128 0x3
 5200 008e 0E       		.uleb128 0xe
 5201 008f 3A       		.uleb128 0x3a
 5202 0090 0B       		.uleb128 0xb
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 162


 5203 0091 3B       		.uleb128 0x3b
 5204 0092 0B       		.uleb128 0xb
 5205 0093 27       		.uleb128 0x27
 5206 0094 19       		.uleb128 0x19
 5207 0095 11       		.uleb128 0x11
 5208 0096 01       		.uleb128 0x1
 5209 0097 12       		.uleb128 0x12
 5210 0098 06       		.uleb128 0x6
 5211 0099 40       		.uleb128 0x40
 5212 009a 18       		.uleb128 0x18
 5213 009b 9742     		.uleb128 0x2117
 5214 009d 19       		.uleb128 0x19
 5215 009e 00       		.byte	0
 5216 009f 00       		.byte	0
 5217 00a0 0D       		.uleb128 0xd
 5218 00a1 2E       		.uleb128 0x2e
 5219 00a2 01       		.byte	0x1
 5220 00a3 3F       		.uleb128 0x3f
 5221 00a4 19       		.uleb128 0x19
 5222 00a5 03       		.uleb128 0x3
 5223 00a6 0E       		.uleb128 0xe
 5224 00a7 3A       		.uleb128 0x3a
 5225 00a8 0B       		.uleb128 0xb
 5226 00a9 3B       		.uleb128 0x3b
 5227 00aa 0B       		.uleb128 0xb
 5228 00ab 27       		.uleb128 0x27
 5229 00ac 19       		.uleb128 0x19
 5230 00ad 11       		.uleb128 0x11
 5231 00ae 01       		.uleb128 0x1
 5232 00af 12       		.uleb128 0x12
 5233 00b0 06       		.uleb128 0x6
 5234 00b1 40       		.uleb128 0x40
 5235 00b2 18       		.uleb128 0x18
 5236 00b3 9642     		.uleb128 0x2116
 5237 00b5 19       		.uleb128 0x19
 5238 00b6 01       		.uleb128 0x1
 5239 00b7 13       		.uleb128 0x13
 5240 00b8 00       		.byte	0
 5241 00b9 00       		.byte	0
 5242 00ba 0E       		.uleb128 0xe
 5243 00bb 34       		.uleb128 0x34
 5244 00bc 00       		.byte	0
 5245 00bd 03       		.uleb128 0x3
 5246 00be 0E       		.uleb128 0xe
 5247 00bf 3A       		.uleb128 0x3a
 5248 00c0 0B       		.uleb128 0xb
 5249 00c1 3B       		.uleb128 0x3b
 5250 00c2 0B       		.uleb128 0xb
 5251 00c3 49       		.uleb128 0x49
 5252 00c4 13       		.uleb128 0x13
 5253 00c5 02       		.uleb128 0x2
 5254 00c6 18       		.uleb128 0x18
 5255 00c7 00       		.byte	0
 5256 00c8 00       		.byte	0
 5257 00c9 0F       		.uleb128 0xf
 5258 00ca 2E       		.uleb128 0x2e
 5259 00cb 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 163


 5260 00cc 3F       		.uleb128 0x3f
 5261 00cd 19       		.uleb128 0x19
 5262 00ce 03       		.uleb128 0x3
 5263 00cf 0E       		.uleb128 0xe
 5264 00d0 3A       		.uleb128 0x3a
 5265 00d1 0B       		.uleb128 0xb
 5266 00d2 3B       		.uleb128 0x3b
 5267 00d3 0B       		.uleb128 0xb
 5268 00d4 27       		.uleb128 0x27
 5269 00d5 19       		.uleb128 0x19
 5270 00d6 11       		.uleb128 0x11
 5271 00d7 01       		.uleb128 0x1
 5272 00d8 12       		.uleb128 0x12
 5273 00d9 06       		.uleb128 0x6
 5274 00da 40       		.uleb128 0x40
 5275 00db 18       		.uleb128 0x18
 5276 00dc 9742     		.uleb128 0x2117
 5277 00de 19       		.uleb128 0x19
 5278 00df 01       		.uleb128 0x1
 5279 00e0 13       		.uleb128 0x13
 5280 00e1 00       		.byte	0
 5281 00e2 00       		.byte	0
 5282 00e3 10       		.uleb128 0x10
 5283 00e4 2E       		.uleb128 0x2e
 5284 00e5 01       		.byte	0x1
 5285 00e6 3F       		.uleb128 0x3f
 5286 00e7 19       		.uleb128 0x19
 5287 00e8 03       		.uleb128 0x3
 5288 00e9 0E       		.uleb128 0xe
 5289 00ea 3A       		.uleb128 0x3a
 5290 00eb 0B       		.uleb128 0xb
 5291 00ec 3B       		.uleb128 0x3b
 5292 00ed 05       		.uleb128 0x5
 5293 00ee 27       		.uleb128 0x27
 5294 00ef 19       		.uleb128 0x19
 5295 00f0 49       		.uleb128 0x49
 5296 00f1 13       		.uleb128 0x13
 5297 00f2 11       		.uleb128 0x11
 5298 00f3 01       		.uleb128 0x1
 5299 00f4 12       		.uleb128 0x12
 5300 00f5 06       		.uleb128 0x6
 5301 00f6 40       		.uleb128 0x40
 5302 00f7 18       		.uleb128 0x18
 5303 00f8 9642     		.uleb128 0x2116
 5304 00fa 19       		.uleb128 0x19
 5305 00fb 01       		.uleb128 0x1
 5306 00fc 13       		.uleb128 0x13
 5307 00fd 00       		.byte	0
 5308 00fe 00       		.byte	0
 5309 00ff 11       		.uleb128 0x11
 5310 0100 05       		.uleb128 0x5
 5311 0101 00       		.byte	0
 5312 0102 03       		.uleb128 0x3
 5313 0103 0E       		.uleb128 0xe
 5314 0104 3A       		.uleb128 0x3a
 5315 0105 0B       		.uleb128 0xb
 5316 0106 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 164


 5317 0107 05       		.uleb128 0x5
 5318 0108 49       		.uleb128 0x49
 5319 0109 13       		.uleb128 0x13
 5320 010a 02       		.uleb128 0x2
 5321 010b 18       		.uleb128 0x18
 5322 010c 00       		.byte	0
 5323 010d 00       		.byte	0
 5324 010e 12       		.uleb128 0x12
 5325 010f 34       		.uleb128 0x34
 5326 0110 00       		.byte	0
 5327 0111 03       		.uleb128 0x3
 5328 0112 0E       		.uleb128 0xe
 5329 0113 3A       		.uleb128 0x3a
 5330 0114 0B       		.uleb128 0xb
 5331 0115 3B       		.uleb128 0x3b
 5332 0116 05       		.uleb128 0x5
 5333 0117 49       		.uleb128 0x49
 5334 0118 13       		.uleb128 0x13
 5335 0119 02       		.uleb128 0x2
 5336 011a 18       		.uleb128 0x18
 5337 011b 00       		.byte	0
 5338 011c 00       		.byte	0
 5339 011d 13       		.uleb128 0x13
 5340 011e 2E       		.uleb128 0x2e
 5341 011f 00       		.byte	0
 5342 0120 03       		.uleb128 0x3
 5343 0121 0E       		.uleb128 0xe
 5344 0122 3A       		.uleb128 0x3a
 5345 0123 0B       		.uleb128 0xb
 5346 0124 3B       		.uleb128 0x3b
 5347 0125 05       		.uleb128 0x5
 5348 0126 27       		.uleb128 0x27
 5349 0127 19       		.uleb128 0x19
 5350 0128 49       		.uleb128 0x49
 5351 0129 13       		.uleb128 0x13
 5352 012a 11       		.uleb128 0x11
 5353 012b 01       		.uleb128 0x1
 5354 012c 12       		.uleb128 0x12
 5355 012d 06       		.uleb128 0x6
 5356 012e 40       		.uleb128 0x40
 5357 012f 18       		.uleb128 0x18
 5358 0130 9742     		.uleb128 0x2117
 5359 0132 19       		.uleb128 0x19
 5360 0133 00       		.byte	0
 5361 0134 00       		.byte	0
 5362 0135 14       		.uleb128 0x14
 5363 0136 2E       		.uleb128 0x2e
 5364 0137 01       		.byte	0x1
 5365 0138 3F       		.uleb128 0x3f
 5366 0139 19       		.uleb128 0x19
 5367 013a 03       		.uleb128 0x3
 5368 013b 0E       		.uleb128 0xe
 5369 013c 3A       		.uleb128 0x3a
 5370 013d 0B       		.uleb128 0xb
 5371 013e 3B       		.uleb128 0x3b
 5372 013f 05       		.uleb128 0x5
 5373 0140 27       		.uleb128 0x27
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 165


 5374 0141 19       		.uleb128 0x19
 5375 0142 49       		.uleb128 0x49
 5376 0143 13       		.uleb128 0x13
 5377 0144 11       		.uleb128 0x11
 5378 0145 01       		.uleb128 0x1
 5379 0146 12       		.uleb128 0x12
 5380 0147 06       		.uleb128 0x6
 5381 0148 40       		.uleb128 0x40
 5382 0149 18       		.uleb128 0x18
 5383 014a 9742     		.uleb128 0x2117
 5384 014c 19       		.uleb128 0x19
 5385 014d 01       		.uleb128 0x1
 5386 014e 13       		.uleb128 0x13
 5387 014f 00       		.byte	0
 5388 0150 00       		.byte	0
 5389 0151 15       		.uleb128 0x15
 5390 0152 2E       		.uleb128 0x2e
 5391 0153 01       		.byte	0x1
 5392 0154 03       		.uleb128 0x3
 5393 0155 0E       		.uleb128 0xe
 5394 0156 3A       		.uleb128 0x3a
 5395 0157 0B       		.uleb128 0xb
 5396 0158 3B       		.uleb128 0x3b
 5397 0159 05       		.uleb128 0x5
 5398 015a 27       		.uleb128 0x27
 5399 015b 19       		.uleb128 0x19
 5400 015c 49       		.uleb128 0x49
 5401 015d 13       		.uleb128 0x13
 5402 015e 11       		.uleb128 0x11
 5403 015f 01       		.uleb128 0x1
 5404 0160 12       		.uleb128 0x12
 5405 0161 06       		.uleb128 0x6
 5406 0162 40       		.uleb128 0x40
 5407 0163 18       		.uleb128 0x18
 5408 0164 9742     		.uleb128 0x2117
 5409 0166 19       		.uleb128 0x19
 5410 0167 01       		.uleb128 0x1
 5411 0168 13       		.uleb128 0x13
 5412 0169 00       		.byte	0
 5413 016a 00       		.byte	0
 5414 016b 16       		.uleb128 0x16
 5415 016c 2E       		.uleb128 0x2e
 5416 016d 01       		.byte	0x1
 5417 016e 3F       		.uleb128 0x3f
 5418 016f 19       		.uleb128 0x19
 5419 0170 03       		.uleb128 0x3
 5420 0171 0E       		.uleb128 0xe
 5421 0172 3A       		.uleb128 0x3a
 5422 0173 0B       		.uleb128 0xb
 5423 0174 3B       		.uleb128 0x3b
 5424 0175 05       		.uleb128 0x5
 5425 0176 27       		.uleb128 0x27
 5426 0177 19       		.uleb128 0x19
 5427 0178 11       		.uleb128 0x11
 5428 0179 01       		.uleb128 0x1
 5429 017a 12       		.uleb128 0x12
 5430 017b 06       		.uleb128 0x6
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 166


 5431 017c 40       		.uleb128 0x40
 5432 017d 18       		.uleb128 0x18
 5433 017e 9642     		.uleb128 0x2116
 5434 0180 19       		.uleb128 0x19
 5435 0181 01       		.uleb128 0x1
 5436 0182 13       		.uleb128 0x13
 5437 0183 00       		.byte	0
 5438 0184 00       		.byte	0
 5439 0185 17       		.uleb128 0x17
 5440 0186 2E       		.uleb128 0x2e
 5441 0187 00       		.byte	0
 5442 0188 3F       		.uleb128 0x3f
 5443 0189 19       		.uleb128 0x19
 5444 018a 03       		.uleb128 0x3
 5445 018b 0E       		.uleb128 0xe
 5446 018c 3A       		.uleb128 0x3a
 5447 018d 0B       		.uleb128 0xb
 5448 018e 3B       		.uleb128 0x3b
 5449 018f 05       		.uleb128 0x5
 5450 0190 27       		.uleb128 0x27
 5451 0191 19       		.uleb128 0x19
 5452 0192 11       		.uleb128 0x11
 5453 0193 01       		.uleb128 0x1
 5454 0194 12       		.uleb128 0x12
 5455 0195 06       		.uleb128 0x6
 5456 0196 40       		.uleb128 0x40
 5457 0197 18       		.uleb128 0x18
 5458 0198 9642     		.uleb128 0x2116
 5459 019a 19       		.uleb128 0x19
 5460 019b 00       		.byte	0
 5461 019c 00       		.byte	0
 5462 019d 18       		.uleb128 0x18
 5463 019e 2E       		.uleb128 0x2e
 5464 019f 00       		.byte	0
 5465 01a0 3F       		.uleb128 0x3f
 5466 01a1 19       		.uleb128 0x19
 5467 01a2 03       		.uleb128 0x3
 5468 01a3 0E       		.uleb128 0xe
 5469 01a4 3A       		.uleb128 0x3a
 5470 01a5 0B       		.uleb128 0xb
 5471 01a6 3B       		.uleb128 0x3b
 5472 01a7 05       		.uleb128 0x5
 5473 01a8 27       		.uleb128 0x27
 5474 01a9 19       		.uleb128 0x19
 5475 01aa 49       		.uleb128 0x49
 5476 01ab 13       		.uleb128 0x13
 5477 01ac 11       		.uleb128 0x11
 5478 01ad 01       		.uleb128 0x1
 5479 01ae 12       		.uleb128 0x12
 5480 01af 06       		.uleb128 0x6
 5481 01b0 40       		.uleb128 0x40
 5482 01b1 18       		.uleb128 0x18
 5483 01b2 9742     		.uleb128 0x2117
 5484 01b4 19       		.uleb128 0x19
 5485 01b5 00       		.byte	0
 5486 01b6 00       		.byte	0
 5487 01b7 19       		.uleb128 0x19
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 167


 5488 01b8 2E       		.uleb128 0x2e
 5489 01b9 01       		.byte	0x1
 5490 01ba 3F       		.uleb128 0x3f
 5491 01bb 19       		.uleb128 0x19
 5492 01bc 03       		.uleb128 0x3
 5493 01bd 0E       		.uleb128 0xe
 5494 01be 3A       		.uleb128 0x3a
 5495 01bf 0B       		.uleb128 0xb
 5496 01c0 3B       		.uleb128 0x3b
 5497 01c1 05       		.uleb128 0x5
 5498 01c2 27       		.uleb128 0x27
 5499 01c3 19       		.uleb128 0x19
 5500 01c4 11       		.uleb128 0x11
 5501 01c5 01       		.uleb128 0x1
 5502 01c6 12       		.uleb128 0x12
 5503 01c7 06       		.uleb128 0x6
 5504 01c8 40       		.uleb128 0x40
 5505 01c9 18       		.uleb128 0x18
 5506 01ca 9742     		.uleb128 0x2117
 5507 01cc 19       		.uleb128 0x19
 5508 01cd 01       		.uleb128 0x1
 5509 01ce 13       		.uleb128 0x13
 5510 01cf 00       		.byte	0
 5511 01d0 00       		.byte	0
 5512 01d1 1A       		.uleb128 0x1a
 5513 01d2 2E       		.uleb128 0x2e
 5514 01d3 01       		.byte	0x1
 5515 01d4 03       		.uleb128 0x3
 5516 01d5 0E       		.uleb128 0xe
 5517 01d6 3A       		.uleb128 0x3a
 5518 01d7 0B       		.uleb128 0xb
 5519 01d8 3B       		.uleb128 0x3b
 5520 01d9 05       		.uleb128 0x5
 5521 01da 27       		.uleb128 0x27
 5522 01db 19       		.uleb128 0x19
 5523 01dc 11       		.uleb128 0x11
 5524 01dd 01       		.uleb128 0x1
 5525 01de 12       		.uleb128 0x12
 5526 01df 06       		.uleb128 0x6
 5527 01e0 40       		.uleb128 0x40
 5528 01e1 18       		.uleb128 0x18
 5529 01e2 9642     		.uleb128 0x2116
 5530 01e4 19       		.uleb128 0x19
 5531 01e5 01       		.uleb128 0x1
 5532 01e6 13       		.uleb128 0x13
 5533 01e7 00       		.byte	0
 5534 01e8 00       		.byte	0
 5535 01e9 1B       		.uleb128 0x1b
 5536 01ea 2E       		.uleb128 0x2e
 5537 01eb 00       		.byte	0
 5538 01ec 03       		.uleb128 0x3
 5539 01ed 0E       		.uleb128 0xe
 5540 01ee 3A       		.uleb128 0x3a
 5541 01ef 0B       		.uleb128 0xb
 5542 01f0 3B       		.uleb128 0x3b
 5543 01f1 05       		.uleb128 0x5
 5544 01f2 27       		.uleb128 0x27
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 168


 5545 01f3 19       		.uleb128 0x19
 5546 01f4 11       		.uleb128 0x11
 5547 01f5 01       		.uleb128 0x1
 5548 01f6 12       		.uleb128 0x12
 5549 01f7 06       		.uleb128 0x6
 5550 01f8 40       		.uleb128 0x40
 5551 01f9 18       		.uleb128 0x18
 5552 01fa 9642     		.uleb128 0x2116
 5553 01fc 19       		.uleb128 0x19
 5554 01fd 00       		.byte	0
 5555 01fe 00       		.byte	0
 5556 01ff 1C       		.uleb128 0x1c
 5557 0200 01       		.uleb128 0x1
 5558 0201 01       		.byte	0x1
 5559 0202 49       		.uleb128 0x49
 5560 0203 13       		.uleb128 0x13
 5561 0204 01       		.uleb128 0x1
 5562 0205 13       		.uleb128 0x13
 5563 0206 00       		.byte	0
 5564 0207 00       		.byte	0
 5565 0208 1D       		.uleb128 0x1d
 5566 0209 21       		.uleb128 0x21
 5567 020a 00       		.byte	0
 5568 020b 49       		.uleb128 0x49
 5569 020c 13       		.uleb128 0x13
 5570 020d 2F       		.uleb128 0x2f
 5571 020e 0B       		.uleb128 0xb
 5572 020f 00       		.byte	0
 5573 0210 00       		.byte	0
 5574 0211 1E       		.uleb128 0x1e
 5575 0212 26       		.uleb128 0x26
 5576 0213 00       		.byte	0
 5577 0214 49       		.uleb128 0x49
 5578 0215 13       		.uleb128 0x13
 5579 0216 00       		.byte	0
 5580 0217 00       		.byte	0
 5581 0218 1F       		.uleb128 0x1f
 5582 0219 34       		.uleb128 0x34
 5583 021a 00       		.byte	0
 5584 021b 03       		.uleb128 0x3
 5585 021c 0E       		.uleb128 0xe
 5586 021d 3A       		.uleb128 0x3a
 5587 021e 0B       		.uleb128 0xb
 5588 021f 3B       		.uleb128 0x3b
 5589 0220 0B       		.uleb128 0xb
 5590 0221 49       		.uleb128 0x49
 5591 0222 13       		.uleb128 0x13
 5592 0223 3F       		.uleb128 0x3f
 5593 0224 19       		.uleb128 0x19
 5594 0225 3C       		.uleb128 0x3c
 5595 0226 19       		.uleb128 0x19
 5596 0227 00       		.byte	0
 5597 0228 00       		.byte	0
 5598 0229 00       		.byte	0
 5599              		.section	.debug_aranges,"",%progbits
 5600 0000 94010000 		.4byte	0x194
 5601 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 169


 5602 0006 00000000 		.4byte	.Ldebug_info0
 5603 000a 04       		.byte	0x4
 5604 000b 00       		.byte	0
 5605 000c 0000     		.2byte	0
 5606 000e 0000     		.2byte	0
 5607 0010 00000000 		.4byte	.LFB0
 5608 0014 4C000000 		.4byte	.LFE0-.LFB0
 5609 0018 00000000 		.4byte	.LFB1
 5610 001c 4C000000 		.4byte	.LFE1-.LFB1
 5611 0020 00000000 		.4byte	.LFB2
 5612 0024 1C000000 		.4byte	.LFE2-.LFB2
 5613 0028 00000000 		.4byte	.LFB3
 5614 002c 60000000 		.4byte	.LFE3-.LFB3
 5615 0030 00000000 		.4byte	.LFB4
 5616 0034 6C000000 		.4byte	.LFE4-.LFB4
 5617 0038 00000000 		.4byte	.LFB5
 5618 003c 20000000 		.4byte	.LFE5-.LFB5
 5619 0040 00000000 		.4byte	.LFB6
 5620 0044 58010000 		.4byte	.LFE6-.LFB6
 5621 0048 00000000 		.4byte	.LFB7
 5622 004c 1C000000 		.4byte	.LFE7-.LFB7
 5623 0050 00000000 		.4byte	.LFB8
 5624 0054 24010000 		.4byte	.LFE8-.LFB8
 5625 0058 00000000 		.4byte	.LFB9
 5626 005c FC000000 		.4byte	.LFE9-.LFB9
 5627 0060 00000000 		.4byte	.LFB10
 5628 0064 4C000000 		.4byte	.LFE10-.LFB10
 5629 0068 00000000 		.4byte	.LFB11
 5630 006c 20000000 		.4byte	.LFE11-.LFB11
 5631 0070 00000000 		.4byte	.LFB12
 5632 0074 54000000 		.4byte	.LFE12-.LFB12
 5633 0078 00000000 		.4byte	.LFB13
 5634 007c 20000000 		.4byte	.LFE13-.LFB13
 5635 0080 00000000 		.4byte	.LFB14
 5636 0084 60000000 		.4byte	.LFE14-.LFB14
 5637 0088 00000000 		.4byte	.LFB15
 5638 008c 1C000000 		.4byte	.LFE15-.LFB15
 5639 0090 00000000 		.4byte	.LFB16
 5640 0094 40000000 		.4byte	.LFE16-.LFB16
 5641 0098 00000000 		.4byte	.LFB17
 5642 009c 40000000 		.4byte	.LFE17-.LFB17
 5643 00a0 00000000 		.4byte	.LFB18
 5644 00a4 34000000 		.4byte	.LFE18-.LFB18
 5645 00a8 00000000 		.4byte	.LFB19
 5646 00ac 20000000 		.4byte	.LFE19-.LFB19
 5647 00b0 00000000 		.4byte	.LFB20
 5648 00b4 50000000 		.4byte	.LFE20-.LFB20
 5649 00b8 00000000 		.4byte	.LFB21
 5650 00bc 34000000 		.4byte	.LFE21-.LFB21
 5651 00c0 00000000 		.4byte	.LFB22
 5652 00c4 5C000000 		.4byte	.LFE22-.LFB22
 5653 00c8 00000000 		.4byte	.LFB23
 5654 00cc 24000000 		.4byte	.LFE23-.LFB23
 5655 00d0 00000000 		.4byte	.LFB24
 5656 00d4 6C000000 		.4byte	.LFE24-.LFB24
 5657 00d8 00000000 		.4byte	.LFB25
 5658 00dc 44000000 		.4byte	.LFE25-.LFB25
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 170


 5659 00e0 00000000 		.4byte	.LFB26
 5660 00e4 60000000 		.4byte	.LFE26-.LFB26
 5661 00e8 00000000 		.4byte	.LFB27
 5662 00ec 6C000000 		.4byte	.LFE27-.LFB27
 5663 00f0 00000000 		.4byte	.LFB28
 5664 00f4 58000000 		.4byte	.LFE28-.LFB28
 5665 00f8 00000000 		.4byte	.LFB29
 5666 00fc 1C000000 		.4byte	.LFE29-.LFB29
 5667 0100 00000000 		.4byte	.LFB30
 5668 0104 90000000 		.4byte	.LFE30-.LFB30
 5669 0108 00000000 		.4byte	.LFB31
 5670 010c 48000000 		.4byte	.LFE31-.LFB31
 5671 0110 00000000 		.4byte	.LFB32
 5672 0114 18000000 		.4byte	.LFE32-.LFB32
 5673 0118 00000000 		.4byte	.LFB33
 5674 011c 40000000 		.4byte	.LFE33-.LFB33
 5675 0120 00000000 		.4byte	.LFB34
 5676 0124 54000000 		.4byte	.LFE34-.LFB34
 5677 0128 00000000 		.4byte	.LFB35
 5678 012c 1C000000 		.4byte	.LFE35-.LFB35
 5679 0130 00000000 		.4byte	.LFB36
 5680 0134 70000000 		.4byte	.LFE36-.LFB36
 5681 0138 00000000 		.4byte	.LFB37
 5682 013c 34000000 		.4byte	.LFE37-.LFB37
 5683 0140 00000000 		.4byte	.LFB38
 5684 0144 40000000 		.4byte	.LFE38-.LFB38
 5685 0148 00000000 		.4byte	.LFB39
 5686 014c 34000000 		.4byte	.LFE39-.LFB39
 5687 0150 00000000 		.4byte	.LFB40
 5688 0154 50000000 		.4byte	.LFE40-.LFB40
 5689 0158 00000000 		.4byte	.LFB41
 5690 015c 3C000000 		.4byte	.LFE41-.LFB41
 5691 0160 00000000 		.4byte	.LFB42
 5692 0164 EC000000 		.4byte	.LFE42-.LFB42
 5693 0168 00000000 		.4byte	.LFB43
 5694 016c 8A000000 		.4byte	.LFE43-.LFB43
 5695 0170 00000000 		.4byte	.LFB44
 5696 0174 98000000 		.4byte	.LFE44-.LFB44
 5697 0178 00000000 		.4byte	.LFB45
 5698 017c 3C000000 		.4byte	.LFE45-.LFB45
 5699 0180 00000000 		.4byte	.LFB46
 5700 0184 68000000 		.4byte	.LFE46-.LFB46
 5701 0188 00000000 		.4byte	.LFB47
 5702 018c B0000000 		.4byte	.LFE47-.LFB47
 5703 0190 00000000 		.4byte	0
 5704 0194 00000000 		.4byte	0
 5705              		.section	.debug_ranges,"",%progbits
 5706              	.Ldebug_ranges0:
 5707 0000 00000000 		.4byte	.LFB0
 5708 0004 4C000000 		.4byte	.LFE0
 5709 0008 00000000 		.4byte	.LFB1
 5710 000c 4C000000 		.4byte	.LFE1
 5711 0010 00000000 		.4byte	.LFB2
 5712 0014 1C000000 		.4byte	.LFE2
 5713 0018 00000000 		.4byte	.LFB3
 5714 001c 60000000 		.4byte	.LFE3
 5715 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 171


 5716 0024 6C000000 		.4byte	.LFE4
 5717 0028 00000000 		.4byte	.LFB5
 5718 002c 20000000 		.4byte	.LFE5
 5719 0030 00000000 		.4byte	.LFB6
 5720 0034 58010000 		.4byte	.LFE6
 5721 0038 00000000 		.4byte	.LFB7
 5722 003c 1C000000 		.4byte	.LFE7
 5723 0040 00000000 		.4byte	.LFB8
 5724 0044 24010000 		.4byte	.LFE8
 5725 0048 00000000 		.4byte	.LFB9
 5726 004c FC000000 		.4byte	.LFE9
 5727 0050 00000000 		.4byte	.LFB10
 5728 0054 4C000000 		.4byte	.LFE10
 5729 0058 00000000 		.4byte	.LFB11
 5730 005c 20000000 		.4byte	.LFE11
 5731 0060 00000000 		.4byte	.LFB12
 5732 0064 54000000 		.4byte	.LFE12
 5733 0068 00000000 		.4byte	.LFB13
 5734 006c 20000000 		.4byte	.LFE13
 5735 0070 00000000 		.4byte	.LFB14
 5736 0074 60000000 		.4byte	.LFE14
 5737 0078 00000000 		.4byte	.LFB15
 5738 007c 1C000000 		.4byte	.LFE15
 5739 0080 00000000 		.4byte	.LFB16
 5740 0084 40000000 		.4byte	.LFE16
 5741 0088 00000000 		.4byte	.LFB17
 5742 008c 40000000 		.4byte	.LFE17
 5743 0090 00000000 		.4byte	.LFB18
 5744 0094 34000000 		.4byte	.LFE18
 5745 0098 00000000 		.4byte	.LFB19
 5746 009c 20000000 		.4byte	.LFE19
 5747 00a0 00000000 		.4byte	.LFB20
 5748 00a4 50000000 		.4byte	.LFE20
 5749 00a8 00000000 		.4byte	.LFB21
 5750 00ac 34000000 		.4byte	.LFE21
 5751 00b0 00000000 		.4byte	.LFB22
 5752 00b4 5C000000 		.4byte	.LFE22
 5753 00b8 00000000 		.4byte	.LFB23
 5754 00bc 24000000 		.4byte	.LFE23
 5755 00c0 00000000 		.4byte	.LFB24
 5756 00c4 6C000000 		.4byte	.LFE24
 5757 00c8 00000000 		.4byte	.LFB25
 5758 00cc 44000000 		.4byte	.LFE25
 5759 00d0 00000000 		.4byte	.LFB26
 5760 00d4 60000000 		.4byte	.LFE26
 5761 00d8 00000000 		.4byte	.LFB27
 5762 00dc 6C000000 		.4byte	.LFE27
 5763 00e0 00000000 		.4byte	.LFB28
 5764 00e4 58000000 		.4byte	.LFE28
 5765 00e8 00000000 		.4byte	.LFB29
 5766 00ec 1C000000 		.4byte	.LFE29
 5767 00f0 00000000 		.4byte	.LFB30
 5768 00f4 90000000 		.4byte	.LFE30
 5769 00f8 00000000 		.4byte	.LFB31
 5770 00fc 48000000 		.4byte	.LFE31
 5771 0100 00000000 		.4byte	.LFB32
 5772 0104 18000000 		.4byte	.LFE32
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 172


 5773 0108 00000000 		.4byte	.LFB33
 5774 010c 40000000 		.4byte	.LFE33
 5775 0110 00000000 		.4byte	.LFB34
 5776 0114 54000000 		.4byte	.LFE34
 5777 0118 00000000 		.4byte	.LFB35
 5778 011c 1C000000 		.4byte	.LFE35
 5779 0120 00000000 		.4byte	.LFB36
 5780 0124 70000000 		.4byte	.LFE36
 5781 0128 00000000 		.4byte	.LFB37
 5782 012c 34000000 		.4byte	.LFE37
 5783 0130 00000000 		.4byte	.LFB38
 5784 0134 40000000 		.4byte	.LFE38
 5785 0138 00000000 		.4byte	.LFB39
 5786 013c 34000000 		.4byte	.LFE39
 5787 0140 00000000 		.4byte	.LFB40
 5788 0144 50000000 		.4byte	.LFE40
 5789 0148 00000000 		.4byte	.LFB41
 5790 014c 3C000000 		.4byte	.LFE41
 5791 0150 00000000 		.4byte	.LFB42
 5792 0154 EC000000 		.4byte	.LFE42
 5793 0158 00000000 		.4byte	.LFB43
 5794 015c 8A000000 		.4byte	.LFE43
 5795 0160 00000000 		.4byte	.LFB44
 5796 0164 98000000 		.4byte	.LFE44
 5797 0168 00000000 		.4byte	.LFB45
 5798 016c 3C000000 		.4byte	.LFE45
 5799 0170 00000000 		.4byte	.LFB46
 5800 0174 68000000 		.4byte	.LFE46
 5801 0178 00000000 		.4byte	.LFB47
 5802 017c B0000000 		.4byte	.LFE47
 5803 0180 00000000 		.4byte	0
 5804 0184 00000000 		.4byte	0
 5805              		.section	.debug_line,"",%progbits
 5806              	.Ldebug_line0:
 5807 0000 1D070000 		.section	.debug_str,"MS",%progbits,1
 5807      02005C00 
 5807      00000201 
 5807      FB0E0D00 
 5807      01010101 
 5808              	.LASF10:
 5809 0000 75696E74 		.ascii	"uint16\000"
 5809      313600
 5810              	.LASF53:
 5811 0007 6C66636C 		.ascii	"lfclkSource\000"
 5811      6B536F75 
 5811      72636500 
 5812              	.LASF118:
 5813 0013 636F756E 		.ascii	"counterIntMaskTbl\000"
 5813      74657249 
 5813      6E744D61 
 5813      736B5462 
 5813      6C00
 5814              	.LASF119:
 5815 0025 63795379 		.ascii	"cySysWdtCallback\000"
 5815      73576474 
 5815      43616C6C 
 5815      6261636B 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 173


 5815      00
 5816              	.LASF68:
 5817 0036 43795379 		.ascii	"CySysWdtSetMode\000"
 5817      73576474 
 5817      5365744D 
 5817      6F646500 
 5818              	.LASF65:
 5819 0046 43795379 		.ascii	"CySysWdtUnlock\000"
 5819      73576474 
 5819      556E6C6F 
 5819      636B00
 5820              	.LASF47:
 5821 0055 6D656173 		.ascii	"measuredIloFreq\000"
 5821      75726564 
 5821      496C6F46 
 5821      72657100 
 5822              	.LASF67:
 5823 0065 636F756E 		.ascii	"counterNum\000"
 5823      7465724E 
 5823      756D00
 5824              	.LASF124:
 5825 0070 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 5825      73436C6B 
 5825      4C66636C 
 5825      6B506F73 
 5825      65646765 
 5826              	.LASF81:
 5827 008a 43795379 		.ascii	"CySysWdtGetCascade\000"
 5827      73576474 
 5827      47657443 
 5827      61736361 
 5827      646500
 5828              	.LASF123:
 5829 009d 43795379 		.ascii	"CySysClkGetLfclkSource\000"
 5829      73436C6B 
 5829      4765744C 
 5829      66636C6B 
 5829      536F7572 
 5830              	.LASF27:
 5831 00b4 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 5831      73436C6B 
 5831      496C6F53 
 5831      74617274 
 5831      4D656173 
 5832              	.LASF114:
 5833 00d0 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 5833      6B506F73 
 5833      65646765 
 5833      57647443 
 5833      6F756E74 
 5834              	.LASF7:
 5835 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 5835      206C6F6E 
 5835      6720756E 
 5835      7369676E 
 5835      65642069 
 5836              	.LASF48:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 174


 5837 0106 63757272 		.ascii	"currentIloTrimValue\000"
 5837      656E7449 
 5837      6C6F5472 
 5837      696D5661 
 5837      6C756500 
 5838              	.LASF80:
 5839 011a 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5839      73436C6B 
 5839      57636F45 
 5839      6E61626C 
 5839      656400
 5840              	.LASF51:
 5841 012d 6572726F 		.ascii	"errorRangeStatus\000"
 5841      7252616E 
 5841      67655374 
 5841      61747573 
 5841      00
 5842              	.LASF24:
 5843 013e 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 5843      73436C6B 
 5843      57636F53 
 5843      65744869 
 5843      6768506F 
 5844              	.LASF6:
 5845 015a 6C6F6E67 		.ascii	"long long int\000"
 5845      206C6F6E 
 5845      6720696E 
 5845      7400
 5846              	.LASF0:
 5847 0168 7369676E 		.ascii	"signed char\000"
 5847      65642063 
 5847      68617200 
 5848              	.LASF96:
 5849 0174 66756E63 		.ascii	"function\000"
 5849      74696F6E 
 5849      00
 5850              	.LASF28:
 5851 017d 696E7465 		.ascii	"interruptState\000"
 5851      72727570 
 5851      74537461 
 5851      746500
 5852              	.LASF21:
 5853 018c 63795764 		.ascii	"cyWdtCallback\000"
 5853      7443616C 
 5853      6C626163 
 5853      6B00
 5854              	.LASF12:
 5855 019a 696E7433 		.ascii	"int32\000"
 5855      3200
 5856              	.LASF49:
 5857 01a0 696C6F41 		.ascii	"iloAccuracyValue\000"
 5857      63637572 
 5857      61637956 
 5857      616C7565 
 5857      00
 5858              	.LASF20:
 5859 01b1 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 175


 5859      79735F74 
 5859      696D6572 
 5859      5F64656C 
 5859      61797479 
 5860              	.LASF86:
 5861 01cd 62697473 		.ascii	"bits\000"
 5861      00
 5862              	.LASF4:
 5863 01d2 6C6F6E67 		.ascii	"long int\000"
 5863      20696E74 
 5863      00
 5864              	.LASF84:
 5865 01db 72656756 		.ascii	"regValue\000"
 5865      616C7565 
 5865      00
 5866              	.LASF61:
 5867 01e4 636C6F63 		.ascii	"clockSel\000"
 5867      6B53656C 
 5867      00
 5868              	.LASF9:
 5869 01ed 75696E74 		.ascii	"uint8\000"
 5869      3800
 5870              	.LASF72:
 5871 01f3 656E6162 		.ascii	"enable\000"
 5871      6C6500
 5872              	.LASF14:
 5873 01fa 646F7562 		.ascii	"double\000"
 5873      6C6500
 5874              	.LASF33:
 5875 0201 636F6D70 		.ascii	"compensatedCycles\000"
 5875      656E7361 
 5875      74656443 
 5875      79636C65 
 5875      7300
 5876              	.LASF26:
 5877 0213 43795379 		.ascii	"CySysClkIloStop\000"
 5877      73436C6B 
 5877      496C6F53 
 5877      746F7000 
 5878              	.LASF34:
 5879 0223 696C6F43 		.ascii	"iloCompensatedCycles\000"
 5879      6F6D7065 
 5879      6E736174 
 5879      65644379 
 5879      636C6573 
 5880              	.LASF94:
 5881 0238 636F756E 		.ascii	"countersMask\000"
 5881      74657273 
 5881      4D61736B 
 5881      00
 5882              	.LASF11:
 5883 0245 75696E74 		.ascii	"uint32\000"
 5883      333200
 5884              	.LASF31:
 5885 024c 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 5885      73436C6B 
 5885      496C6F53 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 176


 5885      746F704D 
 5885      65617375 
 5886              	.LASF25:
 5887 0267 43795379 		.ascii	"CySysClkWcoSetLowPowerMode\000"
 5887      73436C6B 
 5887      57636F53 
 5887      65744C6F 
 5887      77506F77 
 5888              	.LASF97:
 5889 0282 70726576 		.ascii	"prevCallback\000"
 5889      43616C6C 
 5889      6261636B 
 5889      00
 5890              	.LASF82:
 5891 028f 43795379 		.ascii	"CySysWdtSetMatch\000"
 5891      73576474 
 5891      5365744D 
 5891      61746368 
 5891      00
 5892              	.LASF79:
 5893 02a0 636F756E 		.ascii	"countersEnableStatus\000"
 5893      74657273 
 5893      456E6162 
 5893      6C655374 
 5893      61747573 
 5894              	.LASF117:
 5895 02b5 77647449 		.ascii	"wdtIsrMask\000"
 5895      73724D61 
 5895      736B00
 5896              	.LASF74:
 5897 02c0 43795379 		.ascii	"CySysWdtEnable\000"
 5897      73576474 
 5897      456E6162 
 5897      6C6500
 5898              	.LASF95:
 5899 02cf 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 5899      73576474 
 5899      53657449 
 5899      6E746572 
 5899      72757074 
 5900              	.LASF75:
 5901 02ec 636F756E 		.ascii	"counterMask\000"
 5901      7465724D 
 5901      61736B00 
 5902              	.LASF73:
 5903 02f8 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 5903      73576474 
 5903      47657443 
 5903      6C656172 
 5903      4F6E4D61 
 5904              	.LASF8:
 5905 0310 756E7369 		.ascii	"unsigned int\000"
 5905      676E6564 
 5905      20696E74 
 5905      00
 5906              	.LASF54:
 5907 031d 43795379 		.ascii	"CySysClkSetLfclkSource\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 177


 5907      73436C6B 
 5907      5365744C 
 5907      66636C6B 
 5907      536F7572 
 5908              	.LASF104:
 5909 0334 66697273 		.ascii	"firstCount\000"
 5909      74436F75 
 5909      6E7400
 5910              	.LASF99:
 5911 033f 72657443 		.ascii	"retCallback\000"
 5911      616C6C62 
 5911      61636B00 
 5912              	.LASF32:
 5913 034b 64657369 		.ascii	"desiredDelay\000"
 5913      72656444 
 5913      656C6179 
 5913      00
 5914              	.LASF5:
 5915 0358 6C6F6E67 		.ascii	"long unsigned int\000"
 5915      20756E73 
 5915      69676E65 
 5915      6420696E 
 5915      7400
 5916              	.LASF110:
 5917 036a 6D617463 		.ascii	"matchValue\000"
 5917      6856616C 
 5917      756500
 5918              	.LASF106:
 5919 0375 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 5919      73436C6B 
 5919      4C66636C 
 5919      6B506F73 
 5919      65646765 
 5920              	.LASF100:
 5921 0391 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 5921      73576474 
 5921      456E6162 
 5921      6C65436F 
 5921      756E7465 
 5922              	.LASF50:
 5923 03aa 7472696D 		.ascii	"trimStep\000"
 5923      53746570 
 5923      00
 5924              	.LASF3:
 5925 03b3 73686F72 		.ascii	"short unsigned int\000"
 5925      7420756E 
 5925      7369676E 
 5925      65642069 
 5925      6E7400
 5926              	.LASF66:
 5927 03c6 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 5927      73576474 
 5927      47657445 
 5927      6E61626C 
 5927      65645374 
 5928              	.LASF98:
 5929 03df 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 178


 5929      73576474 
 5929      47657449 
 5929      6E746572 
 5929      72757074 
 5930              	.LASF29:
 5931 03fc 696C6F54 		.ascii	"iloTrimTrig\000"
 5931      72696D54 
 5931      72696700 
 5932              	.LASF46:
 5933 0408 43795379 		.ascii	"CySysClkIloUpdateTrimReg\000"
 5933      73436C6B 
 5933      496C6F55 
 5933      70646174 
 5933      65547269 
 5934              	.LASF30:
 5935 0421 43795379 		.ascii	"CySysClkIloStart\000"
 5935      73436C6B 
 5935      496C6F53 
 5935      74617274 
 5935      00
 5936              	.LASF85:
 5937 0432 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 5937      73576474 
 5937      53657454 
 5937      6F67676C 
 5937      65426974 
 5938              	.LASF59:
 5939 0447 706F7765 		.ascii	"powerModeStatus\000"
 5939      724D6F64 
 5939      65537461 
 5939      74757300 
 5940              	.LASF120:
 5941 0457 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5941      43313120 
 5941      352E342E 
 5941      31203230 
 5941      31363036 
 5942 048a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5942      20726576 
 5942      6973696F 
 5942      6E203233 
 5942      37373135 
 5943 04bd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5943      66756E63 
 5943      74696F6E 
 5943      2D736563 
 5943      74696F6E 
 5944              	.LASF103:
 5945 04e5 43795379 		.ascii	"CySysWatchdogFeed\000"
 5945      73576174 
 5945      6368646F 
 5945      67466565 
 5945      6400
 5946              	.LASF78:
 5947 04f7 63617363 		.ascii	"cascadeMask\000"
 5947      6164654D 
 5947      61736B00 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 179


 5948              	.LASF17:
 5949 0503 72656733 		.ascii	"reg32\000"
 5949      3200
 5950              	.LASF113:
 5951 0509 64656661 		.ascii	"defaultIloTrimRegValue\000"
 5951      756C7449 
 5951      6C6F5472 
 5951      696D5265 
 5951      6756616C 
 5952              	.LASF112:
 5953 0520 746D7056 		.ascii	"tmpValue\000"
 5953      616C7565 
 5953      00
 5954              	.LASF38:
 5955 0529 72657475 		.ascii	"returnStatus\000"
 5955      726E5374 
 5955      61747573 
 5955      00
 5956              	.LASF55:
 5957 0536 736F7572 		.ascii	"source\000"
 5957      636500
 5958              	.LASF60:
 5959 053d 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 5959      73436C6B 
 5959      57636F43 
 5959      6C6F636B 
 5959      4F757453 
 5960              	.LASF23:
 5961 0557 73697A65 		.ascii	"sizetype\000"
 5961      74797065 
 5961      00
 5962              	.LASF22:
 5963 0560 6C6F6E67 		.ascii	"long double\000"
 5963      20646F75 
 5963      626C6500 
 5964              	.LASF88:
 5965 056c 43795379 		.ascii	"CySysWdtGetMatch\000"
 5965      73576474 
 5965      4765744D 
 5965      61746368 
 5965      00
 5966              	.LASF83:
 5967 057d 6D617463 		.ascii	"match\000"
 5967      6800
 5968              	.LASF52:
 5969 0583 43795379 		.ascii	"CySysClkIloRestoreFactoryTrim\000"
 5969      73436C6B 
 5969      496C6F52 
 5969      6573746F 
 5969      72654661 
 5970              	.LASF18:
 5971 05a1 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 5971      59535F54 
 5971      494D4552 
 5971      5F574149 
 5971      5400
 5972              	.LASF37:
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 180


 5973 05b3 63686563 		.ascii	"checkStatus\000"
 5973      6B537461 
 5973      74757300 
 5974              	.LASF125:
 5975 05bf 63796465 		.ascii	"cydelayFreqHz\000"
 5975      6C617946 
 5975      72657148 
 5975      7A00
 5976              	.LASF93:
 5977 05cd 43795379 		.ascii	"CySysWdtResetCounters\000"
 5977      73576474 
 5977      52657365 
 5977      74436F75 
 5977      6E746572 
 5978              	.LASF44:
 5979 05e3 77616974 		.ascii	"waitUntilCntr1Stops\000"
 5979      556E7469 
 5979      6C436E74 
 5979      72315374 
 5979      6F707300 
 5980              	.LASF91:
 5981 05f7 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 5981      73576474 
 5981      436C6561 
 5981      72496E74 
 5981      65727275 
 5982              	.LASF122:
 5983 060e 433A5C55 		.ascii	"C:\\Users\\User\\Desktop\\Hi\\Demo1\\DS18x8_demo.cy"
 5983      73657273 
 5983      5C557365 
 5983      725C4465 
 5983      736B746F 
 5984 063b 64736E00 		.ascii	"dsn\000"
 5985              	.LASF111:
 5986 063f 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 5986      7354696D 
 5986      65724465 
 5986      6C617955 
 5986      6E74696C 
 5987              	.LASF107:
 5988 0659 43795379 		.ascii	"CySysTimerDelay\000"
 5988      7354696D 
 5988      65724465 
 5988      6C617900 
 5989              	.LASF64:
 5990 0669 43795379 		.ascii	"CySysWdtLocked\000"
 5990      73576474 
 5990      4C6F636B 
 5990      656400
 5991              	.LASF1:
 5992 0678 756E7369 		.ascii	"unsigned char\000"
 5992      676E6564 
 5992      20636861 
 5992      7200
 5993              	.LASF36:
 5994 0686 636F6D70 		.ascii	"compensateRunningStatus\000"
 5994      656E7361 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 181


 5994      74655275 
 5994      6E6E696E 
 5994      67537461 
 5995              	.LASF105:
 5996 069e 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 5996      6B506F73 
 5996      65646765 
 5996      456E6162 
 5996      6C656457 
 5997              	.LASF109:
 5998 06bc 64656C61 		.ascii	"delay\000"
 5998      7900
 5999              	.LASF2:
 6000 06c2 73686F72 		.ascii	"short int\000"
 6000      7420696E 
 6000      7400
 6001              	.LASF108:
 6002 06cc 64656C61 		.ascii	"delayType\000"
 6002      79547970 
 6002      6500
 6003              	.LASF76:
 6004 06d6 43795379 		.ascii	"CySysWdtDisable\000"
 6004      73576474 
 6004      44697361 
 6004      626C6500 
 6005              	.LASF40:
 6006 06e6 43795379 		.ascii	"CySysClkIloTrim\000"
 6006      73436C6B 
 6006      496C6F54 
 6006      72696D00 
 6007              	.LASF63:
 6008 06f6 43795379 		.ascii	"CySysClkIloEnabled\000"
 6008      73436C6B 
 6008      496C6F45 
 6008      6E61626C 
 6008      656400
 6009              	.LASF90:
 6010 0709 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 6010      73576474 
 6010      47657449 
 6010      6E746572 
 6010      72757074 
 6011              	.LASF121:
 6012 0724 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 6012      72617465 
 6012      645F536F 
 6012      75726365 
 6012      5C50536F 
 6013              	.LASF42:
 6014 0745 696C6F41 		.ascii	"iloAccuracyInPPT\000"
 6014      63637572 
 6014      61637949 
 6014      6E505054 
 6014      00
 6015              	.LASF57:
 6016 0756 43795379 		.ascii	"CySysClkWcoStop\000"
 6016      73436C6B 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 182


 6016      57636F53 
 6016      746F7000 
 6017              	.LASF58:
 6018 0766 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 6018      73436C6B 
 6018      57636F53 
 6018      6574506F 
 6018      7765724D 
 6019              	.LASF101:
 6020 077e 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 6020      73576474 
 6020      44697361 
 6020      626C6543 
 6020      6F756E74 
 6021              	.LASF15:
 6022 0798 63686172 		.ascii	"char\000"
 6022      00
 6023              	.LASF41:
 6024 079d 6D6F6465 		.ascii	"mode\000"
 6024      00
 6025              	.LASF89:
 6026 07a2 43795379 		.ascii	"CySysWdtGetCount\000"
 6026      73576474 
 6026      47657443 
 6026      6F756E74 
 6026      00
 6027              	.LASF62:
 6028 07b3 43795379 		.ascii	"CySysWdtLock\000"
 6028      73576474 
 6028      4C6F636B 
 6028      00
 6029              	.LASF116:
 6030 07c0 64697361 		.ascii	"disableServicedIsr\000"
 6030      626C6553 
 6030      65727669 
 6030      63656449 
 6030      737200
 6031              	.LASF71:
 6032 07d3 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 6032      73576474 
 6032      53657443 
 6032      6C656172 
 6032      4F6E4D61 
 6033              	.LASF77:
 6034 07eb 43795379 		.ascii	"CySysWdtSetCascade\000"
 6034      73576474 
 6034      53657443 
 6034      61736361 
 6034      646500
 6035              	.LASF43:
 6036 07fe 74696D65 		.ascii	"timeOutClocks\000"
 6036      4F757443 
 6036      6C6F636B 
 6036      7300
 6037              	.LASF45:
 6038 080c 7472696D 		.ascii	"trimRunningStatus\000"
 6038      52756E6E 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 183


 6038      696E6753 
 6038      74617475 
 6038      7300
 6039              	.LASF70:
 6040 081e 43795379 		.ascii	"CySysWdtGetMode\000"
 6040      73576474 
 6040      4765744D 
 6040      6F646500 
 6041              	.LASF35:
 6042 082e 64657369 		.ascii	"desiredDelayInCounts\000"
 6042      72656444 
 6042      656C6179 
 6042      496E436F 
 6042      756E7473 
 6043              	.LASF56:
 6044 0843 43795379 		.ascii	"CySysClkWcoStart\000"
 6044      73436C6B 
 6044      57636F53 
 6044      74617274 
 6044      00
 6045              	.LASF92:
 6046 0854 7764744C 		.ascii	"wdtLockState\000"
 6046      6F636B53 
 6046      74617465 
 6046      00
 6047              	.LASF69:
 6048 0861 636F6E66 		.ascii	"configRegValue\000"
 6048      69675265 
 6048      6756616C 
 6048      756500
 6049              	.LASF115:
 6050 0870 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 6050      6B506F73 
 6050      65646765 
 6050      57647443 
 6050      6F756E74 
 6051              	.LASF13:
 6052 088c 666C6F61 		.ascii	"float\000"
 6052      7400
 6053              	.LASF16:
 6054 0892 63797374 		.ascii	"cystatus\000"
 6054      61747573 
 6054      00
 6055              	.LASF102:
 6056 089b 43795379 		.ascii	"CySysWdtIsr\000"
 6056      73576474 
 6056      49737200 
 6057              	.LASF87:
 6058 08a7 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 6058      73576474 
 6058      47657454 
 6058      6F67676C 
 6058      65426974 
 6059              	.LASF39:
 6060 08bc 43795379 		.ascii	"CySysClkIloCompensate\000"
 6060      73436C6B 
 6060      496C6F43 
ARM GAS  C:\Users\User\AppData\Local\Temp\cch6WLoh.s 			page 184


 6060      6F6D7065 
 6060      6E736174 
 6061              	.LASF19:
 6062 08d2 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 6062      59535F54 
 6062      494D4552 
 6062      5F494E54 
 6062      45525255 
 6063              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
